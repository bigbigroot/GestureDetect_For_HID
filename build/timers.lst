ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"timers.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	prvGetNextExpireTime:
  25              	.LVL0:
  26              	.LFB18:
  27              		.file 1 "os/timers.c"
   1:os/timers.c   **** /*
   2:os/timers.c   ****  * FreeRTOS Kernel V10.4.3
   3:os/timers.c   ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:os/timers.c   ****  *
   5:os/timers.c   ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:os/timers.c   ****  * this software and associated documentation files (the "Software"), to deal in
   7:os/timers.c   ****  * the Software without restriction, including without limitation the rights to
   8:os/timers.c   ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:os/timers.c   ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:os/timers.c   ****  * subject to the following conditions:
  11:os/timers.c   ****  *
  12:os/timers.c   ****  * The above copyright notice and this permission notice shall be included in all
  13:os/timers.c   ****  * copies or substantial portions of the Software.
  14:os/timers.c   ****  *
  15:os/timers.c   ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:os/timers.c   ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:os/timers.c   ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:os/timers.c   ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:os/timers.c   ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:os/timers.c   ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:os/timers.c   ****  *
  22:os/timers.c   ****  * https://www.FreeRTOS.org
  23:os/timers.c   ****  * https://github.com/FreeRTOS
  24:os/timers.c   ****  *
  25:os/timers.c   ****  */
  26:os/timers.c   **** 
  27:os/timers.c   **** /* Standard includes. */
  28:os/timers.c   **** #include <stdlib.h>
  29:os/timers.c   **** 
  30:os/timers.c   **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:os/timers.c   ****  * all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 2


  32:os/timers.c   ****  * task.h is included from an application file. */
  33:os/timers.c   **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:os/timers.c   **** 
  35:os/timers.c   **** #include "FreeRTOS.h"
  36:os/timers.c   **** #include "task.h"
  37:os/timers.c   **** #include "queue.h"
  38:os/timers.c   **** #include "timers.h"
  39:os/timers.c   **** 
  40:os/timers.c   **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  41:os/timers.c   ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  42:os/timers.c   **** #endif
  43:os/timers.c   **** 
  44:os/timers.c   **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:os/timers.c   ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:os/timers.c   ****  * for the header files above, but not in this file, in order to generate the
  47:os/timers.c   ****  * correct privileged Vs unprivileged linkage and placement. */
  48:os/timers.c   **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  49:os/timers.c   **** 
  50:os/timers.c   **** 
  51:os/timers.c   **** /* This entire source file will be skipped if the application is not configured
  52:os/timers.c   ****  * to include software timer functionality.  This #if is closed at the very bottom
  53:os/timers.c   ****  * of this file.  If you want to include software timer functionality then ensure
  54:os/timers.c   ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  55:os/timers.c   **** #if ( configUSE_TIMERS == 1 )
  56:os/timers.c   **** 
  57:os/timers.c   **** /* Misc definitions. */
  58:os/timers.c   ****     #define tmrNO_DELAY    ( TickType_t ) 0U
  59:os/timers.c   **** 
  60:os/timers.c   **** /* The name assigned to the timer service task.  This can be overridden by
  61:os/timers.c   ****  * defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  62:os/timers.c   ****     #ifndef configTIMER_SERVICE_TASK_NAME
  63:os/timers.c   ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  64:os/timers.c   ****     #endif
  65:os/timers.c   **** 
  66:os/timers.c   **** /* Bit definitions used in the ucStatus member of a timer structure. */
  67:os/timers.c   ****     #define tmrSTATUS_IS_ACTIVE                  ( ( uint8_t ) 0x01 )
  68:os/timers.c   ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 0x02 )
  69:os/timers.c   ****     #define tmrSTATUS_IS_AUTORELOAD              ( ( uint8_t ) 0x04 )
  70:os/timers.c   **** 
  71:os/timers.c   **** /* The definition of the timers themselves. */
  72:os/timers.c   ****     typedef struct tmrTimerControl                  /* The old naming convention is used to prevent
  73:os/timers.c   ****     {
  74:os/timers.c   ****         const char * pcTimerName;                   /*<< Text name.  This is not used by the kernel
  75:os/timers.c   ****         ListItem_t xTimerListItem;                  /*<< Standard linked list item as used by all k
  76:os/timers.c   ****         TickType_t xTimerPeriodInTicks;             /*<< How quickly and often the timer expires. *
  77:os/timers.c   ****         void * pvTimerID;                           /*<< An ID to identify the timer.  This allows 
  78:os/timers.c   ****         TimerCallbackFunction_t pxCallbackFunction; /*<< The function that will be called when the 
  79:os/timers.c   ****         #if ( configUSE_TRACE_FACILITY == 1 )
  80:os/timers.c   ****             UBaseType_t uxTimerNumber;              /*<< An ID assigned by trace tools such as Free
  81:os/timers.c   ****         #endif
  82:os/timers.c   ****         uint8_t ucStatus;                           /*<< Holds bits to say if the timer was statica
  83:os/timers.c   ****     } xTIMER;
  84:os/timers.c   **** 
  85:os/timers.c   **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:os/timers.c   ****  * name below to enable the use of older kernel aware debuggers. */
  87:os/timers.c   ****     typedef xTIMER Timer_t;
  88:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 3


  89:os/timers.c   **** /* The definition of messages that can be sent and received on the timer queue.
  90:os/timers.c   ****  * Two types of message can be queued - messages that manipulate a software timer,
  91:os/timers.c   ****  * and messages that request the execution of a non-timer related callback.  The
  92:os/timers.c   ****  * two message types are defined in two separate structures, xTimerParametersType
  93:os/timers.c   ****  * and xCallbackParametersType respectively. */
  94:os/timers.c   ****     typedef struct tmrTimerParameters
  95:os/timers.c   ****     {
  96:os/timers.c   ****         TickType_t xMessageValue; /*<< An optional value used by a subset of commands, for example,
  97:os/timers.c   ****         Timer_t * pxTimer;        /*<< The timer to which the command will be applied. */
  98:os/timers.c   ****     } TimerParameter_t;
  99:os/timers.c   **** 
 100:os/timers.c   **** 
 101:os/timers.c   ****     typedef struct tmrCallbackParameters
 102:os/timers.c   ****     {
 103:os/timers.c   ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 104:os/timers.c   ****         void * pvParameter1;                 /* << The value that will be used as the callback func
 105:os/timers.c   ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 106:os/timers.c   ****     } CallbackParameters_t;
 107:os/timers.c   **** 
 108:os/timers.c   **** /* The structure that contains the two message types, along with an identifier
 109:os/timers.c   ****  * that is used to determine which message type is valid. */
 110:os/timers.c   ****     typedef struct tmrTimerQueueMessage
 111:os/timers.c   ****     {
 112:os/timers.c   ****         BaseType_t xMessageID; /*<< The command being sent to the timer service task. */
 113:os/timers.c   ****         union
 114:os/timers.c   ****         {
 115:os/timers.c   ****             TimerParameter_t xTimerParameters;
 116:os/timers.c   **** 
 117:os/timers.c   ****             /* Don't include xCallbackParameters if it is not going to be used as
 118:os/timers.c   ****              * it makes the structure (and therefore the timer queue) larger. */
 119:os/timers.c   ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:os/timers.c   ****                 CallbackParameters_t xCallbackParameters;
 121:os/timers.c   ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 122:os/timers.c   ****         } u;
 123:os/timers.c   ****     } DaemonTaskMessage_t;
 124:os/timers.c   **** 
 125:os/timers.c   **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:os/timers.c   ****  * which static variables must be declared volatile. */
 127:os/timers.c   **** 
 128:os/timers.c   **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:os/timers.c   ****  * time order, with the nearest expiry time at the front of the list.  Only the
 130:os/timers.c   ****  * timer service task is allowed to access these lists.
 131:os/timers.c   ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 132:os/timers.c   ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 133:os/timers.c   ****  * static qualifier. */
 134:os/timers.c   ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 135:os/timers.c   ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
 136:os/timers.c   ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 137:os/timers.c   ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 138:os/timers.c   **** 
 139:os/timers.c   **** /* A queue that is used to send commands to the timer service task. */
 140:os/timers.c   ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 141:os/timers.c   ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 142:os/timers.c   **** 
 143:os/timers.c   **** /*lint -restore */
 144:os/timers.c   **** 
 145:os/timers.c   **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 4


 146:os/timers.c   **** 
 147:os/timers.c   **** /*
 148:os/timers.c   ****  * Initialise the infrastructure used by the timer service task if it has not
 149:os/timers.c   ****  * been initialised already.
 150:os/timers.c   ****  */
 151:os/timers.c   ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 152:os/timers.c   **** 
 153:os/timers.c   **** /*
 154:os/timers.c   ****  * The timer service task (daemon).  Timer functionality is controlled by this
 155:os/timers.c   ****  * task.  Other tasks communicate with the timer service task using the
 156:os/timers.c   ****  * xTimerQueue queue.
 157:os/timers.c   ****  */
 158:os/timers.c   ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 159:os/timers.c   **** 
 160:os/timers.c   **** /*
 161:os/timers.c   ****  * Called by the timer service task to interpret and process a command it
 162:os/timers.c   ****  * received on the timer queue.
 163:os/timers.c   ****  */
 164:os/timers.c   ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 165:os/timers.c   **** 
 166:os/timers.c   **** /*
 167:os/timers.c   ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 168:os/timers.c   ****  * depending on if the expire time causes a timer counter overflow.
 169:os/timers.c   ****  */
 170:os/timers.c   ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 171:os/timers.c   ****                                                   const TickType_t xNextExpiryTime,
 172:os/timers.c   ****                                                   const TickType_t xTimeNow,
 173:os/timers.c   ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 174:os/timers.c   **** 
 175:os/timers.c   **** /*
 176:os/timers.c   ****  * An active timer has reached its expire time.  Reload the timer if it is an
 177:os/timers.c   ****  * auto-reload timer, then call its callback.
 178:os/timers.c   ****  */
 179:os/timers.c   ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 180:os/timers.c   ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 181:os/timers.c   **** 
 182:os/timers.c   **** /*
 183:os/timers.c   ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 184:os/timers.c   ****  * current timer list does not still reference some timers.
 185:os/timers.c   ****  */
 186:os/timers.c   ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 187:os/timers.c   **** 
 188:os/timers.c   **** /*
 189:os/timers.c   ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 190:os/timers.c   ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 191:os/timers.c   ****  */
 192:os/timers.c   ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 193:os/timers.c   **** 
 194:os/timers.c   **** /*
 195:os/timers.c   ****  * If the timer list contains any active timers then return the expire time of
 196:os/timers.c   ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 197:os/timers.c   ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 198:os/timers.c   ****  * to pdTRUE.
 199:os/timers.c   ****  */
 200:os/timers.c   ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 201:os/timers.c   **** 
 202:os/timers.c   **** /*
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 5


 203:os/timers.c   ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 204:os/timers.c   ****  * until either a timer does expire or a command is received.
 205:os/timers.c   ****  */
 206:os/timers.c   ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 207:os/timers.c   ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 208:os/timers.c   **** 
 209:os/timers.c   **** /*
 210:os/timers.c   ****  * Called after a Timer_t structure has been allocated either statically or
 211:os/timers.c   ****  * dynamically to fill in the structure's members.
 212:os/timers.c   ****  */
 213:os/timers.c   ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 214:os/timers.c   ****                                        const TickType_t xTimerPeriodInTicks,
 215:os/timers.c   ****                                        const UBaseType_t uxAutoReload,
 216:os/timers.c   ****                                        void * const pvTimerID,
 217:os/timers.c   ****                                        TimerCallbackFunction_t pxCallbackFunction,
 218:os/timers.c   ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 219:os/timers.c   **** /*-----------------------------------------------------------*/
 220:os/timers.c   **** 
 221:os/timers.c   ****     BaseType_t xTimerCreateTimerTask( void )
 222:os/timers.c   ****     {
 223:os/timers.c   ****         BaseType_t xReturn = pdFAIL;
 224:os/timers.c   **** 
 225:os/timers.c   ****         /* This function is called when the scheduler is started if
 226:os/timers.c   ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 227:os/timers.c   ****          * timer service task has been created/initialised.  If timers have already
 228:os/timers.c   ****          * been created then the initialisation will already have been performed. */
 229:os/timers.c   ****         prvCheckForValidListAndQueue();
 230:os/timers.c   **** 
 231:os/timers.c   ****         if( xTimerQueue != NULL )
 232:os/timers.c   ****         {
 233:os/timers.c   ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 234:os/timers.c   ****                 {
 235:os/timers.c   ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 236:os/timers.c   ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 237:os/timers.c   ****                     uint32_t ulTimerTaskStackSize;
 238:os/timers.c   **** 
 239:os/timers.c   ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
 240:os/timers.c   ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 241:os/timers.c   ****                                                           configTIMER_SERVICE_TASK_NAME,
 242:os/timers.c   ****                                                           ulTimerTaskStackSize,
 243:os/timers.c   ****                                                           NULL,
 244:os/timers.c   ****                                                           ( ( UBaseType_t ) configTIMER_TASK_PRIORI
 245:os/timers.c   ****                                                           pxTimerTaskStackBuffer,
 246:os/timers.c   ****                                                           pxTimerTaskTCBBuffer );
 247:os/timers.c   **** 
 248:os/timers.c   ****                     if( xTimerTaskHandle != NULL )
 249:os/timers.c   ****                     {
 250:os/timers.c   ****                         xReturn = pdPASS;
 251:os/timers.c   ****                     }
 252:os/timers.c   ****                 }
 253:os/timers.c   ****             #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 254:os/timers.c   ****                 {
 255:os/timers.c   ****                     xReturn = xTaskCreate( prvTimerTask,
 256:os/timers.c   ****                                            configTIMER_SERVICE_TASK_NAME,
 257:os/timers.c   ****                                            configTIMER_TASK_STACK_DEPTH,
 258:os/timers.c   ****                                            NULL,
 259:os/timers.c   ****                                            ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIV
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 6


 260:os/timers.c   ****                                            &xTimerTaskHandle );
 261:os/timers.c   ****                 }
 262:os/timers.c   ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 263:os/timers.c   ****         }
 264:os/timers.c   ****         else
 265:os/timers.c   ****         {
 266:os/timers.c   ****             mtCOVERAGE_TEST_MARKER();
 267:os/timers.c   ****         }
 268:os/timers.c   **** 
 269:os/timers.c   ****         configASSERT( xReturn );
 270:os/timers.c   ****         return xReturn;
 271:os/timers.c   ****     }
 272:os/timers.c   **** /*-----------------------------------------------------------*/
 273:os/timers.c   **** 
 274:os/timers.c   ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 275:os/timers.c   **** 
 276:os/timers.c   ****         TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char t
 277:os/timers.c   ****                                     const TickType_t xTimerPeriodInTicks,
 278:os/timers.c   ****                                     const UBaseType_t uxAutoReload,
 279:os/timers.c   ****                                     void * const pvTimerID,
 280:os/timers.c   ****                                     TimerCallbackFunction_t pxCallbackFunction )
 281:os/timers.c   ****         {
 282:os/timers.c   ****             Timer_t * pxNewTimer;
 283:os/timers.c   **** 
 284:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All 
 285:os/timers.c   **** 
 286:os/timers.c   ****             if( pxNewTimer != NULL )
 287:os/timers.c   ****             {
 288:os/timers.c   ****                 /* Status is thus far zero as the timer is not created statically
 289:os/timers.c   ****                  * and has not been started.  The auto-reload bit may get set in
 290:os/timers.c   ****                  * prvInitialiseNewTimer. */
 291:os/timers.c   ****                 pxNewTimer->ucStatus = 0x00;
 292:os/timers.c   ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 293:os/timers.c   ****             }
 294:os/timers.c   **** 
 295:os/timers.c   ****             return pxNewTimer;
 296:os/timers.c   ****         }
 297:os/timers.c   **** 
 298:os/timers.c   ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 299:os/timers.c   **** /*-----------------------------------------------------------*/
 300:os/timers.c   **** 
 301:os/timers.c   ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:os/timers.c   **** 
 303:os/timers.c   ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified 
 304:os/timers.c   ****                                           const TickType_t xTimerPeriodInTicks,
 305:os/timers.c   ****                                           const UBaseType_t uxAutoReload,
 306:os/timers.c   ****                                           void * const pvTimerID,
 307:os/timers.c   ****                                           TimerCallbackFunction_t pxCallbackFunction,
 308:os/timers.c   ****                                           StaticTimer_t * pxTimerBuffer )
 309:os/timers.c   ****         {
 310:os/timers.c   ****             Timer_t * pxNewTimer;
 311:os/timers.c   **** 
 312:os/timers.c   ****             #if ( configASSERT_DEFINED == 1 )
 313:os/timers.c   ****                 {
 314:os/timers.c   ****                     /* Sanity check that the size of the structure used to declare a
 315:os/timers.c   ****                      * variable of type StaticTimer_t equals the size of the real timer
 316:os/timers.c   ****                      * structure. */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 7


 317:os/timers.c   ****                     volatile size_t xSize = sizeof( StaticTimer_t );
 318:os/timers.c   ****                     configASSERT( xSize == sizeof( Timer_t ) );
 319:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 320:os/timers.c   ****                 }
 321:os/timers.c   ****             #endif /* configASSERT_DEFINED */
 322:os/timers.c   **** 
 323:os/timers.c   ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 324:os/timers.c   ****             configASSERT( pxTimerBuffer );
 325:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 326:os/timers.c   **** 
 327:os/timers.c   ****             if( pxNewTimer != NULL )
 328:os/timers.c   ****             {
 329:os/timers.c   ****                 /* Timers can be created statically or dynamically so note this
 330:os/timers.c   ****                  * timer was created statically in case it is later deleted.  The
 331:os/timers.c   ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 332:os/timers.c   ****                 pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 333:os/timers.c   **** 
 334:os/timers.c   ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 335:os/timers.c   ****             }
 336:os/timers.c   **** 
 337:os/timers.c   ****             return pxNewTimer;
 338:os/timers.c   ****         }
 339:os/timers.c   **** 
 340:os/timers.c   ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 341:os/timers.c   **** /*-----------------------------------------------------------*/
 342:os/timers.c   **** 
 343:os/timers.c   ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 344:os/timers.c   ****                                        const TickType_t xTimerPeriodInTicks,
 345:os/timers.c   ****                                        const UBaseType_t uxAutoReload,
 346:os/timers.c   ****                                        void * const pvTimerID,
 347:os/timers.c   ****                                        TimerCallbackFunction_t pxCallbackFunction,
 348:os/timers.c   ****                                        Timer_t * pxNewTimer )
 349:os/timers.c   ****     {
 350:os/timers.c   ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 351:os/timers.c   ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 352:os/timers.c   **** 
 353:os/timers.c   ****         if( pxNewTimer != NULL )
 354:os/timers.c   ****         {
 355:os/timers.c   ****             /* Ensure the infrastructure used by the timer service task has been
 356:os/timers.c   ****              * created/initialised. */
 357:os/timers.c   ****             prvCheckForValidListAndQueue();
 358:os/timers.c   **** 
 359:os/timers.c   ****             /* Initialise the timer structure members using the function
 360:os/timers.c   ****              * parameters. */
 361:os/timers.c   ****             pxNewTimer->pcTimerName = pcTimerName;
 362:os/timers.c   ****             pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 363:os/timers.c   ****             pxNewTimer->pvTimerID = pvTimerID;
 364:os/timers.c   ****             pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 365:os/timers.c   ****             vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 366:os/timers.c   **** 
 367:os/timers.c   ****             if( uxAutoReload != pdFALSE )
 368:os/timers.c   ****             {
 369:os/timers.c   ****                 pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 370:os/timers.c   ****             }
 371:os/timers.c   **** 
 372:os/timers.c   ****             traceTIMER_CREATE( pxNewTimer );
 373:os/timers.c   ****         }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 8


 374:os/timers.c   ****     }
 375:os/timers.c   **** /*-----------------------------------------------------------*/
 376:os/timers.c   **** 
 377:os/timers.c   ****     BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
 378:os/timers.c   ****                                      const BaseType_t xCommandID,
 379:os/timers.c   ****                                      const TickType_t xOptionalValue,
 380:os/timers.c   ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 381:os/timers.c   ****                                      const TickType_t xTicksToWait )
 382:os/timers.c   ****     {
 383:os/timers.c   ****         BaseType_t xReturn = pdFAIL;
 384:os/timers.c   ****         DaemonTaskMessage_t xMessage;
 385:os/timers.c   **** 
 386:os/timers.c   ****         configASSERT( xTimer );
 387:os/timers.c   **** 
 388:os/timers.c   ****         /* Send a message to the timer service task to perform a particular action
 389:os/timers.c   ****          * on a particular timer definition. */
 390:os/timers.c   ****         if( xTimerQueue != NULL )
 391:os/timers.c   ****         {
 392:os/timers.c   ****             /* Send a command to the timer service task to start the xTimer timer. */
 393:os/timers.c   ****             xMessage.xMessageID = xCommandID;
 394:os/timers.c   ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:os/timers.c   ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:os/timers.c   **** 
 397:os/timers.c   ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:os/timers.c   ****             {
 399:os/timers.c   ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:os/timers.c   ****                 {
 401:os/timers.c   ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:os/timers.c   ****                 }
 403:os/timers.c   ****                 else
 404:os/timers.c   ****                 {
 405:os/timers.c   ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:os/timers.c   ****                 }
 407:os/timers.c   ****             }
 408:os/timers.c   ****             else
 409:os/timers.c   ****             {
 410:os/timers.c   ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 411:os/timers.c   ****             }
 412:os/timers.c   **** 
 413:os/timers.c   ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:os/timers.c   ****         }
 415:os/timers.c   ****         else
 416:os/timers.c   ****         {
 417:os/timers.c   ****             mtCOVERAGE_TEST_MARKER();
 418:os/timers.c   ****         }
 419:os/timers.c   **** 
 420:os/timers.c   ****         return xReturn;
 421:os/timers.c   ****     }
 422:os/timers.c   **** /*-----------------------------------------------------------*/
 423:os/timers.c   **** 
 424:os/timers.c   ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:os/timers.c   ****     {
 426:os/timers.c   ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:os/timers.c   ****          * started, then xTimerTaskHandle will be NULL. */
 428:os/timers.c   ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 429:os/timers.c   ****         return xTimerTaskHandle;
 430:os/timers.c   ****     }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 9


 431:os/timers.c   **** /*-----------------------------------------------------------*/
 432:os/timers.c   **** 
 433:os/timers.c   ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:os/timers.c   ****     {
 435:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 436:os/timers.c   **** 
 437:os/timers.c   ****         configASSERT( xTimer );
 438:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 439:os/timers.c   ****     }
 440:os/timers.c   **** /*-----------------------------------------------------------*/
 441:os/timers.c   **** 
 442:os/timers.c   ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 443:os/timers.c   ****                               const UBaseType_t uxAutoReload )
 444:os/timers.c   ****     {
 445:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 446:os/timers.c   **** 
 447:os/timers.c   ****         configASSERT( xTimer );
 448:os/timers.c   ****         taskENTER_CRITICAL();
 449:os/timers.c   ****         {
 450:os/timers.c   ****             if( uxAutoReload != pdFALSE )
 451:os/timers.c   ****             {
 452:os/timers.c   ****                 pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 453:os/timers.c   ****             }
 454:os/timers.c   ****             else
 455:os/timers.c   ****             {
 456:os/timers.c   ****                 pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 457:os/timers.c   ****             }
 458:os/timers.c   ****         }
 459:os/timers.c   ****         taskEXIT_CRITICAL();
 460:os/timers.c   ****     }
 461:os/timers.c   **** /*-----------------------------------------------------------*/
 462:os/timers.c   **** 
 463:os/timers.c   ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 464:os/timers.c   ****     {
 465:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 466:os/timers.c   ****         UBaseType_t uxReturn;
 467:os/timers.c   **** 
 468:os/timers.c   ****         configASSERT( xTimer );
 469:os/timers.c   ****         taskENTER_CRITICAL();
 470:os/timers.c   ****         {
 471:os/timers.c   ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 472:os/timers.c   ****             {
 473:os/timers.c   ****                 /* Not an auto-reload timer. */
 474:os/timers.c   ****                 uxReturn = ( UBaseType_t ) pdFALSE;
 475:os/timers.c   ****             }
 476:os/timers.c   ****             else
 477:os/timers.c   ****             {
 478:os/timers.c   ****                 /* Is an auto-reload timer. */
 479:os/timers.c   ****                 uxReturn = ( UBaseType_t ) pdTRUE;
 480:os/timers.c   ****             }
 481:os/timers.c   ****         }
 482:os/timers.c   ****         taskEXIT_CRITICAL();
 483:os/timers.c   **** 
 484:os/timers.c   ****         return uxReturn;
 485:os/timers.c   ****     }
 486:os/timers.c   **** /*-----------------------------------------------------------*/
 487:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 10


 488:os/timers.c   ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 489:os/timers.c   ****     {
 490:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 491:os/timers.c   ****         TickType_t xReturn;
 492:os/timers.c   **** 
 493:os/timers.c   ****         configASSERT( xTimer );
 494:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 495:os/timers.c   ****         return xReturn;
 496:os/timers.c   ****     }
 497:os/timers.c   **** /*-----------------------------------------------------------*/
 498:os/timers.c   **** 
 499:os/timers.c   ****     const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are all
 500:os/timers.c   ****     {
 501:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 502:os/timers.c   **** 
 503:os/timers.c   ****         configASSERT( xTimer );
 504:os/timers.c   ****         return pxTimer->pcTimerName;
 505:os/timers.c   ****     }
 506:os/timers.c   **** /*-----------------------------------------------------------*/
 507:os/timers.c   **** 
 508:os/timers.c   ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 509:os/timers.c   ****                                         const TickType_t xTimeNow )
 510:os/timers.c   ****     {
 511:os/timers.c   ****         BaseType_t xResult;
 512:os/timers.c   ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 513:os/timers.c   **** 
 514:os/timers.c   ****         /* Remove the timer from the list of active timers.  A check has already
 515:os/timers.c   ****          * been performed to ensure the list is not empty. */
 516:os/timers.c   **** 
 517:os/timers.c   ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 518:os/timers.c   ****         traceTIMER_EXPIRED( pxTimer );
 519:os/timers.c   **** 
 520:os/timers.c   ****         /* If the timer is an auto-reload timer then calculate the next
 521:os/timers.c   ****          * expiry time and re-insert the timer in the list of active timers. */
 522:os/timers.c   ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 523:os/timers.c   ****         {
 524:os/timers.c   ****             /* The timer is inserted into a list using a time relative to anything
 525:os/timers.c   ****              * other than the current time.  It will therefore be inserted into the
 526:os/timers.c   ****              * correct list relative to the time this task thinks it is now. */
 527:os/timers.c   ****             if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTic
 528:os/timers.c   ****             {
 529:os/timers.c   ****                 /* The timer expired before it was added to the active timer
 530:os/timers.c   ****                  * list.  Reload it now.  */
 531:os/timers.c   ****                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTi
 532:os/timers.c   ****                 configASSERT( xResult );
 533:os/timers.c   ****                 ( void ) xResult;
 534:os/timers.c   ****             }
 535:os/timers.c   ****             else
 536:os/timers.c   ****             {
 537:os/timers.c   ****                 mtCOVERAGE_TEST_MARKER();
 538:os/timers.c   ****             }
 539:os/timers.c   ****         }
 540:os/timers.c   ****         else
 541:os/timers.c   ****         {
 542:os/timers.c   ****             pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 543:os/timers.c   ****             mtCOVERAGE_TEST_MARKER();
 544:os/timers.c   ****         }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 11


 545:os/timers.c   **** 
 546:os/timers.c   ****         /* Call the timer callback. */
 547:os/timers.c   ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 548:os/timers.c   ****     }
 549:os/timers.c   **** /*-----------------------------------------------------------*/
 550:os/timers.c   **** 
 551:os/timers.c   ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 552:os/timers.c   ****     {
 553:os/timers.c   ****         TickType_t xNextExpireTime;
 554:os/timers.c   ****         BaseType_t xListWasEmpty;
 555:os/timers.c   **** 
 556:os/timers.c   ****         /* Just to avoid compiler warnings. */
 557:os/timers.c   ****         ( void ) pvParameters;
 558:os/timers.c   **** 
 559:os/timers.c   ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 560:os/timers.c   ****             {
 561:os/timers.c   ****                 extern void vApplicationDaemonTaskStartupHook( void );
 562:os/timers.c   **** 
 563:os/timers.c   ****                 /* Allow the application writer to execute some code in the context of
 564:os/timers.c   ****                  * this task at the point the task starts executing.  This is useful if the
 565:os/timers.c   ****                  * application includes initialisation code that would benefit from
 566:os/timers.c   ****                  * executing after the scheduler has been started. */
 567:os/timers.c   ****                 vApplicationDaemonTaskStartupHook();
 568:os/timers.c   ****             }
 569:os/timers.c   ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 570:os/timers.c   **** 
 571:os/timers.c   ****         for( ; ; )
 572:os/timers.c   ****         {
 573:os/timers.c   ****             /* Query the timers list to see if it contains any timers, and if so,
 574:os/timers.c   ****              * obtain the time at which the next timer will expire. */
 575:os/timers.c   ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 576:os/timers.c   **** 
 577:os/timers.c   ****             /* If a timer has expired, process it.  Otherwise, block this task
 578:os/timers.c   ****              * until either a timer does expire, or a command is received. */
 579:os/timers.c   ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 580:os/timers.c   **** 
 581:os/timers.c   ****             /* Empty the command queue. */
 582:os/timers.c   ****             prvProcessReceivedCommands();
 583:os/timers.c   ****         }
 584:os/timers.c   ****     }
 585:os/timers.c   **** /*-----------------------------------------------------------*/
 586:os/timers.c   **** 
 587:os/timers.c   ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 588:os/timers.c   ****                                             BaseType_t xListWasEmpty )
 589:os/timers.c   ****     {
 590:os/timers.c   ****         TickType_t xTimeNow;
 591:os/timers.c   ****         BaseType_t xTimerListsWereSwitched;
 592:os/timers.c   **** 
 593:os/timers.c   ****         vTaskSuspendAll();
 594:os/timers.c   ****         {
 595:os/timers.c   ****             /* Obtain the time now to make an assessment as to whether the timer
 596:os/timers.c   ****              * has expired or not.  If obtaining the time causes the lists to switch
 597:os/timers.c   ****              * then don't process this timer as any timers that remained in the list
 598:os/timers.c   ****              * when the lists were switched will have been processed within the
 599:os/timers.c   ****              * prvSampleTimeNow() function. */
 600:os/timers.c   ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 601:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 12


 602:os/timers.c   ****             if( xTimerListsWereSwitched == pdFALSE )
 603:os/timers.c   ****             {
 604:os/timers.c   ****                 /* The tick count has not overflowed, has the timer expired? */
 605:os/timers.c   ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 606:os/timers.c   ****                 {
 607:os/timers.c   ****                     ( void ) xTaskResumeAll();
 608:os/timers.c   ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 609:os/timers.c   ****                 }
 610:os/timers.c   ****                 else
 611:os/timers.c   ****                 {
 612:os/timers.c   ****                     /* The tick count has not overflowed, and the next expire
 613:os/timers.c   ****                      * time has not been reached yet.  This task should therefore
 614:os/timers.c   ****                      * block to wait for the next expire time or a command to be
 615:os/timers.c   ****                      * received - whichever comes first.  The following line cannot
 616:os/timers.c   ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 617:os/timers.c   ****                      * case when the current timer list is empty. */
 618:os/timers.c   ****                     if( xListWasEmpty != pdFALSE )
 619:os/timers.c   ****                     {
 620:os/timers.c   ****                         /* The current timer list is empty - is the overflow list
 621:os/timers.c   ****                          * also empty? */
 622:os/timers.c   ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 623:os/timers.c   ****                     }
 624:os/timers.c   **** 
 625:os/timers.c   ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 626:os/timers.c   **** 
 627:os/timers.c   ****                     if( xTaskResumeAll() == pdFALSE )
 628:os/timers.c   ****                     {
 629:os/timers.c   ****                         /* Yield to wait for either a command to arrive, or the
 630:os/timers.c   ****                          * block time to expire.  If a command arrived between the
 631:os/timers.c   ****                          * critical section being exited and this yield then the yield
 632:os/timers.c   ****                          * will not cause the task to block. */
 633:os/timers.c   ****                         portYIELD_WITHIN_API();
 634:os/timers.c   ****                     }
 635:os/timers.c   ****                     else
 636:os/timers.c   ****                     {
 637:os/timers.c   ****                         mtCOVERAGE_TEST_MARKER();
 638:os/timers.c   ****                     }
 639:os/timers.c   ****                 }
 640:os/timers.c   ****             }
 641:os/timers.c   ****             else
 642:os/timers.c   ****             {
 643:os/timers.c   ****                 ( void ) xTaskResumeAll();
 644:os/timers.c   ****             }
 645:os/timers.c   ****         }
 646:os/timers.c   ****     }
 647:os/timers.c   **** /*-----------------------------------------------------------*/
 648:os/timers.c   **** 
 649:os/timers.c   ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 650:os/timers.c   ****     {
  28              		.loc 1 650 5 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 651:os/timers.c   ****         TickType_t xNextExpireTime;
  33              		.loc 1 651 9 view .LVU1
 652:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 13


 653:os/timers.c   ****         /* Timers are listed in expiry time order, with the head of the list
 654:os/timers.c   ****          * referencing the task that will expire first.  Obtain the time at which
 655:os/timers.c   ****          * the timer with the nearest expiry time will expire.  If there are no
 656:os/timers.c   ****          * active timers then just set the next expire time to 0.  That will cause
 657:os/timers.c   ****          * this task to unblock when the tick count overflows, at which point the
 658:os/timers.c   ****          * timer lists will be switched and the next expiry time can be
 659:os/timers.c   ****          * re-assessed.  */
 660:os/timers.c   ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  34              		.loc 1 660 9 view .LVU2
  35              		.loc 1 660 27 is_stmt 0 view .LVU3
  36 0000 064B     		ldr	r3, .L6
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 1368     		ldr	r3, [r2]
  39 0006 2BB9     		cbnz	r3, .L4
  40 0008 0123     		movs	r3, #1
  41              	.L2:
  42              		.loc 1 660 25 discriminator 4 view .LVU4
  43 000a 0360     		str	r3, [r0]
 661:os/timers.c   **** 
 662:os/timers.c   ****         if( *pxListWasEmpty == pdFALSE )
  44              		.loc 1 662 9 is_stmt 1 discriminator 4 view .LVU5
  45              		.loc 1 662 11 is_stmt 0 discriminator 4 view .LVU6
  46 000c 23B9     		cbnz	r3, .L5
 663:os/timers.c   ****         {
 664:os/timers.c   ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  47              		.loc 1 664 13 is_stmt 1 view .LVU7
  48              		.loc 1 664 31 is_stmt 0 view .LVU8
  49 000e D368     		ldr	r3, [r2, #12]
  50              		.loc 1 664 29 view .LVU9
  51 0010 1868     		ldr	r0, [r3]
  52              	.LVL1:
  53              		.loc 1 664 29 view .LVU10
  54 0012 7047     		bx	lr
  55              	.LVL2:
  56              	.L4:
 660:os/timers.c   **** 
  57              		.loc 1 660 27 view .LVU11
  58 0014 0023     		movs	r3, #0
  59 0016 F8E7     		b	.L2
  60              	.L5:
 665:os/timers.c   ****         }
 666:os/timers.c   ****         else
 667:os/timers.c   ****         {
 668:os/timers.c   ****             /* Ensure the task unblocks when the tick count rolls over. */
 669:os/timers.c   ****             xNextExpireTime = ( TickType_t ) 0U;
  61              		.loc 1 669 29 view .LVU12
  62 0018 0020     		movs	r0, #0
  63              	.LVL3:
 670:os/timers.c   ****         }
 671:os/timers.c   **** 
 672:os/timers.c   ****         return xNextExpireTime;
  64              		.loc 1 672 9 is_stmt 1 view .LVU13
 673:os/timers.c   ****     }
  65              		.loc 1 673 5 is_stmt 0 view .LVU14
  66 001a 7047     		bx	lr
  67              	.L7:
  68              		.align	2
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 14


  69              	.L6:
  70 001c 00000000 		.word	.LANCHOR0
  71              		.cfi_endproc
  72              	.LFE18:
  74              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv5-d16
  81              	prvInsertTimerInActiveList:
  82              	.LVL4:
  83              	.LFB20:
 674:os/timers.c   **** /*-----------------------------------------------------------*/
 675:os/timers.c   **** 
 676:os/timers.c   ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 677:os/timers.c   ****     {
 678:os/timers.c   ****         TickType_t xTimeNow;
 679:os/timers.c   ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 680:os/timers.c   **** 
 681:os/timers.c   ****         xTimeNow = xTaskGetTickCount();
 682:os/timers.c   **** 
 683:os/timers.c   ****         if( xTimeNow < xLastTime )
 684:os/timers.c   ****         {
 685:os/timers.c   ****             prvSwitchTimerLists();
 686:os/timers.c   ****             *pxTimerListsWereSwitched = pdTRUE;
 687:os/timers.c   ****         }
 688:os/timers.c   ****         else
 689:os/timers.c   ****         {
 690:os/timers.c   ****             *pxTimerListsWereSwitched = pdFALSE;
 691:os/timers.c   ****         }
 692:os/timers.c   **** 
 693:os/timers.c   ****         xLastTime = xTimeNow;
 694:os/timers.c   **** 
 695:os/timers.c   ****         return xTimeNow;
 696:os/timers.c   ****     }
 697:os/timers.c   **** /*-----------------------------------------------------------*/
 698:os/timers.c   **** 
 699:os/timers.c   ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 700:os/timers.c   ****                                                   const TickType_t xNextExpiryTime,
 701:os/timers.c   ****                                                   const TickType_t xTimeNow,
 702:os/timers.c   ****                                                   const TickType_t xCommandTime )
 703:os/timers.c   ****     {
  84              		.loc 1 703 5 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		.loc 1 703 5 is_stmt 0 view .LVU16
  89 0000 08B5     		push	{r3, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 704:os/timers.c   ****         BaseType_t xProcessTimerNow = pdFALSE;
  94              		.loc 1 704 9 is_stmt 1 view .LVU17
  95              	.LVL5:
 705:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 15


 706:os/timers.c   ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  96              		.loc 1 706 9 view .LVU18
  97 0002 4160     		str	r1, [r0, #4]
 707:os/timers.c   ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  98              		.loc 1 707 9 view .LVU19
  99 0004 0061     		str	r0, [r0, #16]
 708:os/timers.c   **** 
 709:os/timers.c   ****         if( xNextExpiryTime <= xTimeNow )
 100              		.loc 1 709 9 view .LVU20
 101              		.loc 1 709 11 is_stmt 0 view .LVU21
 102 0006 9142     		cmp	r1, r2
 103 0008 0CD8     		bhi	.L9
 710:os/timers.c   ****         {
 711:os/timers.c   ****             /* Has the expiry time elapsed between the command to start/reset a
 712:os/timers.c   ****              * timer was issued, and the time the command was processed? */
 713:os/timers.c   ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*
 104              		.loc 1 713 13 is_stmt 1 view .LVU22
 105              		.loc 1 713 19 is_stmt 0 view .LVU23
 106 000a D21A     		subs	r2, r2, r3
 107              	.LVL6:
 108              		.loc 1 713 74 view .LVU24
 109 000c 8369     		ldr	r3, [r0, #24]
 110              	.LVL7:
 111              		.loc 1 713 15 view .LVU25
 112 000e 9A42     		cmp	r2, r3
 113 0010 01D3     		bcc	.L14
 714:os/timers.c   ****             {
 715:os/timers.c   ****                 /* The time between a command being issued and the command being
 716:os/timers.c   ****                  * processed actually exceeds the timers period.  */
 717:os/timers.c   ****                 xProcessTimerNow = pdTRUE;
 114              		.loc 1 717 34 view .LVU26
 115 0012 0120     		movs	r0, #1
 116              	.LVL8:
 117              	.L8:
 718:os/timers.c   ****             }
 719:os/timers.c   ****             else
 720:os/timers.c   ****             {
 721:os/timers.c   ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 722:os/timers.c   ****             }
 723:os/timers.c   ****         }
 724:os/timers.c   ****         else
 725:os/timers.c   ****         {
 726:os/timers.c   ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 727:os/timers.c   ****             {
 728:os/timers.c   ****                 /* If, since the command was issued, the tick count has overflowed
 729:os/timers.c   ****                  * but the expiry time has not, then the timer must have already passed
 730:os/timers.c   ****                  * its expiry time and should be processed immediately. */
 731:os/timers.c   ****                 xProcessTimerNow = pdTRUE;
 732:os/timers.c   ****             }
 733:os/timers.c   ****             else
 734:os/timers.c   ****             {
 735:os/timers.c   ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 736:os/timers.c   ****             }
 737:os/timers.c   ****         }
 738:os/timers.c   **** 
 739:os/timers.c   ****         return xProcessTimerNow;
 740:os/timers.c   ****     }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 16


 118              		.loc 1 740 5 view .LVU27
 119 0014 08BD     		pop	{r3, pc}
 120              	.LVL9:
 121              	.L14:
 721:os/timers.c   ****             }
 122              		.loc 1 721 17 is_stmt 1 view .LVU28
 123 0016 011D     		adds	r1, r0, #4
 124              	.LVL10:
 721:os/timers.c   ****             }
 125              		.loc 1 721 17 is_stmt 0 view .LVU29
 126 0018 0B4B     		ldr	r3, .L16
 127 001a 1868     		ldr	r0, [r3]
 128              	.LVL11:
 721:os/timers.c   ****             }
 129              		.loc 1 721 17 view .LVU30
 130 001c FFF7FEFF 		bl	vListInsert
 131              	.LVL12:
 704:os/timers.c   **** 
 132              		.loc 1 704 20 view .LVU31
 133 0020 0020     		movs	r0, #0
 134 0022 F7E7     		b	.L8
 135              	.LVL13:
 136              	.L9:
 726:os/timers.c   ****             {
 137              		.loc 1 726 13 is_stmt 1 view .LVU32
 726:os/timers.c   ****             {
 138              		.loc 1 726 45 is_stmt 0 view .LVU33
 139 0024 9A42     		cmp	r2, r3
 140 0026 2CBF     		ite	cs
 141 0028 0022     		movcs	r2, #0
 142              	.LVL14:
 726:os/timers.c   ****             {
 143              		.loc 1 726 45 view .LVU34
 144 002a 0122     		movcc	r2, #1
 145 002c 9942     		cmp	r1, r3
 146 002e 38BF     		it	cc
 147 0030 0022     		movcc	r2, #0
 726:os/timers.c   ****             {
 148              		.loc 1 726 15 view .LVU35
 149 0032 0AB1     		cbz	r2, .L15
 731:os/timers.c   ****             }
 150              		.loc 1 731 34 view .LVU36
 151 0034 0120     		movs	r0, #1
 152              	.LVL15:
 739:os/timers.c   ****     }
 153              		.loc 1 739 9 is_stmt 1 view .LVU37
 739:os/timers.c   ****     }
 154              		.loc 1 739 16 is_stmt 0 view .LVU38
 155 0036 EDE7     		b	.L8
 156              	.LVL16:
 157              	.L15:
 735:os/timers.c   ****             }
 158              		.loc 1 735 17 is_stmt 1 view .LVU39
 159 0038 011D     		adds	r1, r0, #4
 160              	.LVL17:
 735:os/timers.c   ****             }
 161              		.loc 1 735 17 is_stmt 0 view .LVU40
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 17


 162 003a 044B     		ldr	r3, .L16+4
 163              	.LVL18:
 735:os/timers.c   ****             }
 164              		.loc 1 735 17 view .LVU41
 165 003c 1868     		ldr	r0, [r3]
 166              	.LVL19:
 735:os/timers.c   ****             }
 167              		.loc 1 735 17 view .LVU42
 168 003e FFF7FEFF 		bl	vListInsert
 169              	.LVL20:
 704:os/timers.c   **** 
 170              		.loc 1 704 20 view .LVU43
 171 0042 0020     		movs	r0, #0
 172 0044 E6E7     		b	.L8
 173              	.L17:
 174 0046 00BF     		.align	2
 175              	.L16:
 176 0048 00000000 		.word	.LANCHOR1
 177 004c 00000000 		.word	.LANCHOR0
 178              		.cfi_endproc
 179              	.LFE20:
 181              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 182              		.align	2
 183              	.LC0:
 184 0000 546D7251 		.ascii	"TmrQ\000"
 184      00
 185              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 186              		.align	1
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-d16
 192              	prvCheckForValidListAndQueue:
 193              	.LFB23:
 741:os/timers.c   **** /*-----------------------------------------------------------*/
 742:os/timers.c   **** 
 743:os/timers.c   ****     static void prvProcessReceivedCommands( void )
 744:os/timers.c   ****     {
 745:os/timers.c   ****         DaemonTaskMessage_t xMessage;
 746:os/timers.c   ****         Timer_t * pxTimer;
 747:os/timers.c   ****         BaseType_t xTimerListsWereSwitched, xResult;
 748:os/timers.c   ****         TickType_t xTimeNow;
 749:os/timers.c   **** 
 750:os/timers.c   ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessa
 751:os/timers.c   ****         {
 752:os/timers.c   ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 753:os/timers.c   ****                 {
 754:os/timers.c   ****                     /* Negative commands are pended function calls rather than timer
 755:os/timers.c   ****                      * commands. */
 756:os/timers.c   ****                     if( xMessage.xMessageID < ( BaseType_t ) 0 )
 757:os/timers.c   ****                     {
 758:os/timers.c   ****                         const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackPara
 759:os/timers.c   **** 
 760:os/timers.c   ****                         /* The timer uses the xCallbackParameters member to request a
 761:os/timers.c   ****                          * callback be executed.  Check the callback is not NULL. */
 762:os/timers.c   ****                         configASSERT( pxCallback );
 763:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 18


 764:os/timers.c   ****                         /* Call the function. */
 765:os/timers.c   ****                         pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulPar
 766:os/timers.c   ****                     }
 767:os/timers.c   ****                     else
 768:os/timers.c   ****                     {
 769:os/timers.c   ****                         mtCOVERAGE_TEST_MARKER();
 770:os/timers.c   ****                     }
 771:os/timers.c   ****                 }
 772:os/timers.c   ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 773:os/timers.c   **** 
 774:os/timers.c   ****             /* Commands that are positive are timer commands rather than pended
 775:os/timers.c   ****              * function calls. */
 776:os/timers.c   ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 777:os/timers.c   ****             {
 778:os/timers.c   ****                 /* The messages uses the xTimerParameters member to work on a
 779:os/timers.c   ****                  * software timer. */
 780:os/timers.c   ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 781:os/timers.c   **** 
 782:os/timers.c   ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*li
 783:os/timers.c   ****                 {
 784:os/timers.c   ****                     /* The timer is in a list, remove it. */
 785:os/timers.c   ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 786:os/timers.c   ****                 }
 787:os/timers.c   ****                 else
 788:os/timers.c   ****                 {
 789:os/timers.c   ****                     mtCOVERAGE_TEST_MARKER();
 790:os/timers.c   ****                 }
 791:os/timers.c   **** 
 792:os/timers.c   ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 793:os/timers.c   **** 
 794:os/timers.c   ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 795:os/timers.c   ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 796:os/timers.c   ****                  *  called after the message is received from xTimerQueue so there is no
 797:os/timers.c   ****                  *  possibility of a higher priority task adding a message to the message
 798:os/timers.c   ****                  *  queue with a time that is ahead of the timer daemon task (because it
 799:os/timers.c   ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 800:os/timers.c   ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 801:os/timers.c   **** 
 802:os/timers.c   ****                 switch( xMessage.xMessageID )
 803:os/timers.c   ****                 {
 804:os/timers.c   ****                     case tmrCOMMAND_START:
 805:os/timers.c   ****                     case tmrCOMMAND_START_FROM_ISR:
 806:os/timers.c   ****                     case tmrCOMMAND_RESET:
 807:os/timers.c   ****                     case tmrCOMMAND_RESET_FROM_ISR:
 808:os/timers.c   ****                     case tmrCOMMAND_START_DONT_TRACE:
 809:os/timers.c   ****                         /* Start or restart a timer. */
 810:os/timers.c   ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 811:os/timers.c   **** 
 812:os/timers.c   ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
 813:os/timers.c   ****                         {
 814:os/timers.c   ****                             /* The timer expired before it was added to the active
 815:os/timers.c   ****                              * timer list.  Process it now. */
 816:os/timers.c   ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 817:os/timers.c   ****                             traceTIMER_EXPIRED( pxTimer );
 818:os/timers.c   **** 
 819:os/timers.c   ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 820:os/timers.c   ****                             {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 19


 821:os/timers.c   ****                                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 822:os/timers.c   ****                                 configASSERT( xResult );
 823:os/timers.c   ****                                 ( void ) xResult;
 824:os/timers.c   ****                             }
 825:os/timers.c   ****                             else
 826:os/timers.c   ****                             {
 827:os/timers.c   ****                                 mtCOVERAGE_TEST_MARKER();
 828:os/timers.c   ****                             }
 829:os/timers.c   ****                         }
 830:os/timers.c   ****                         else
 831:os/timers.c   ****                         {
 832:os/timers.c   ****                             mtCOVERAGE_TEST_MARKER();
 833:os/timers.c   ****                         }
 834:os/timers.c   **** 
 835:os/timers.c   ****                         break;
 836:os/timers.c   **** 
 837:os/timers.c   ****                     case tmrCOMMAND_STOP:
 838:os/timers.c   ****                     case tmrCOMMAND_STOP_FROM_ISR:
 839:os/timers.c   ****                         /* The timer has already been removed from the active list. */
 840:os/timers.c   ****                         pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 841:os/timers.c   ****                         break;
 842:os/timers.c   **** 
 843:os/timers.c   ****                     case tmrCOMMAND_CHANGE_PERIOD:
 844:os/timers.c   ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
 845:os/timers.c   ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 846:os/timers.c   ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 847:os/timers.c   ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 848:os/timers.c   **** 
 849:os/timers.c   ****                         /* The new period does not really have a reference, and can
 850:os/timers.c   ****                          * be longer or shorter than the old one.  The command time is
 851:os/timers.c   ****                          * therefore set to the current time, and as the period cannot
 852:os/timers.c   ****                          * be zero the next expiry time can only be in the future,
 853:os/timers.c   ****                          * meaning (unlike for the xTimerStart() case above) there is
 854:os/timers.c   ****                          * no fail case that needs to be handled here. */
 855:os/timers.c   ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
 856:os/timers.c   ****                         break;
 857:os/timers.c   **** 
 858:os/timers.c   ****                     case tmrCOMMAND_DELETE:
 859:os/timers.c   ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 860:os/timers.c   ****                             {
 861:os/timers.c   ****                                 /* The timer has already been removed from the active list,
 862:os/timers.c   ****                                  * just free up the memory if the memory was dynamically
 863:os/timers.c   ****                                  * allocated. */
 864:os/timers.c   ****                                 if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( 
 865:os/timers.c   ****                                 {
 866:os/timers.c   ****                                     vPortFree( pxTimer );
 867:os/timers.c   ****                                 }
 868:os/timers.c   ****                                 else
 869:os/timers.c   ****                                 {
 870:os/timers.c   ****                                     pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 871:os/timers.c   ****                                 }
 872:os/timers.c   ****                             }
 873:os/timers.c   ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 874:os/timers.c   ****                             {
 875:os/timers.c   ****                                 /* If dynamic allocation is not enabled, the memory
 876:os/timers.c   ****                                  * could not have been dynamically allocated. So there is
 877:os/timers.c   ****                                  * no need to free the memory - just mark the timer as
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 20


 878:os/timers.c   ****                                  * "not active". */
 879:os/timers.c   ****                                 pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 880:os/timers.c   ****                             }
 881:os/timers.c   ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 882:os/timers.c   ****                         break;
 883:os/timers.c   **** 
 884:os/timers.c   ****                     default:
 885:os/timers.c   ****                         /* Don't expect to get here. */
 886:os/timers.c   ****                         break;
 887:os/timers.c   ****                 }
 888:os/timers.c   ****             }
 889:os/timers.c   ****         }
 890:os/timers.c   ****     }
 891:os/timers.c   **** /*-----------------------------------------------------------*/
 892:os/timers.c   **** 
 893:os/timers.c   ****     static void prvSwitchTimerLists( void )
 894:os/timers.c   ****     {
 895:os/timers.c   ****         TickType_t xNextExpireTime, xReloadTime;
 896:os/timers.c   ****         List_t * pxTemp;
 897:os/timers.c   ****         Timer_t * pxTimer;
 898:os/timers.c   ****         BaseType_t xResult;
 899:os/timers.c   **** 
 900:os/timers.c   ****         /* The tick count has overflowed.  The timer lists must be switched.
 901:os/timers.c   ****          * If there are any timers still referenced from the current timer list
 902:os/timers.c   ****          * then they must have expired and should be processed before the lists
 903:os/timers.c   ****          * are switched. */
 904:os/timers.c   ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 905:os/timers.c   ****         {
 906:os/timers.c   ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 907:os/timers.c   **** 
 908:os/timers.c   ****             /* Remove the timer from the list. */
 909:os/timers.c   ****             pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e908
 910:os/timers.c   ****             ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 911:os/timers.c   ****             traceTIMER_EXPIRED( pxTimer );
 912:os/timers.c   **** 
 913:os/timers.c   ****             /* Execute its callback, then send a command to restart the timer if
 914:os/timers.c   ****              * it is an auto-reload timer.  It cannot be restarted here as the lists
 915:os/timers.c   ****              * have not yet been switched. */
 916:os/timers.c   ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 917:os/timers.c   **** 
 918:os/timers.c   ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 919:os/timers.c   ****             {
 920:os/timers.c   ****                 /* Calculate the reload value, and if the reload value results in
 921:os/timers.c   ****                  * the timer going into the same timer list then it has already expired
 922:os/timers.c   ****                  * and the timer should be re-inserted into the current list so it is
 923:os/timers.c   ****                  * processed again within this loop.  Otherwise a command should be sent
 924:os/timers.c   ****                  * to restart the timer to ensure it is only inserted into a list after
 925:os/timers.c   ****                  * the lists have been swapped. */
 926:os/timers.c   ****                 xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 927:os/timers.c   **** 
 928:os/timers.c   ****                 if( xReloadTime > xNextExpireTime )
 929:os/timers.c   ****                 {
 930:os/timers.c   ****                     listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 931:os/timers.c   ****                     listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 932:os/timers.c   ****                     vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 933:os/timers.c   ****                 }
 934:os/timers.c   ****                 else
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 21


 935:os/timers.c   ****                 {
 936:os/timers.c   ****                     xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpi
 937:os/timers.c   ****                     configASSERT( xResult );
 938:os/timers.c   ****                     ( void ) xResult;
 939:os/timers.c   ****                 }
 940:os/timers.c   ****             }
 941:os/timers.c   ****             else
 942:os/timers.c   ****             {
 943:os/timers.c   ****                 mtCOVERAGE_TEST_MARKER();
 944:os/timers.c   ****             }
 945:os/timers.c   ****         }
 946:os/timers.c   **** 
 947:os/timers.c   ****         pxTemp = pxCurrentTimerList;
 948:os/timers.c   ****         pxCurrentTimerList = pxOverflowTimerList;
 949:os/timers.c   ****         pxOverflowTimerList = pxTemp;
 950:os/timers.c   ****     }
 951:os/timers.c   **** /*-----------------------------------------------------------*/
 952:os/timers.c   **** 
 953:os/timers.c   ****     static void prvCheckForValidListAndQueue( void )
 954:os/timers.c   ****     {
 194              		.loc 1 954 5 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 30B5     		push	{r4, r5, lr}
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 12
 201              		.cfi_offset 4, -12
 202              		.cfi_offset 5, -8
 203              		.cfi_offset 14, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 24
 955:os/timers.c   ****         /* Check that the list from which active timers are referenced, and the
 956:os/timers.c   ****          * queue used to communicate with the timer service, have been
 957:os/timers.c   ****          * initialised. */
 958:os/timers.c   ****         taskENTER_CRITICAL();
 207              		.loc 1 958 9 view .LVU45
 208 0004 FFF7FEFF 		bl	vPortEnterCritical
 209              	.LVL21:
 959:os/timers.c   ****         {
 960:os/timers.c   ****             if( xTimerQueue == NULL )
 210              		.loc 1 960 13 view .LVU46
 211              		.loc 1 960 29 is_stmt 0 view .LVU47
 212 0008 114B     		ldr	r3, .L22
 213 000a 1B68     		ldr	r3, [r3]
 214              		.loc 1 960 15 view .LVU48
 215 000c 1BB1     		cbz	r3, .L21
 216              	.L19:
 961:os/timers.c   ****             {
 962:os/timers.c   ****                 vListInitialise( &xActiveTimerList1 );
 963:os/timers.c   ****                 vListInitialise( &xActiveTimerList2 );
 964:os/timers.c   ****                 pxCurrentTimerList = &xActiveTimerList1;
 965:os/timers.c   ****                 pxOverflowTimerList = &xActiveTimerList2;
 966:os/timers.c   **** 
 967:os/timers.c   ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 968:os/timers.c   ****                     {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 22


 969:os/timers.c   ****                         /* The timer queue is allocated statically in case
 970:os/timers.c   ****                          * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 971:os/timers.c   ****                         PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                    
 972:os/timers.c   ****                         PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) config
 973:os/timers.c   **** 
 974:os/timers.c   ****                         xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH,
 975:os/timers.c   ****                     }
 976:os/timers.c   ****                 #else
 977:os/timers.c   ****                     {
 978:os/timers.c   ****                         xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeo
 979:os/timers.c   ****                     }
 980:os/timers.c   ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 981:os/timers.c   **** 
 982:os/timers.c   ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
 983:os/timers.c   ****                     {
 984:os/timers.c   ****                         if( xTimerQueue != NULL )
 985:os/timers.c   ****                         {
 986:os/timers.c   ****                             vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 987:os/timers.c   ****                         }
 988:os/timers.c   ****                         else
 989:os/timers.c   ****                         {
 990:os/timers.c   ****                             mtCOVERAGE_TEST_MARKER();
 991:os/timers.c   ****                         }
 992:os/timers.c   ****                     }
 993:os/timers.c   ****                 #endif /* configQUEUE_REGISTRY_SIZE */
 994:os/timers.c   ****             }
 995:os/timers.c   ****             else
 996:os/timers.c   ****             {
 997:os/timers.c   ****                 mtCOVERAGE_TEST_MARKER();
 217              		.loc 1 997 41 is_stmt 1 view .LVU49
 998:os/timers.c   ****             }
 999:os/timers.c   ****         }
1000:os/timers.c   ****         taskEXIT_CRITICAL();
 218              		.loc 1 1000 9 view .LVU50
 219 000e FFF7FEFF 		bl	vPortExitCritical
 220              	.LVL22:
1001:os/timers.c   ****     }
 221              		.loc 1 1001 5 is_stmt 0 view .LVU51
 222 0012 03B0     		add	sp, sp, #12
 223              	.LCFI3:
 224              		.cfi_remember_state
 225              		.cfi_def_cfa_offset 12
 226              		@ sp needed
 227 0014 30BD     		pop	{r4, r5, pc}
 228              	.L21:
 229              	.LCFI4:
 230              		.cfi_restore_state
 962:os/timers.c   ****                 vListInitialise( &xActiveTimerList2 );
 231              		.loc 1 962 17 is_stmt 1 view .LVU52
 232 0016 0F4D     		ldr	r5, .L22+4
 233 0018 2846     		mov	r0, r5
 234 001a FFF7FEFF 		bl	vListInitialise
 235              	.LVL23:
 963:os/timers.c   ****                 pxCurrentTimerList = &xActiveTimerList1;
 236              		.loc 1 963 17 view .LVU53
 237 001e 0E4C     		ldr	r4, .L22+8
 238 0020 2046     		mov	r0, r4
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 23


 239 0022 FFF7FEFF 		bl	vListInitialise
 240              	.LVL24:
 964:os/timers.c   ****                 pxOverflowTimerList = &xActiveTimerList2;
 241              		.loc 1 964 17 view .LVU54
 964:os/timers.c   ****                 pxOverflowTimerList = &xActiveTimerList2;
 242              		.loc 1 964 36 is_stmt 0 view .LVU55
 243 0026 0D4B     		ldr	r3, .L22+12
 244 0028 1D60     		str	r5, [r3]
 965:os/timers.c   **** 
 245              		.loc 1 965 17 is_stmt 1 view .LVU56
 965:os/timers.c   **** 
 246              		.loc 1 965 37 is_stmt 0 view .LVU57
 247 002a 0D4B     		ldr	r3, .L22+16
 248 002c 1C60     		str	r4, [r3]
 249              	.LBB45:
 971:os/timers.c   ****                         PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) config
 250              		.loc 1 971 41 is_stmt 1 view .LVU58
 972:os/timers.c   **** 
 251              		.loc 1 972 41 view .LVU59
 974:os/timers.c   ****                     }
 252              		.loc 1 974 25 view .LVU60
 974:os/timers.c   ****                     }
 253              		.loc 1 974 39 is_stmt 0 view .LVU61
 254 002e 0023     		movs	r3, #0
 255 0030 0093     		str	r3, [sp]
 256 0032 0C4B     		ldr	r3, .L22+20
 257 0034 0C4A     		ldr	r2, .L22+24
 258 0036 1021     		movs	r1, #16
 259 0038 0A20     		movs	r0, #10
 260 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 261              	.LVL25:
 974:os/timers.c   ****                     }
 262              		.loc 1 974 37 view .LVU62
 263 003e 044B     		ldr	r3, .L22
 264 0040 1860     		str	r0, [r3]
 265              	.LBE45:
 984:os/timers.c   ****                         {
 266              		.loc 1 984 25 is_stmt 1 view .LVU63
 984:os/timers.c   ****                         {
 267              		.loc 1 984 27 is_stmt 0 view .LVU64
 268 0042 0028     		cmp	r0, #0
 269 0044 E3D0     		beq	.L19
 986:os/timers.c   ****                         }
 270              		.loc 1 986 29 is_stmt 1 view .LVU65
 271 0046 0949     		ldr	r1, .L22+28
 272 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 273              	.LVL26:
 274 004c DFE7     		b	.L19
 275              	.L23:
 276 004e 00BF     		.align	2
 277              	.L22:
 278 0050 00000000 		.word	.LANCHOR2
 279 0054 00000000 		.word	.LANCHOR3
 280 0058 00000000 		.word	.LANCHOR4
 281 005c 00000000 		.word	.LANCHOR0
 282 0060 00000000 		.word	.LANCHOR1
 283 0064 00000000 		.word	.LANCHOR5
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 24


 284 0068 00000000 		.word	.LANCHOR6
 285 006c 00000000 		.word	.LC0
 286              		.cfi_endproc
 287              	.LFE23:
 289              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-d16
 296              	prvInitialiseNewTimer:
 297              	.LVL27:
 298              	.LFB7:
 349:os/timers.c   ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 299              		.loc 1 349 5 view -0
 300              		.cfi_startproc
 301              		@ args = 8, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 349:os/timers.c   ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 303              		.loc 1 349 5 is_stmt 0 view .LVU67
 304 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 305              	.LCFI5:
 306              		.cfi_def_cfa_offset 24
 307              		.cfi_offset 4, -24
 308              		.cfi_offset 5, -20
 309              		.cfi_offset 6, -16
 310              		.cfi_offset 7, -12
 311              		.cfi_offset 8, -8
 312              		.cfi_offset 14, -4
 313 0004 079C     		ldr	r4, [sp, #28]
 351:os/timers.c   **** 
 314              		.loc 1 351 9 is_stmt 1 view .LVU68
 315 0006 51B9     		cbnz	r1, .L25
 351:os/timers.c   **** 
 316              		.loc 1 351 9 view .LVU69
 317              	.LBB46:
 318              	.LBI46:
 319              		.file 2 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FreeRTOS Kernel V10.4.3
   3:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
   5:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * subject to the following conditions:
  11:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  12:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * copies or substantial portions of the Software.
  14:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  15:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 25


  20:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  22:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * https://www.FreeRTOS.org
  23:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * https://github.com/FreeRTOS
  24:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  25:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * 1 tab == 4 spaces!
  26:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  27:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  28:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  29:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  30:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define PORTMACRO_H
  31:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  32:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifdef __cplusplus
  33:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         extern "C" {
  34:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
  35:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  36:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  37:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  38:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  39:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  41:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  42:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  43:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  44:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  45:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  46:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  47:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portCHAR          char
  48:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portFLOAT         float
  49:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portDOUBLE        double
  50:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portLONG          long
  51:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSHORT         short
  52:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portBASE_TYPE     long
  54:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  55:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     typedef long             BaseType_t;
  57:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         typedef uint16_t     TickType_t;
  61:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #else
  63:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         typedef uint32_t     TickType_t;
  64:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  66:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * not need to be guarded with a critical section. */
  68:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
  70:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  71:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  72:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
  73:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 26


  77:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  78:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  79:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
  80:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portYIELD()                                 \
  81:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {                                                   \
  82:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****                                                         \
  85:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
  90:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  91:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  96:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  97:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
  98:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     extern void vPortEnterCritical( void );
  99:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     extern void vPortExitCritical( void );
 100:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 107:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 108:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 109:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * (which build with all the ports) will build. */
 112:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 115:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 116:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 117:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 121:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 122:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 123:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 124:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 127:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 128:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 130:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Generic helper function. */
 131:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         {
 133:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             uint8_t ucReturn;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 27


 134:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 135:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 137:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             return ucReturn;
 138:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         }
 139:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 140:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Check the configuration. */
 141:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #endif
 144:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 145:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 149:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 150:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 151:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 153:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 155:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 156:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 157:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifdef configASSERT
 158:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 161:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 162:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 163:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portNOP()
 164:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 165:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portINLINE              __inline
 166:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 167:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifndef portFORCE_INLINE
 168:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 170:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 171:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 173:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         BaseType_t xReturn;
 175:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 176:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 179:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         {
 181:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             xReturn = pdFALSE;
 182:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         }
 183:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         else
 184:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         {
 185:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             xReturn = pdTRUE;
 186:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         }
 187:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 188:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         return xReturn;
 189:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 190:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 28


 191:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 192:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 320              		.loc 2 193 34 view .LVU70
 321              	.LBB47:
 194:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         uint32_t ulNewBASEPRI;
 322              		.loc 2 195 9 view .LVU71
 196:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile
 323              		.loc 2 197 9 view .LVU72
 324              		.syntax unified
 325              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 326 0008 4FF05003 			mov r3, #80												
 327 000c 72B6     		cpsid i													
 328 000e 83F31188 		msr basepri, r3											
 329 0012 BFF36F8F 		isb														
 330 0016 BFF34F8F 		dsb														
 331 001a 62B6     		cpsie i													
 332              	
 333              	@ 0 "" 2
 334              	.LVL28:
 335              		.thumb
 336              		.syntax unified
 337              	.L26:
 338              		.loc 2 197 9 is_stmt 0 view .LVU73
 339              	.LBE47:
 340              	.LBE46:
 351:os/timers.c   **** 
 341              		.loc 1 351 9 is_stmt 1 discriminator 1 view .LVU74
 351:os/timers.c   **** 
 342              		.loc 1 351 9 discriminator 1 view .LVU75
 351:os/timers.c   **** 
 343              		.loc 1 351 9 discriminator 1 view .LVU76
 344 001c FEE7     		b	.L26
 345              	.LVL29:
 346              	.L25:
 351:os/timers.c   **** 
 347              		.loc 1 351 9 is_stmt 0 discriminator 1 view .LVU77
 348 001e 0746     		mov	r7, r0
 349 0020 1546     		mov	r5, r2
 350 0022 1E46     		mov	r6, r3
 351 0024 8846     		mov	r8, r1
 351:os/timers.c   **** 
 352              		.loc 1 351 52 is_stmt 1 discriminator 2 view .LVU78
 353:os/timers.c   ****         {
 353              		.loc 1 353 9 discriminator 2 view .LVU79
 353:os/timers.c   ****         {
 354              		.loc 1 353 11 is_stmt 0 discriminator 2 view .LVU80
 355 0026 8CB1     		cbz	r4, .L24
 357:os/timers.c   **** 
 356              		.loc 1 357 13 is_stmt 1 view .LVU81
 357 0028 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 358              	.LVL30:
 361:os/timers.c   ****             pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 359              		.loc 1 361 13 view .LVU82
 361:os/timers.c   ****             pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 29


 360              		.loc 1 361 37 is_stmt 0 view .LVU83
 361 002c 2760     		str	r7, [r4]
 362:os/timers.c   ****             pxNewTimer->pvTimerID = pvTimerID;
 362              		.loc 1 362 13 is_stmt 1 view .LVU84
 362:os/timers.c   ****             pxNewTimer->pvTimerID = pvTimerID;
 363              		.loc 1 362 45 is_stmt 0 view .LVU85
 364 002e C4F81880 		str	r8, [r4, #24]
 363:os/timers.c   ****             pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 365              		.loc 1 363 13 is_stmt 1 view .LVU86
 363:os/timers.c   ****             pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 366              		.loc 1 363 35 is_stmt 0 view .LVU87
 367 0032 E661     		str	r6, [r4, #28]
 364:os/timers.c   ****             vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 368              		.loc 1 364 13 is_stmt 1 view .LVU88
 364:os/timers.c   ****             vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 369              		.loc 1 364 44 is_stmt 0 view .LVU89
 370 0034 069B     		ldr	r3, [sp, #24]
 371 0036 2362     		str	r3, [r4, #32]
 365:os/timers.c   **** 
 372              		.loc 1 365 13 is_stmt 1 view .LVU90
 373 0038 201D     		adds	r0, r4, #4
 374 003a FFF7FEFF 		bl	vListInitialiseItem
 375              	.LVL31:
 367:os/timers.c   ****             {
 376              		.loc 1 367 13 view .LVU91
 367:os/timers.c   ****             {
 377              		.loc 1 367 15 is_stmt 0 view .LVU92
 378 003e 2DB1     		cbz	r5, .L24
 369:os/timers.c   ****             }
 379              		.loc 1 369 17 is_stmt 1 view .LVU93
 369:os/timers.c   ****             }
 380              		.loc 1 369 38 is_stmt 0 view .LVU94
 381 0040 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 382 0044 43F00403 		orr	r3, r3, #4
 383 0048 84F82830 		strb	r3, [r4, #40]
 372:os/timers.c   ****         }
 384              		.loc 1 372 44 is_stmt 1 view .LVU95
 385              	.L24:
 374:os/timers.c   **** /*-----------------------------------------------------------*/
 386              		.loc 1 374 5 is_stmt 0 view .LVU96
 387 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 374:os/timers.c   **** /*-----------------------------------------------------------*/
 388              		.loc 1 374 5 view .LVU97
 389              		.cfi_endproc
 390              	.LFE7:
 392              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 393              		.align	2
 394              	.LC1:
 395 0000 546D7220 		.ascii	"Tmr Svc\000"
 395      53766300 
 396              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 397              		.align	1
 398              		.global	xTimerCreateTimerTask
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv5-d16
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 30


 404              	xTimerCreateTimerTask:
 405              	.LFB4:
 222:os/timers.c   ****         BaseType_t xReturn = pdFAIL;
 406              		.loc 1 222 5 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 10B5     		push	{r4, lr}
 411              	.LCFI6:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 4, -8
 414              		.cfi_offset 14, -4
 415 0002 88B0     		sub	sp, sp, #32
 416              	.LCFI7:
 417              		.cfi_def_cfa_offset 40
 223:os/timers.c   **** 
 418              		.loc 1 223 9 view .LVU99
 419              	.LVL32:
 229:os/timers.c   **** 
 420              		.loc 1 229 9 view .LVU100
 421 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 422              	.LVL33:
 231:os/timers.c   ****         {
 423              		.loc 1 231 9 view .LVU101
 231:os/timers.c   ****         {
 424              		.loc 1 231 25 is_stmt 0 view .LVU102
 425 0008 134B     		ldr	r3, .L35
 426 000a 1B68     		ldr	r3, [r3]
 231:os/timers.c   ****         {
 427              		.loc 1 231 11 view .LVU103
 428 000c CBB1     		cbz	r3, .L30
 429              	.LBB48:
 235:os/timers.c   ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 430              		.loc 1 235 21 is_stmt 1 view .LVU104
 235:os/timers.c   ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 431              		.loc 1 235 36 is_stmt 0 view .LVU105
 432 000e 0024     		movs	r4, #0
 433 0010 0594     		str	r4, [sp, #20]
 236:os/timers.c   ****                     uint32_t ulTimerTaskStackSize;
 434              		.loc 1 236 21 is_stmt 1 view .LVU106
 236:os/timers.c   ****                     uint32_t ulTimerTaskStackSize;
 435              		.loc 1 236 35 is_stmt 0 view .LVU107
 436 0012 0694     		str	r4, [sp, #24]
 237:os/timers.c   **** 
 437              		.loc 1 237 21 is_stmt 1 view .LVU108
 239:os/timers.c   ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 438              		.loc 1 239 21 view .LVU109
 439 0014 07AA     		add	r2, sp, #28
 440 0016 06A9     		add	r1, sp, #24
 441 0018 05A8     		add	r0, sp, #20
 442 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 443              	.LVL34:
 240:os/timers.c   ****                                                           configTIMER_SERVICE_TASK_NAME,
 444              		.loc 1 240 21 view .LVU110
 240:os/timers.c   ****                                                           configTIMER_SERVICE_TASK_NAME,
 445              		.loc 1 240 40 is_stmt 0 view .LVU111
 446 001e 059B     		ldr	r3, [sp, #20]
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 31


 447 0020 0293     		str	r3, [sp, #8]
 448 0022 069B     		ldr	r3, [sp, #24]
 449 0024 0193     		str	r3, [sp, #4]
 450 0026 0223     		movs	r3, #2
 451 0028 0093     		str	r3, [sp]
 452 002a 2346     		mov	r3, r4
 453 002c 079A     		ldr	r2, [sp, #28]
 454 002e 0B49     		ldr	r1, .L35+4
 455 0030 0B48     		ldr	r0, .L35+8
 456 0032 FFF7FEFF 		bl	xTaskCreateStatic
 457              	.LVL35:
 240:os/timers.c   ****                                                           configTIMER_SERVICE_TASK_NAME,
 458              		.loc 1 240 38 view .LVU112
 459 0036 0B4A     		ldr	r2, .L35+12
 460 0038 1060     		str	r0, [r2]
 248:os/timers.c   ****                     {
 461              		.loc 1 248 21 is_stmt 1 view .LVU113
 248:os/timers.c   ****                     {
 462              		.loc 1 248 23 is_stmt 0 view .LVU114
 463 003a 10B1     		cbz	r0, .L30
 464              	.LBE48:
 271:os/timers.c   **** /*-----------------------------------------------------------*/
 465              		.loc 1 271 5 view .LVU115
 466 003c 0120     		movs	r0, #1
 467 003e 08B0     		add	sp, sp, #32
 468              	.LCFI8:
 469              		.cfi_remember_state
 470              		.cfi_def_cfa_offset 8
 471              		@ sp needed
 472 0040 10BD     		pop	{r4, pc}
 473              	.L30:
 474              	.LCFI9:
 475              		.cfi_restore_state
 476              	.LVL36:
 269:os/timers.c   ****         return xReturn;
 477              		.loc 1 269 9 is_stmt 1 view .LVU116
 478              	.LBB49:
 479              	.LBI49:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 480              		.loc 2 193 34 view .LVU117
 481              	.LBB50:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 482              		.loc 2 195 9 view .LVU118
 483              		.loc 2 197 9 view .LVU119
 484              		.syntax unified
 485              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 486 0042 4FF05003 			mov r3, #80												
 487 0046 72B6     		cpsid i													
 488 0048 83F31188 		msr basepri, r3											
 489 004c BFF36F8F 		isb														
 490 0050 BFF34F8F 		dsb														
 491 0054 62B6     		cpsie i													
 492              	
 493              	@ 0 "" 2
 494              	.LVL37:
 495              		.thumb
 496              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 32


 497              	.L32:
 498              		.loc 2 197 9 is_stmt 0 view .LVU120
 499              	.LBE50:
 500              	.LBE49:
 269:os/timers.c   ****         return xReturn;
 501              		.loc 1 269 9 is_stmt 1 discriminator 1 view .LVU121
 269:os/timers.c   ****         return xReturn;
 502              		.loc 1 269 9 discriminator 1 view .LVU122
 269:os/timers.c   ****         return xReturn;
 503              		.loc 1 269 9 discriminator 1 view .LVU123
 504 0056 FEE7     		b	.L32
 505              	.L36:
 506              		.align	2
 507              	.L35:
 508 0058 00000000 		.word	.LANCHOR2
 509 005c 00000000 		.word	.LC1
 510 0060 00000000 		.word	prvTimerTask
 511 0064 00000000 		.word	.LANCHOR7
 512              		.cfi_endproc
 513              	.LFE4:
 515              		.section	.text.xTimerCreate,"ax",%progbits
 516              		.align	1
 517              		.global	xTimerCreate
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv5-d16
 523              	xTimerCreate:
 524              	.LVL38:
 525              	.LFB5:
 281:os/timers.c   ****             Timer_t * pxNewTimer;
 526              		.loc 1 281 9 view -0
 527              		.cfi_startproc
 528              		@ args = 4, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 281:os/timers.c   ****             Timer_t * pxNewTimer;
 530              		.loc 1 281 9 is_stmt 0 view .LVU125
 531 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 532              	.LCFI10:
 533              		.cfi_def_cfa_offset 24
 534              		.cfi_offset 4, -24
 535              		.cfi_offset 5, -20
 536              		.cfi_offset 6, -16
 537              		.cfi_offset 7, -12
 538              		.cfi_offset 8, -8
 539              		.cfi_offset 14, -4
 540 0004 82B0     		sub	sp, sp, #8
 541              	.LCFI11:
 542              		.cfi_def_cfa_offset 32
 543 0006 0446     		mov	r4, r0
 544 0008 8846     		mov	r8, r1
 545 000a 1746     		mov	r7, r2
 546 000c 1D46     		mov	r5, r3
 282:os/timers.c   **** 
 547              		.loc 1 282 13 is_stmt 1 view .LVU126
 284:os/timers.c   **** 
 548              		.loc 1 284 13 view .LVU127
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 33


 284:os/timers.c   **** 
 549              		.loc 1 284 40 is_stmt 0 view .LVU128
 550 000e 2C20     		movs	r0, #44
 551              	.LVL39:
 284:os/timers.c   **** 
 552              		.loc 1 284 40 view .LVU129
 553 0010 FFF7FEFF 		bl	pvPortMalloc
 554              	.LVL40:
 286:os/timers.c   ****             {
 555              		.loc 1 286 13 is_stmt 1 view .LVU130
 286:os/timers.c   ****             {
 556              		.loc 1 286 15 is_stmt 0 view .LVU131
 557 0014 0646     		mov	r6, r0
 558 0016 58B1     		cbz	r0, .L37
 291:os/timers.c   ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 559              		.loc 1 291 17 is_stmt 1 view .LVU132
 291:os/timers.c   ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 560              		.loc 1 291 38 is_stmt 0 view .LVU133
 561 0018 0023     		movs	r3, #0
 562 001a 80F82830 		strb	r3, [r0, #40]
 292:os/timers.c   ****             }
 563              		.loc 1 292 17 is_stmt 1 view .LVU134
 564 001e 0190     		str	r0, [sp, #4]
 565 0020 089B     		ldr	r3, [sp, #32]
 566 0022 0093     		str	r3, [sp]
 567 0024 2B46     		mov	r3, r5
 568 0026 3A46     		mov	r2, r7
 569 0028 4146     		mov	r1, r8
 570 002a 2046     		mov	r0, r4
 571              	.LVL41:
 292:os/timers.c   ****             }
 572              		.loc 1 292 17 is_stmt 0 view .LVU135
 573 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 574              	.LVL42:
 295:os/timers.c   ****         }
 575              		.loc 1 295 13 is_stmt 1 view .LVU136
 576              	.L37:
 296:os/timers.c   **** 
 577              		.loc 1 296 9 is_stmt 0 view .LVU137
 578 0030 3046     		mov	r0, r6
 579 0032 02B0     		add	sp, sp, #8
 580              	.LCFI12:
 581              		.cfi_def_cfa_offset 24
 582              		@ sp needed
 583 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 296:os/timers.c   **** 
 584              		.loc 1 296 9 view .LVU138
 585              		.cfi_endproc
 586              	.LFE5:
 588              		.section	.text.xTimerCreateStatic,"ax",%progbits
 589              		.align	1
 590              		.global	xTimerCreateStatic
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv5-d16
 596              	xTimerCreateStatic:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 34


 597              	.LVL43:
 598              	.LFB6:
 309:os/timers.c   ****             Timer_t * pxNewTimer;
 599              		.loc 1 309 9 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 8, pretend = 0, frame = 8
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 309:os/timers.c   ****             Timer_t * pxNewTimer;
 603              		.loc 1 309 9 is_stmt 0 view .LVU140
 604 0000 30B5     		push	{r4, r5, lr}
 605              	.LCFI13:
 606              		.cfi_def_cfa_offset 12
 607              		.cfi_offset 4, -12
 608              		.cfi_offset 5, -8
 609              		.cfi_offset 14, -4
 610 0002 85B0     		sub	sp, sp, #20
 611              	.LCFI14:
 612              		.cfi_def_cfa_offset 32
 613 0004 099C     		ldr	r4, [sp, #36]
 310:os/timers.c   **** 
 614              		.loc 1 310 13 is_stmt 1 view .LVU141
 615              	.LBB51:
 317:os/timers.c   ****                     configASSERT( xSize == sizeof( Timer_t ) );
 616              		.loc 1 317 21 view .LVU142
 317:os/timers.c   ****                     configASSERT( xSize == sizeof( Timer_t ) );
 617              		.loc 1 317 37 is_stmt 0 view .LVU143
 618 0006 2C25     		movs	r5, #44
 619 0008 0395     		str	r5, [sp, #12]
 318:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 620              		.loc 1 318 21 is_stmt 1 view .LVU144
 621 000a 039D     		ldr	r5, [sp, #12]
 622 000c 2C2D     		cmp	r5, #44
 623 000e 0AD0     		beq	.L41
 318:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 624              		.loc 1 318 21 view .LVU145
 625              	.LBB52:
 626              	.LBI52:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 627              		.loc 2 193 34 view .LVU146
 628              	.LBB53:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 629              		.loc 2 195 9 view .LVU147
 630              		.loc 2 197 9 view .LVU148
 631              		.syntax unified
 632              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 633 0010 4FF05003 			mov r3, #80												
 634 0014 72B6     		cpsid i													
 635 0016 83F31188 		msr basepri, r3											
 636 001a BFF36F8F 		isb														
 637 001e BFF34F8F 		dsb														
 638 0022 62B6     		cpsie i													
 639              	
 640              	@ 0 "" 2
 641              	.LVL44:
 642              		.thumb
 643              		.syntax unified
 644              	.L42:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 35


 645              		.loc 2 197 9 is_stmt 0 view .LVU149
 646              	.LBE53:
 647              	.LBE52:
 318:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 648              		.loc 1 318 21 is_stmt 1 discriminator 1 view .LVU150
 318:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 649              		.loc 1 318 21 discriminator 1 view .LVU151
 318:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 650              		.loc 1 318 21 discriminator 1 view .LVU152
 651 0024 FEE7     		b	.L42
 652              	.LVL45:
 653              	.L41:
 318:os/timers.c   ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 654              		.loc 1 318 63 discriminator 2 view .LVU153
 319:os/timers.c   ****                 }
 655              		.loc 1 319 21 discriminator 2 view .LVU154
 656 0026 039D     		ldr	r5, [sp, #12]
 657              	.LBE51:
 324:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 658              		.loc 1 324 13 discriminator 2 view .LVU155
 659 0028 54B1     		cbz	r4, .L46
 324:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 660              		.loc 1 324 42 view .LVU156
 325:os/timers.c   **** 
 661              		.loc 1 325 13 view .LVU157
 662              	.LVL46:
 327:os/timers.c   ****             {
 663              		.loc 1 327 13 view .LVU158
 332:os/timers.c   **** 
 664              		.loc 1 332 17 view .LVU159
 332:os/timers.c   **** 
 665              		.loc 1 332 38 is_stmt 0 view .LVU160
 666 002a 0225     		movs	r5, #2
 667 002c 84F82850 		strb	r5, [r4, #40]
 334:os/timers.c   ****             }
 668              		.loc 1 334 17 is_stmt 1 view .LVU161
 669 0030 0194     		str	r4, [sp, #4]
 670 0032 089D     		ldr	r5, [sp, #32]
 671 0034 0095     		str	r5, [sp]
 672 0036 FFF7FEFF 		bl	prvInitialiseNewTimer
 673              	.LVL47:
 337:os/timers.c   ****         }
 674              		.loc 1 337 13 view .LVU162
 338:os/timers.c   **** 
 675              		.loc 1 338 9 is_stmt 0 view .LVU163
 676 003a 2046     		mov	r0, r4
 677 003c 05B0     		add	sp, sp, #20
 678              	.LCFI15:
 679              		.cfi_remember_state
 680              		.cfi_def_cfa_offset 12
 681              		@ sp needed
 682 003e 30BD     		pop	{r4, r5, pc}
 683              	.LVL48:
 684              	.L46:
 685              	.LCFI16:
 686              		.cfi_restore_state
 324:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 36


 687              		.loc 1 324 13 is_stmt 1 view .LVU164
 688              	.LBB54:
 689              	.LBI54:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 690              		.loc 2 193 34 view .LVU165
 691              	.LBB55:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 692              		.loc 2 195 9 view .LVU166
 693              		.loc 2 197 9 view .LVU167
 694              		.syntax unified
 695              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 696 0040 4FF05003 			mov r3, #80												
 697 0044 72B6     		cpsid i													
 698 0046 83F31188 		msr basepri, r3											
 699 004a BFF36F8F 		isb														
 700 004e BFF34F8F 		dsb														
 701 0052 62B6     		cpsie i													
 702              	
 703              	@ 0 "" 2
 704              	.LVL49:
 705              		.thumb
 706              		.syntax unified
 707              	.L44:
 708              		.loc 2 197 9 is_stmt 0 view .LVU168
 709              	.LBE55:
 710              	.LBE54:
 324:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 711              		.loc 1 324 13 is_stmt 1 discriminator 2 view .LVU169
 324:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 712              		.loc 1 324 13 discriminator 2 view .LVU170
 324:os/timers.c   ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 713              		.loc 1 324 13 discriminator 2 view .LVU171
 714 0054 FEE7     		b	.L44
 715              		.cfi_endproc
 716              	.LFE6:
 718              		.section	.text.xTimerGenericCommand,"ax",%progbits
 719              		.align	1
 720              		.global	xTimerGenericCommand
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-d16
 726              	xTimerGenericCommand:
 727              	.LVL50:
 728              	.LFB8:
 382:os/timers.c   ****         BaseType_t xReturn = pdFAIL;
 729              		.loc 1 382 5 view -0
 730              		.cfi_startproc
 731              		@ args = 4, pretend = 0, frame = 16
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 383:os/timers.c   ****         DaemonTaskMessage_t xMessage;
 733              		.loc 1 383 9 view .LVU173
 384:os/timers.c   **** 
 734              		.loc 1 384 9 view .LVU174
 386:os/timers.c   **** 
 735              		.loc 1 386 9 view .LVU175
 736 0000 C0B1     		cbz	r0, .L56
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 37


 382:os/timers.c   ****         BaseType_t xReturn = pdFAIL;
 737              		.loc 1 382 5 is_stmt 0 discriminator 2 view .LVU176
 738 0002 10B5     		push	{r4, lr}
 739              	.LCFI17:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 4, -8
 742              		.cfi_offset 14, -4
 743 0004 84B0     		sub	sp, sp, #16
 744              	.LCFI18:
 745              		.cfi_def_cfa_offset 24
 746 0006 1446     		mov	r4, r2
 747 0008 1A46     		mov	r2, r3
 748              	.LVL51:
 382:os/timers.c   ****         BaseType_t xReturn = pdFAIL;
 749              		.loc 1 382 5 discriminator 2 view .LVU177
 750 000a 0346     		mov	r3, r0
 751              	.LVL52:
 386:os/timers.c   **** 
 752              		.loc 1 386 31 is_stmt 1 discriminator 2 view .LVU178
 390:os/timers.c   ****         {
 753              		.loc 1 390 9 discriminator 2 view .LVU179
 390:os/timers.c   ****         {
 754              		.loc 1 390 25 is_stmt 0 discriminator 2 view .LVU180
 755 000c 1748     		ldr	r0, .L58
 756              	.LVL53:
 390:os/timers.c   ****         {
 757              		.loc 1 390 25 discriminator 2 view .LVU181
 758 000e 0068     		ldr	r0, [r0]
 390:os/timers.c   ****         {
 759              		.loc 1 390 11 discriminator 2 view .LVU182
 760 0010 48B3     		cbz	r0, .L53
 393:os/timers.c   ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 761              		.loc 1 393 13 is_stmt 1 view .LVU183
 393:os/timers.c   ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 762              		.loc 1 393 33 is_stmt 0 view .LVU184
 763 0012 0091     		str	r1, [sp]
 394:os/timers.c   ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 764              		.loc 1 394 13 is_stmt 1 view .LVU185
 394:os/timers.c   ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 765              		.loc 1 394 55 is_stmt 0 view .LVU186
 766 0014 0194     		str	r4, [sp, #4]
 395:os/timers.c   **** 
 767              		.loc 1 395 13 is_stmt 1 view .LVU187
 395:os/timers.c   **** 
 768              		.loc 1 395 49 is_stmt 0 view .LVU188
 769 0016 0293     		str	r3, [sp, #8]
 397:os/timers.c   ****             {
 770              		.loc 1 397 13 is_stmt 1 view .LVU189
 397:os/timers.c   ****             {
 771              		.loc 1 397 15 is_stmt 0 view .LVU190
 772 0018 0529     		cmp	r1, #5
 773 001a 1EDC     		bgt	.L51
 399:os/timers.c   ****                 {
 774              		.loc 1 399 17 is_stmt 1 view .LVU191
 399:os/timers.c   ****                 {
 775              		.loc 1 399 21 is_stmt 0 view .LVU192
 776 001c FFF7FEFF 		bl	xTaskGetSchedulerState
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 38


 777              	.LVL54:
 399:os/timers.c   ****                 {
 778              		.loc 1 399 19 view .LVU193
 779 0020 0228     		cmp	r0, #2
 780 0022 12D0     		beq	.L57
 405:os/timers.c   ****                 }
 781              		.loc 1 405 21 is_stmt 1 view .LVU194
 405:os/timers.c   ****                 }
 782              		.loc 1 405 31 is_stmt 0 view .LVU195
 783 0024 0023     		movs	r3, #0
 784 0026 1A46     		mov	r2, r3
 785 0028 6946     		mov	r1, sp
 786 002a 1048     		ldr	r0, .L58
 787 002c 0068     		ldr	r0, [r0]
 788 002e FFF7FEFF 		bl	xQueueGenericSend
 789              	.LVL55:
 405:os/timers.c   ****                 }
 790              		.loc 1 405 31 view .LVU196
 791 0032 16E0     		b	.L47
 792              	.LVL56:
 793              	.L56:
 794              	.LCFI19:
 795              		.cfi_def_cfa_offset 0
 796              		.cfi_restore 4
 797              		.cfi_restore 14
 386:os/timers.c   **** 
 798              		.loc 1 386 9 is_stmt 1 view .LVU197
 799              	.LBB56:
 800              	.LBI56:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 801              		.loc 2 193 34 view .LVU198
 802              	.LBB57:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 803              		.loc 2 195 9 view .LVU199
 804              		.loc 2 197 9 view .LVU200
 805              		.syntax unified
 806              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 807 0034 4FF05003 			mov r3, #80												
 808 0038 72B6     		cpsid i													
 809 003a 83F31188 		msr basepri, r3											
 810 003e BFF36F8F 		isb														
 811 0042 BFF34F8F 		dsb														
 812 0046 62B6     		cpsie i													
 813              	
 814              	@ 0 "" 2
 815              	.LVL57:
 816              		.thumb
 817              		.syntax unified
 818              	.L49:
 819              		.loc 2 197 9 is_stmt 0 view .LVU201
 820              	.LBE57:
 821              	.LBE56:
 386:os/timers.c   **** 
 822              		.loc 1 386 9 is_stmt 1 discriminator 1 view .LVU202
 386:os/timers.c   **** 
 823              		.loc 1 386 9 discriminator 1 view .LVU203
 386:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 39


 824              		.loc 1 386 9 discriminator 1 view .LVU204
 825 0048 FEE7     		b	.L49
 826              	.LVL58:
 827              	.L57:
 828              	.LCFI20:
 829              		.cfi_def_cfa_offset 24
 830              		.cfi_offset 4, -8
 831              		.cfi_offset 14, -4
 401:os/timers.c   ****                 }
 832              		.loc 1 401 21 view .LVU205
 401:os/timers.c   ****                 }
 833              		.loc 1 401 31 is_stmt 0 view .LVU206
 834 004a 0023     		movs	r3, #0
 835 004c 069A     		ldr	r2, [sp, #24]
 836 004e 6946     		mov	r1, sp
 837 0050 0648     		ldr	r0, .L58
 838 0052 0068     		ldr	r0, [r0]
 839 0054 FFF7FEFF 		bl	xQueueGenericSend
 840              	.LVL59:
 401:os/timers.c   ****                 }
 841              		.loc 1 401 31 view .LVU207
 842 0058 03E0     		b	.L47
 843              	.LVL60:
 844              	.L51:
 410:os/timers.c   ****             }
 845              		.loc 1 410 17 is_stmt 1 view .LVU208
 410:os/timers.c   ****             }
 846              		.loc 1 410 27 is_stmt 0 view .LVU209
 847 005a 0023     		movs	r3, #0
 848              	.LVL61:
 410:os/timers.c   ****             }
 849              		.loc 1 410 27 view .LVU210
 850 005c 6946     		mov	r1, sp
 851              	.LVL62:
 410:os/timers.c   ****             }
 852              		.loc 1 410 27 view .LVU211
 853 005e FFF7FEFF 		bl	xQueueGenericSendFromISR
 854              	.LVL63:
 855              	.L47:
 421:os/timers.c   **** /*-----------------------------------------------------------*/
 856              		.loc 1 421 5 view .LVU212
 857 0062 04B0     		add	sp, sp, #16
 858              	.LCFI21:
 859              		.cfi_remember_state
 860              		.cfi_def_cfa_offset 8
 861              		@ sp needed
 862 0064 10BD     		pop	{r4, pc}
 863              	.LVL64:
 864              	.L53:
 865              	.LCFI22:
 866              		.cfi_restore_state
 383:os/timers.c   ****         DaemonTaskMessage_t xMessage;
 867              		.loc 1 383 20 view .LVU213
 868 0066 0020     		movs	r0, #0
 417:os/timers.c   ****         }
 869              		.loc 1 417 37 is_stmt 1 view .LVU214
 420:os/timers.c   ****     }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 40


 870              		.loc 1 420 9 view .LVU215
 420:os/timers.c   ****     }
 871              		.loc 1 420 16 is_stmt 0 view .LVU216
 872 0068 FBE7     		b	.L47
 873              	.L59:
 874 006a 00BF     		.align	2
 875              	.L58:
 876 006c 00000000 		.word	.LANCHOR2
 877              		.cfi_endproc
 878              	.LFE8:
 880              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 881              		.align	1
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu fpv5-d16
 887              	prvSwitchTimerLists:
 888              	.LFB22:
 894:os/timers.c   ****         TickType_t xNextExpireTime, xReloadTime;
 889              		.loc 1 894 5 is_stmt 1 view -0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893 0000 70B5     		push	{r4, r5, r6, lr}
 894              	.LCFI23:
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
 899              		.cfi_offset 14, -4
 900 0002 82B0     		sub	sp, sp, #8
 901              	.LCFI24:
 902              		.cfi_def_cfa_offset 24
 895:os/timers.c   ****         List_t * pxTemp;
 903              		.loc 1 895 9 view .LVU218
 896:os/timers.c   ****         Timer_t * pxTimer;
 904              		.loc 1 896 9 view .LVU219
 897:os/timers.c   ****         BaseType_t xResult;
 905              		.loc 1 897 9 view .LVU220
 898:os/timers.c   **** 
 906              		.loc 1 898 9 view .LVU221
 904:os/timers.c   ****         {
 907              		.loc 1 904 9 view .LVU222
 908              	.L62:
 943:os/timers.c   ****             }
 909              		.loc 1 943 41 view .LVU223
 904:os/timers.c   ****         {
 910              		.loc 1 904 14 view .LVU224
 904:os/timers.c   ****         {
 911              		.loc 1 904 16 is_stmt 0 view .LVU225
 912 0004 1C4B     		ldr	r3, .L69
 913 0006 1B68     		ldr	r3, [r3]
 914 0008 1A68     		ldr	r2, [r3]
 904:os/timers.c   ****         {
 915              		.loc 1 904 14 view .LVU226
 916 000a 72B3     		cbz	r2, .L68
 906:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 41


 917              		.loc 1 906 13 is_stmt 1 view .LVU227
 906:os/timers.c   **** 
 918              		.loc 1 906 31 is_stmt 0 view .LVU228
 919 000c DB68     		ldr	r3, [r3, #12]
 906:os/timers.c   **** 
 920              		.loc 1 906 29 view .LVU229
 921 000e 1E68     		ldr	r6, [r3]
 922              	.LVL65:
 909:os/timers.c   ****             ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 923              		.loc 1 909 13 is_stmt 1 view .LVU230
 909:os/timers.c   ****             ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 924              		.loc 1 909 21 is_stmt 0 view .LVU231
 925 0010 DC68     		ldr	r4, [r3, #12]
 926              	.LVL66:
 910:os/timers.c   ****             traceTIMER_EXPIRED( pxTimer );
 927              		.loc 1 910 13 is_stmt 1 view .LVU232
 910:os/timers.c   ****             traceTIMER_EXPIRED( pxTimer );
 928              		.loc 1 910 22 is_stmt 0 view .LVU233
 929 0012 251D     		adds	r5, r4, #4
 930 0014 2846     		mov	r0, r5
 931 0016 FFF7FEFF 		bl	uxListRemove
 932              	.LVL67:
 911:os/timers.c   **** 
 933              		.loc 1 911 42 is_stmt 1 view .LVU234
 916:os/timers.c   **** 
 934              		.loc 1 916 13 view .LVU235
 916:os/timers.c   **** 
 935              		.loc 1 916 20 is_stmt 0 view .LVU236
 936 001a 236A     		ldr	r3, [r4, #32]
 916:os/timers.c   **** 
 937              		.loc 1 916 13 view .LVU237
 938 001c 2046     		mov	r0, r4
 939 001e 9847     		blx	r3
 940              	.LVL68:
 918:os/timers.c   ****             {
 941              		.loc 1 918 13 is_stmt 1 view .LVU238
 918:os/timers.c   ****             {
 942              		.loc 1 918 26 is_stmt 0 view .LVU239
 943 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 918:os/timers.c   ****             {
 944              		.loc 1 918 15 view .LVU240
 945 0024 13F0040F 		tst	r3, #4
 946 0028 ECD0     		beq	.L62
 926:os/timers.c   **** 
 947              		.loc 1 926 17 is_stmt 1 view .LVU241
 926:os/timers.c   **** 
 948              		.loc 1 926 58 is_stmt 0 view .LVU242
 949 002a A369     		ldr	r3, [r4, #24]
 926:os/timers.c   **** 
 950              		.loc 1 926 29 view .LVU243
 951 002c 3344     		add	r3, r3, r6
 952              	.LVL69:
 928:os/timers.c   ****                 {
 953              		.loc 1 928 17 is_stmt 1 view .LVU244
 928:os/timers.c   ****                 {
 954              		.loc 1 928 19 is_stmt 0 view .LVU245
 955 002e 9E42     		cmp	r6, r3
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 42


 956 0030 07D2     		bcs	.L63
 930:os/timers.c   ****                     listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 957              		.loc 1 930 21 is_stmt 1 view .LVU246
 958 0032 6360     		str	r3, [r4, #4]
 931:os/timers.c   ****                     vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 959              		.loc 1 931 21 view .LVU247
 960 0034 2461     		str	r4, [r4, #16]
 932:os/timers.c   ****                 }
 961              		.loc 1 932 21 view .LVU248
 962 0036 2946     		mov	r1, r5
 963 0038 0F4B     		ldr	r3, .L69
 964              	.LVL70:
 932:os/timers.c   ****                 }
 965              		.loc 1 932 21 is_stmt 0 view .LVU249
 966 003a 1868     		ldr	r0, [r3]
 967 003c FFF7FEFF 		bl	vListInsert
 968              	.LVL71:
 932:os/timers.c   ****                 }
 969              		.loc 1 932 21 view .LVU250
 970 0040 E0E7     		b	.L62
 971              	.LVL72:
 972              	.L63:
 936:os/timers.c   ****                     configASSERT( xResult );
 973              		.loc 1 936 21 is_stmt 1 view .LVU251
 936:os/timers.c   ****                     configASSERT( xResult );
 974              		.loc 1 936 31 is_stmt 0 view .LVU252
 975 0042 0021     		movs	r1, #0
 976 0044 0091     		str	r1, [sp]
 977 0046 0B46     		mov	r3, r1
 978              	.LVL73:
 936:os/timers.c   ****                     configASSERT( xResult );
 979              		.loc 1 936 31 view .LVU253
 980 0048 3246     		mov	r2, r6
 981 004a 2046     		mov	r0, r4
 982 004c FFF7FEFF 		bl	xTimerGenericCommand
 983              	.LVL74:
 937:os/timers.c   ****                     ( void ) xResult;
 984              		.loc 1 937 21 is_stmt 1 view .LVU254
 985 0050 0028     		cmp	r0, #0
 986 0052 D7D1     		bne	.L62
 937:os/timers.c   ****                     ( void ) xResult;
 987              		.loc 1 937 21 view .LVU255
 988              	.LBB58:
 989              	.LBI58:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 990              		.loc 2 193 34 view .LVU256
 991              	.LBB59:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 992              		.loc 2 195 9 view .LVU257
 993              		.loc 2 197 9 view .LVU258
 994              		.syntax unified
 995              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 996 0054 4FF05003 			mov r3, #80												
 997 0058 72B6     		cpsid i													
 998 005a 83F31188 		msr basepri, r3											
 999 005e BFF36F8F 		isb														
 1000 0062 BFF34F8F 		dsb														
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 43


 1001 0066 62B6     		cpsie i													
 1002              	
 1003              	@ 0 "" 2
 1004              	.LVL75:
 1005              		.thumb
 1006              		.syntax unified
 1007              	.L65:
 1008              		.loc 2 197 9 is_stmt 0 view .LVU259
 1009              	.LBE59:
 1010              	.LBE58:
 937:os/timers.c   ****                     ( void ) xResult;
 1011              		.loc 1 937 21 is_stmt 1 discriminator 1 view .LVU260
 937:os/timers.c   ****                     ( void ) xResult;
 1012              		.loc 1 937 21 discriminator 1 view .LVU261
 937:os/timers.c   ****                     ( void ) xResult;
 1013              		.loc 1 937 21 discriminator 1 view .LVU262
 1014 0068 FEE7     		b	.L65
 1015              	.LVL76:
 1016              	.L68:
 947:os/timers.c   ****         pxCurrentTimerList = pxOverflowTimerList;
 1017              		.loc 1 947 9 view .LVU263
 948:os/timers.c   ****         pxOverflowTimerList = pxTemp;
 1018              		.loc 1 948 9 view .LVU264
 948:os/timers.c   ****         pxOverflowTimerList = pxTemp;
 1019              		.loc 1 948 28 is_stmt 0 view .LVU265
 1020 006a 044A     		ldr	r2, .L69+4
 1021 006c 1068     		ldr	r0, [r2]
 1022 006e 0249     		ldr	r1, .L69
 1023 0070 0860     		str	r0, [r1]
 949:os/timers.c   ****     }
 1024              		.loc 1 949 9 is_stmt 1 view .LVU266
 949:os/timers.c   ****     }
 1025              		.loc 1 949 29 is_stmt 0 view .LVU267
 1026 0072 1360     		str	r3, [r2]
 950:os/timers.c   **** /*-----------------------------------------------------------*/
 1027              		.loc 1 950 5 view .LVU268
 1028 0074 02B0     		add	sp, sp, #8
 1029              	.LCFI25:
 1030              		.cfi_def_cfa_offset 16
 1031              		@ sp needed
 1032 0076 70BD     		pop	{r4, r5, r6, pc}
 1033              	.L70:
 1034              		.align	2
 1035              	.L69:
 1036 0078 00000000 		.word	.LANCHOR0
 1037 007c 00000000 		.word	.LANCHOR1
 1038              		.cfi_endproc
 1039              	.LFE22:
 1041              		.section	.text.prvSampleTimeNow,"ax",%progbits
 1042              		.align	1
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv5-d16
 1048              	prvSampleTimeNow:
 1049              	.LVL77:
 1050              	.LFB19:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 44


 677:os/timers.c   ****         TickType_t xTimeNow;
 1051              		.loc 1 677 5 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 677:os/timers.c   ****         TickType_t xTimeNow;
 1055              		.loc 1 677 5 is_stmt 0 view .LVU270
 1056 0000 38B5     		push	{r3, r4, r5, lr}
 1057              	.LCFI26:
 1058              		.cfi_def_cfa_offset 16
 1059              		.cfi_offset 3, -16
 1060              		.cfi_offset 4, -12
 1061              		.cfi_offset 5, -8
 1062              		.cfi_offset 14, -4
 1063 0002 0546     		mov	r5, r0
 678:os/timers.c   ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 1064              		.loc 1 678 9 is_stmt 1 view .LVU271
 679:os/timers.c   **** 
 1065              		.loc 1 679 25 view .LVU272
 681:os/timers.c   **** 
 1066              		.loc 1 681 9 view .LVU273
 681:os/timers.c   **** 
 1067              		.loc 1 681 20 is_stmt 0 view .LVU274
 1068 0004 FFF7FEFF 		bl	xTaskGetTickCount
 1069              	.LVL78:
 681:os/timers.c   **** 
 1070              		.loc 1 681 20 view .LVU275
 1071 0008 0446     		mov	r4, r0
 1072              	.LVL79:
 683:os/timers.c   ****         {
 1073              		.loc 1 683 9 is_stmt 1 view .LVU276
 683:os/timers.c   ****         {
 1074              		.loc 1 683 22 is_stmt 0 view .LVU277
 1075 000a 074B     		ldr	r3, .L76
 1076 000c 1B68     		ldr	r3, [r3]
 683:os/timers.c   ****         {
 1077              		.loc 1 683 11 view .LVU278
 1078 000e 8342     		cmp	r3, r0
 1079 0010 05D8     		bhi	.L75
 690:os/timers.c   ****         }
 1080              		.loc 1 690 13 is_stmt 1 view .LVU279
 690:os/timers.c   ****         }
 1081              		.loc 1 690 39 is_stmt 0 view .LVU280
 1082 0012 0023     		movs	r3, #0
 1083 0014 2B60     		str	r3, [r5]
 1084              	.LVL80:
 1085              	.L73:
 693:os/timers.c   **** 
 1086              		.loc 1 693 9 is_stmt 1 view .LVU281
 693:os/timers.c   **** 
 1087              		.loc 1 693 19 is_stmt 0 view .LVU282
 1088 0016 044B     		ldr	r3, .L76
 1089 0018 1C60     		str	r4, [r3]
 695:os/timers.c   ****     }
 1090              		.loc 1 695 9 is_stmt 1 view .LVU283
 696:os/timers.c   **** /*-----------------------------------------------------------*/
 1091              		.loc 1 696 5 is_stmt 0 view .LVU284
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 45


 1092 001a 2046     		mov	r0, r4
 1093 001c 38BD     		pop	{r3, r4, r5, pc}
 1094              	.LVL81:
 1095              	.L75:
 685:os/timers.c   ****             *pxTimerListsWereSwitched = pdTRUE;
 1096              		.loc 1 685 13 is_stmt 1 view .LVU285
 1097 001e FFF7FEFF 		bl	prvSwitchTimerLists
 1098              	.LVL82:
 686:os/timers.c   ****         }
 1099              		.loc 1 686 13 view .LVU286
 686:os/timers.c   ****         }
 1100              		.loc 1 686 39 is_stmt 0 view .LVU287
 1101 0022 0123     		movs	r3, #1
 1102 0024 2B60     		str	r3, [r5]
 1103 0026 F6E7     		b	.L73
 1104              	.L77:
 1105              		.align	2
 1106              	.L76:
 1107 0028 00000000 		.word	.LANCHOR8
 1108              		.cfi_endproc
 1109              	.LFE19:
 1111              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 1112              		.align	1
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu fpv5-d16
 1118              	prvProcessExpiredTimer:
 1119              	.LVL83:
 1120              	.LFB15:
 510:os/timers.c   ****         BaseType_t xResult;
 1121              		.loc 1 510 5 is_stmt 1 view -0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 510:os/timers.c   ****         BaseType_t xResult;
 1125              		.loc 1 510 5 is_stmt 0 view .LVU289
 1126 0000 70B5     		push	{r4, r5, r6, lr}
 1127              	.LCFI27:
 1128              		.cfi_def_cfa_offset 16
 1129              		.cfi_offset 4, -16
 1130              		.cfi_offset 5, -12
 1131              		.cfi_offset 6, -8
 1132              		.cfi_offset 14, -4
 1133 0002 82B0     		sub	sp, sp, #8
 1134              	.LCFI28:
 1135              		.cfi_def_cfa_offset 24
 1136 0004 0546     		mov	r5, r0
 1137 0006 0E46     		mov	r6, r1
 511:os/timers.c   ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 1138              		.loc 1 511 9 is_stmt 1 view .LVU290
 512:os/timers.c   **** 
 1139              		.loc 1 512 9 view .LVU291
 512:os/timers.c   **** 
 1140              		.loc 1 512 49 is_stmt 0 view .LVU292
 1141 0008 184B     		ldr	r3, .L84
 1142 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 46


 1143 000c DB68     		ldr	r3, [r3, #12]
 512:os/timers.c   **** 
 1144              		.loc 1 512 25 view .LVU293
 1145 000e DC68     		ldr	r4, [r3, #12]
 1146              	.LVL84:
 517:os/timers.c   ****         traceTIMER_EXPIRED( pxTimer );
 1147              		.loc 1 517 9 is_stmt 1 view .LVU294
 517:os/timers.c   ****         traceTIMER_EXPIRED( pxTimer );
 1148              		.loc 1 517 18 is_stmt 0 view .LVU295
 1149 0010 201D     		adds	r0, r4, #4
 1150              	.LVL85:
 517:os/timers.c   ****         traceTIMER_EXPIRED( pxTimer );
 1151              		.loc 1 517 18 view .LVU296
 1152 0012 FFF7FEFF 		bl	uxListRemove
 1153              	.LVL86:
 518:os/timers.c   **** 
 1154              		.loc 1 518 38 is_stmt 1 view .LVU297
 522:os/timers.c   ****         {
 1155              		.loc 1 522 9 view .LVU298
 522:os/timers.c   ****         {
 1156              		.loc 1 522 22 is_stmt 0 view .LVU299
 1157 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 522:os/timers.c   ****         {
 1158              		.loc 1 522 11 view .LVU300
 1159 001a 13F0040F 		tst	r3, #4
 1160 001e 08D1     		bne	.L83
 542:os/timers.c   ****             mtCOVERAGE_TEST_MARKER();
 1161              		.loc 1 542 13 is_stmt 1 view .LVU301
 542:os/timers.c   ****             mtCOVERAGE_TEST_MARKER();
 1162              		.loc 1 542 31 is_stmt 0 view .LVU302
 1163 0020 23F00103 		bic	r3, r3, #1
 1164 0024 84F82830 		strb	r3, [r4, #40]
 1165              	.L80:
 543:os/timers.c   ****         }
 1166              		.loc 1 543 37 is_stmt 1 view .LVU303
 547:os/timers.c   ****     }
 1167              		.loc 1 547 9 view .LVU304
 547:os/timers.c   ****     }
 1168              		.loc 1 547 16 is_stmt 0 view .LVU305
 1169 0028 236A     		ldr	r3, [r4, #32]
 547:os/timers.c   ****     }
 1170              		.loc 1 547 9 view .LVU306
 1171 002a 2046     		mov	r0, r4
 1172 002c 9847     		blx	r3
 1173              	.LVL87:
 548:os/timers.c   **** /*-----------------------------------------------------------*/
 1174              		.loc 1 548 5 view .LVU307
 1175 002e 02B0     		add	sp, sp, #8
 1176              	.LCFI29:
 1177              		.cfi_remember_state
 1178              		.cfi_def_cfa_offset 16
 1179              		@ sp needed
 1180 0030 70BD     		pop	{r4, r5, r6, pc}
 1181              	.LVL88:
 1182              	.L83:
 1183              	.LCFI30:
 1184              		.cfi_restore_state
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 47


 527:os/timers.c   ****             {
 1185              		.loc 1 527 13 is_stmt 1 view .LVU308
 527:os/timers.c   ****             {
 1186              		.loc 1 527 81 is_stmt 0 view .LVU309
 1187 0032 A169     		ldr	r1, [r4, #24]
 527:os/timers.c   ****             {
 1188              		.loc 1 527 17 view .LVU310
 1189 0034 2B46     		mov	r3, r5
 1190 0036 3246     		mov	r2, r6
 1191 0038 2944     		add	r1, r1, r5
 1192 003a 2046     		mov	r0, r4
 1193 003c FFF7FEFF 		bl	prvInsertTimerInActiveList
 1194              	.LVL89:
 527:os/timers.c   ****             {
 1195              		.loc 1 527 15 view .LVU311
 1196 0040 0028     		cmp	r0, #0
 1197 0042 F1D0     		beq	.L80
 531:os/timers.c   ****                 configASSERT( xResult );
 1198              		.loc 1 531 17 is_stmt 1 view .LVU312
 531:os/timers.c   ****                 configASSERT( xResult );
 1199              		.loc 1 531 27 is_stmt 0 view .LVU313
 1200 0044 0021     		movs	r1, #0
 1201 0046 0091     		str	r1, [sp]
 1202 0048 0B46     		mov	r3, r1
 1203 004a 2A46     		mov	r2, r5
 1204 004c 2046     		mov	r0, r4
 1205 004e FFF7FEFF 		bl	xTimerGenericCommand
 1206              	.LVL90:
 532:os/timers.c   ****                 ( void ) xResult;
 1207              		.loc 1 532 17 is_stmt 1 view .LVU314
 1208 0052 0028     		cmp	r0, #0
 1209 0054 E8D1     		bne	.L80
 532:os/timers.c   ****                 ( void ) xResult;
 1210              		.loc 1 532 17 view .LVU315
 1211              	.LBB60:
 1212              	.LBI60:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1213              		.loc 2 193 34 view .LVU316
 1214              	.LBB61:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1215              		.loc 2 195 9 view .LVU317
 1216              		.loc 2 197 9 view .LVU318
 1217              		.syntax unified
 1218              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1219 0056 4FF05003 			mov r3, #80												
 1220 005a 72B6     		cpsid i													
 1221 005c 83F31188 		msr basepri, r3											
 1222 0060 BFF36F8F 		isb														
 1223 0064 BFF34F8F 		dsb														
 1224 0068 62B6     		cpsie i													
 1225              	
 1226              	@ 0 "" 2
 1227              	.LVL91:
 1228              		.thumb
 1229              		.syntax unified
 1230              	.L81:
 1231              		.loc 2 197 9 is_stmt 0 view .LVU319
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 48


 1232              	.LBE61:
 1233              	.LBE60:
 532:os/timers.c   ****                 ( void ) xResult;
 1234              		.loc 1 532 17 is_stmt 1 discriminator 1 view .LVU320
 532:os/timers.c   ****                 ( void ) xResult;
 1235              		.loc 1 532 17 discriminator 1 view .LVU321
 532:os/timers.c   ****                 ( void ) xResult;
 1236              		.loc 1 532 17 discriminator 1 view .LVU322
 1237 006a FEE7     		b	.L81
 1238              	.L85:
 1239              		.align	2
 1240              	.L84:
 1241 006c 00000000 		.word	.LANCHOR0
 1242              		.cfi_endproc
 1243              	.LFE15:
 1245              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1246              		.align	1
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1250              		.fpu fpv5-d16
 1252              	prvProcessTimerOrBlockTask:
 1253              	.LVL92:
 1254              	.LFB17:
 589:os/timers.c   ****         TickType_t xTimeNow;
 1255              		.loc 1 589 5 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 8
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 589:os/timers.c   ****         TickType_t xTimeNow;
 1259              		.loc 1 589 5 is_stmt 0 view .LVU324
 1260 0000 70B5     		push	{r4, r5, r6, lr}
 1261              	.LCFI31:
 1262              		.cfi_def_cfa_offset 16
 1263              		.cfi_offset 4, -16
 1264              		.cfi_offset 5, -12
 1265              		.cfi_offset 6, -8
 1266              		.cfi_offset 14, -4
 1267 0002 82B0     		sub	sp, sp, #8
 1268              	.LCFI32:
 1269              		.cfi_def_cfa_offset 24
 1270 0004 0646     		mov	r6, r0
 1271 0006 0C46     		mov	r4, r1
 590:os/timers.c   ****         BaseType_t xTimerListsWereSwitched;
 1272              		.loc 1 590 9 is_stmt 1 view .LVU325
 591:os/timers.c   **** 
 1273              		.loc 1 591 9 view .LVU326
 593:os/timers.c   ****         {
 1274              		.loc 1 593 9 view .LVU327
 1275 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1276              	.LVL93:
 600:os/timers.c   **** 
 1277              		.loc 1 600 13 view .LVU328
 600:os/timers.c   **** 
 1278              		.loc 1 600 24 is_stmt 0 view .LVU329
 1279 000c 01A8     		add	r0, sp, #4
 1280 000e FFF7FEFF 		bl	prvSampleTimeNow
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 49


 1281              	.LVL94:
 602:os/timers.c   ****             {
 1282              		.loc 1 602 13 is_stmt 1 view .LVU330
 602:os/timers.c   ****             {
 1283              		.loc 1 602 41 is_stmt 0 view .LVU331
 1284 0012 019A     		ldr	r2, [sp, #4]
 602:os/timers.c   ****             {
 1285              		.loc 1 602 15 view .LVU332
 1286 0014 4ABB     		cbnz	r2, .L87
 1287 0016 0546     		mov	r5, r0
 605:os/timers.c   ****                 {
 1288              		.loc 1 605 17 is_stmt 1 view .LVU333
 605:os/timers.c   ****                 {
 1289              		.loc 1 605 71 is_stmt 0 view .LVU334
 1290 0018 B042     		cmp	r0, r6
 1291 001a 34BF     		ite	cc
 1292 001c 0023     		movcc	r3, #0
 1293 001e 0123     		movcs	r3, #1
 605:os/timers.c   ****                 {
 1294              		.loc 1 605 50 view .LVU335
 1295 0020 002C     		cmp	r4, #0
 1296 0022 18BF     		it	ne
 1297 0024 0023     		movne	r3, #0
 605:os/timers.c   ****                 {
 1298              		.loc 1 605 19 view .LVU336
 1299 0026 BBB9     		cbnz	r3, .L93
 618:os/timers.c   ****                     {
 1300              		.loc 1 618 21 is_stmt 1 view .LVU337
 618:os/timers.c   ****                     {
 1301              		.loc 1 618 23 is_stmt 0 view .LVU338
 1302 0028 24B1     		cbz	r4, .L90
 622:os/timers.c   ****                     }
 1303              		.loc 1 622 25 is_stmt 1 view .LVU339
 622:os/timers.c   ****                     }
 1304              		.loc 1 622 41 is_stmt 0 view .LVU340
 1305 002a 124B     		ldr	r3, .L94
 1306 002c 1B68     		ldr	r3, [r3]
 1307 002e 1B68     		ldr	r3, [r3]
 1308 0030 CBB9     		cbnz	r3, .L91
 1309 0032 0124     		movs	r4, #1
 1310              	.LVL95:
 1311              	.L90:
 625:os/timers.c   **** 
 1312              		.loc 1 625 21 is_stmt 1 view .LVU341
 1313 0034 2246     		mov	r2, r4
 1314 0036 711B     		subs	r1, r6, r5
 1315 0038 0F4B     		ldr	r3, .L94+4
 1316 003a 1868     		ldr	r0, [r3]
 1317              	.LVL96:
 625:os/timers.c   **** 
 1318              		.loc 1 625 21 is_stmt 0 view .LVU342
 1319 003c FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1320              	.LVL97:
 627:os/timers.c   ****                     {
 1321              		.loc 1 627 21 is_stmt 1 view .LVU343
 627:os/timers.c   ****                     {
 1322              		.loc 1 627 25 is_stmt 0 view .LVU344
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 50


 1323 0040 FFF7FEFF 		bl	xTaskResumeAll
 1324              	.LVL98:
 627:os/timers.c   ****                     {
 1325              		.loc 1 627 23 view .LVU345
 1326 0044 98B9     		cbnz	r0, .L86
 633:os/timers.c   ****                     }
 1327              		.loc 1 633 25 is_stmt 1 view .LVU346
 1328 0046 0D4B     		ldr	r3, .L94+8
 1329 0048 4FF08052 		mov	r2, #268435456
 1330 004c 1A60     		str	r2, [r3]
 633:os/timers.c   ****                     }
 1331              		.loc 1 633 25 view .LVU347
 1332              		.syntax unified
 1333              	@ 633 "os/timers.c" 1
 1334 004e BFF34F8F 		dsb
 1335              	@ 0 "" 2
 633:os/timers.c   ****                     }
 1336              		.loc 1 633 25 view .LVU348
 1337              	@ 633 "os/timers.c" 1
 1338 0052 BFF36F8F 		isb
 1339              	@ 0 "" 2
 633:os/timers.c   ****                     }
 1340              		.loc 1 633 47 view .LVU349
 1341              		.thumb
 1342              		.syntax unified
 1343 0056 0AE0     		b	.L86
 1344              	.LVL99:
 1345              	.L93:
 607:os/timers.c   ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1346              		.loc 1 607 21 view .LVU350
 607:os/timers.c   ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1347              		.loc 1 607 30 is_stmt 0 view .LVU351
 1348 0058 FFF7FEFF 		bl	xTaskResumeAll
 1349              	.LVL100:
 608:os/timers.c   ****                 }
 1350              		.loc 1 608 21 is_stmt 1 view .LVU352
 1351 005c 2946     		mov	r1, r5
 1352 005e 3046     		mov	r0, r6
 1353 0060 FFF7FEFF 		bl	prvProcessExpiredTimer
 1354              	.LVL101:
 1355 0064 03E0     		b	.L86
 1356              	.LVL102:
 1357              	.L91:
 622:os/timers.c   ****                     }
 1358              		.loc 1 622 41 is_stmt 0 view .LVU353
 1359 0066 1446     		mov	r4, r2
 1360              	.LVL103:
 622:os/timers.c   ****                     }
 1361              		.loc 1 622 41 view .LVU354
 1362 0068 E4E7     		b	.L90
 1363              	.LVL104:
 1364              	.L87:
 643:os/timers.c   ****             }
 1365              		.loc 1 643 17 is_stmt 1 view .LVU355
 643:os/timers.c   ****             }
 1366              		.loc 1 643 26 is_stmt 0 view .LVU356
 1367 006a FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 51


 1368              	.LVL105:
 1369              	.L86:
 646:os/timers.c   **** /*-----------------------------------------------------------*/
 1370              		.loc 1 646 5 view .LVU357
 1371 006e 02B0     		add	sp, sp, #8
 1372              	.LCFI33:
 1373              		.cfi_def_cfa_offset 16
 1374              		@ sp needed
 1375 0070 70BD     		pop	{r4, r5, r6, pc}
 1376              	.LVL106:
 1377              	.L95:
 646:os/timers.c   **** /*-----------------------------------------------------------*/
 1378              		.loc 1 646 5 view .LVU358
 1379 0072 00BF     		.align	2
 1380              	.L94:
 1381 0074 00000000 		.word	.LANCHOR1
 1382 0078 00000000 		.word	.LANCHOR2
 1383 007c 04ED00E0 		.word	-536810236
 1384              		.cfi_endproc
 1385              	.LFE17:
 1387              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1388              		.align	1
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv5-d16
 1394              	prvProcessReceivedCommands:
 1395              	.LFB21:
 744:os/timers.c   ****         DaemonTaskMessage_t xMessage;
 1396              		.loc 1 744 5 is_stmt 1 view -0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 24
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400 0000 10B5     		push	{r4, lr}
 1401              	.LCFI34:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 4, -8
 1404              		.cfi_offset 14, -4
 1405 0002 88B0     		sub	sp, sp, #32
 1406              	.LCFI35:
 1407              		.cfi_def_cfa_offset 40
 745:os/timers.c   ****         Timer_t * pxTimer;
 1408              		.loc 1 745 9 view .LVU360
 746:os/timers.c   ****         BaseType_t xTimerListsWereSwitched, xResult;
 1409              		.loc 1 746 9 view .LVU361
 747:os/timers.c   ****         TickType_t xTimeNow;
 1410              		.loc 1 747 9 view .LVU362
 748:os/timers.c   **** 
 1411              		.loc 1 748 9 view .LVU363
 750:os/timers.c   ****         {
 1412              		.loc 1 750 9 view .LVU364
 750:os/timers.c   ****         {
 1413              		.loc 1 750 14 is_stmt 0 view .LVU365
 1414 0004 06E0     		b	.L99
 1415              	.L116:
 1416              	.LBB62:
 758:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 52


 1417              		.loc 1 758 25 is_stmt 1 discriminator 2 view .LVU366
 1418              	.LVL107:
 762:os/timers.c   **** 
 1419              		.loc 1 762 25 discriminator 2 view .LVU367
 762:os/timers.c   **** 
 1420              		.loc 1 762 51 discriminator 2 view .LVU368
 765:os/timers.c   ****                     }
 1421              		.loc 1 765 25 discriminator 2 view .LVU369
 1422 0006 0799     		ldr	r1, [sp, #28]
 1423 0008 0698     		ldr	r0, [sp, #24]
 1424 000a 059B     		ldr	r3, [sp, #20]
 1425 000c 9847     		blx	r3
 1426              	.LVL108:
 1427              	.L98:
 765:os/timers.c   ****                     }
 1428              		.loc 1 765 25 is_stmt 0 discriminator 2 view .LVU370
 1429              	.LBE62:
 769:os/timers.c   ****                     }
 1430              		.loc 1 769 49 is_stmt 1 view .LVU371
 776:os/timers.c   ****             {
 1431              		.loc 1 776 13 view .LVU372
 776:os/timers.c   ****             {
 1432              		.loc 1 776 25 is_stmt 0 view .LVU373
 1433 000e 049B     		ldr	r3, [sp, #16]
 776:os/timers.c   ****             {
 1434              		.loc 1 776 15 view .LVU374
 1435 0010 002B     		cmp	r3, #0
 1436 0012 0BDA     		bge	.L114
 1437              	.L99:
 750:os/timers.c   ****         {
 1438              		.loc 1 750 14 is_stmt 1 view .LVU375
 750:os/timers.c   ****         {
 1439              		.loc 1 750 16 is_stmt 0 view .LVU376
 1440 0014 0022     		movs	r2, #0
 1441 0016 04A9     		add	r1, sp, #16
 1442 0018 3D4B     		ldr	r3, .L119
 1443 001a 1868     		ldr	r0, [r3]
 1444 001c FFF7FEFF 		bl	xQueueReceive
 1445              	.LVL109:
 750:os/timers.c   ****         {
 1446              		.loc 1 750 14 view .LVU377
 1447 0020 0028     		cmp	r0, #0
 1448 0022 73D0     		beq	.L115
 756:os/timers.c   ****                     {
 1449              		.loc 1 756 21 is_stmt 1 view .LVU378
 756:os/timers.c   ****                     {
 1450              		.loc 1 756 33 is_stmt 0 view .LVU379
 1451 0024 049B     		ldr	r3, [sp, #16]
 756:os/timers.c   ****                     {
 1452              		.loc 1 756 23 view .LVU380
 1453 0026 002B     		cmp	r3, #0
 1454 0028 F1DA     		bge	.L98
 1455 002a ECE7     		b	.L116
 1456              	.L114:
 780:os/timers.c   **** 
 1457              		.loc 1 780 17 is_stmt 1 view .LVU381
 780:os/timers.c   **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 53


 1458              		.loc 1 780 25 is_stmt 0 view .LVU382
 1459 002c 069C     		ldr	r4, [sp, #24]
 1460              	.LVL110:
 782:os/timers.c   ****                 {
 1461              		.loc 1 782 17 is_stmt 1 view .LVU383
 782:os/timers.c   ****                 {
 1462              		.loc 1 782 21 is_stmt 0 view .LVU384
 1463 002e 6369     		ldr	r3, [r4, #20]
 782:os/timers.c   ****                 {
 1464              		.loc 1 782 19 view .LVU385
 1465 0030 13B1     		cbz	r3, .L100
 785:os/timers.c   ****                 }
 1466              		.loc 1 785 21 is_stmt 1 view .LVU386
 785:os/timers.c   ****                 }
 1467              		.loc 1 785 30 is_stmt 0 view .LVU387
 1468 0032 201D     		adds	r0, r4, #4
 1469 0034 FFF7FEFF 		bl	uxListRemove
 1470              	.LVL111:
 1471              	.L100:
 789:os/timers.c   ****                 }
 1472              		.loc 1 789 45 is_stmt 1 view .LVU388
 792:os/timers.c   **** 
 1473              		.loc 1 792 119 view .LVU389
 800:os/timers.c   **** 
 1474              		.loc 1 800 17 view .LVU390
 800:os/timers.c   **** 
 1475              		.loc 1 800 28 is_stmt 0 view .LVU391
 1476 0038 03A8     		add	r0, sp, #12
 1477 003a FFF7FEFF 		bl	prvSampleTimeNow
 1478              	.LVL112:
 802:os/timers.c   ****                 {
 1479              		.loc 1 802 17 is_stmt 1 view .LVU392
 802:os/timers.c   ****                 {
 1480              		.loc 1 802 33 is_stmt 0 view .LVU393
 1481 003e 049B     		ldr	r3, [sp, #16]
 1482 0040 092B     		cmp	r3, #9
 1483 0042 E7D8     		bhi	.L99
 1484 0044 DFE803F0 		tbb	[pc, r3]
 1485              	.L103:
 1486 0048 05       		.byte	(.L105-.L103)/2
 1487 0049 05       		.byte	(.L105-.L103)/2
 1488 004a 05       		.byte	(.L105-.L103)/2
 1489 004b 32       		.byte	(.L104-.L103)/2
 1490 004c 39       		.byte	(.L102-.L103)/2
 1491 004d 54       		.byte	(.L106-.L103)/2
 1492 004e 05       		.byte	(.L105-.L103)/2
 1493 004f 05       		.byte	(.L105-.L103)/2
 1494 0050 32       		.byte	(.L104-.L103)/2
 1495 0051 39       		.byte	(.L102-.L103)/2
 1496              		.p2align 1
 1497              	.L105:
 810:os/timers.c   **** 
 1498              		.loc 1 810 25 is_stmt 1 view .LVU394
 810:os/timers.c   **** 
 1499              		.loc 1 810 43 is_stmt 0 view .LVU395
 1500 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1501 0056 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 54


 1502 005a 84F82830 		strb	r3, [r4, #40]
 812:os/timers.c   ****                         {
 1503              		.loc 1 812 25 is_stmt 1 view .LVU396
 812:os/timers.c   ****                         {
 1504              		.loc 1 812 93 is_stmt 0 view .LVU397
 1505 005e 059B     		ldr	r3, [sp, #20]
 812:os/timers.c   ****                         {
 1506              		.loc 1 812 117 view .LVU398
 1507 0060 A169     		ldr	r1, [r4, #24]
 812:os/timers.c   ****                         {
 1508              		.loc 1 812 29 view .LVU399
 1509 0062 0246     		mov	r2, r0
 1510 0064 1944     		add	r1, r1, r3
 1511 0066 2046     		mov	r0, r4
 1512              	.LVL113:
 812:os/timers.c   ****                         {
 1513              		.loc 1 812 29 view .LVU400
 1514 0068 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1515              	.LVL114:
 812:os/timers.c   ****                         {
 1516              		.loc 1 812 27 view .LVU401
 1517 006c 0028     		cmp	r0, #0
 1518 006e D1D0     		beq	.L99
 816:os/timers.c   ****                             traceTIMER_EXPIRED( pxTimer );
 1519              		.loc 1 816 29 is_stmt 1 view .LVU402
 816:os/timers.c   ****                             traceTIMER_EXPIRED( pxTimer );
 1520              		.loc 1 816 36 is_stmt 0 view .LVU403
 1521 0070 236A     		ldr	r3, [r4, #32]
 816:os/timers.c   ****                             traceTIMER_EXPIRED( pxTimer );
 1522              		.loc 1 816 29 view .LVU404
 1523 0072 2046     		mov	r0, r4
 1524 0074 9847     		blx	r3
 1525              	.LVL115:
 817:os/timers.c   **** 
 1526              		.loc 1 817 58 is_stmt 1 view .LVU405
 819:os/timers.c   ****                             {
 1527              		.loc 1 819 29 view .LVU406
 819:os/timers.c   ****                             {
 1528              		.loc 1 819 42 is_stmt 0 view .LVU407
 1529 0076 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 819:os/timers.c   ****                             {
 1530              		.loc 1 819 31 view .LVU408
 1531 007a 13F0040F 		tst	r3, #4
 1532 007e C9D0     		beq	.L99
 821:os/timers.c   ****                                 configASSERT( xResult );
 1533              		.loc 1 821 33 is_stmt 1 view .LVU409
 821:os/timers.c   ****                                 configASSERT( xResult );
 1534              		.loc 1 821 154 is_stmt 0 view .LVU410
 1535 0080 A269     		ldr	r2, [r4, #24]
 821:os/timers.c   ****                                 configASSERT( xResult );
 1536              		.loc 1 821 43 view .LVU411
 1537 0082 0021     		movs	r1, #0
 1538 0084 0091     		str	r1, [sp]
 1539 0086 0B46     		mov	r3, r1
 1540 0088 0598     		ldr	r0, [sp, #20]
 1541 008a 0244     		add	r2, r2, r0
 1542 008c 2046     		mov	r0, r4
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 55


 1543 008e FFF7FEFF 		bl	xTimerGenericCommand
 1544              	.LVL116:
 822:os/timers.c   ****                                 ( void ) xResult;
 1545              		.loc 1 822 33 is_stmt 1 view .LVU412
 1546 0092 0028     		cmp	r0, #0
 1547 0094 BED1     		bne	.L99
 822:os/timers.c   ****                                 ( void ) xResult;
 1548              		.loc 1 822 33 view .LVU413
 1549              	.LBB63:
 1550              	.LBI63:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1551              		.loc 2 193 34 view .LVU414
 1552              	.LBB64:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1553              		.loc 2 195 9 view .LVU415
 1554              		.loc 2 197 9 view .LVU416
 1555              		.syntax unified
 1556              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1557 0096 4FF05003 			mov r3, #80												
 1558 009a 72B6     		cpsid i													
 1559 009c 83F31188 		msr basepri, r3											
 1560 00a0 BFF36F8F 		isb														
 1561 00a4 BFF34F8F 		dsb														
 1562 00a8 62B6     		cpsie i													
 1563              	
 1564              	@ 0 "" 2
 1565              	.LVL117:
 1566              		.thumb
 1567              		.syntax unified
 1568              	.L108:
 1569              		.loc 2 197 9 is_stmt 0 view .LVU417
 1570              	.LBE64:
 1571              	.LBE63:
 822:os/timers.c   ****                                 ( void ) xResult;
 1572              		.loc 1 822 33 is_stmt 1 discriminator 2 view .LVU418
 822:os/timers.c   ****                                 ( void ) xResult;
 1573              		.loc 1 822 33 discriminator 2 view .LVU419
 822:os/timers.c   ****                                 ( void ) xResult;
 1574              		.loc 1 822 33 discriminator 2 view .LVU420
 1575 00aa FEE7     		b	.L108
 1576              	.LVL118:
 1577              	.L104:
 840:os/timers.c   ****                         break;
 1578              		.loc 1 840 25 view .LVU421
 840:os/timers.c   ****                         break;
 1579              		.loc 1 840 43 is_stmt 0 view .LVU422
 1580 00ac 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1581 00b0 23F00103 		bic	r3, r3, #1
 1582 00b4 84F82830 		strb	r3, [r4, #40]
 841:os/timers.c   **** 
 1583              		.loc 1 841 25 is_stmt 1 view .LVU423
 1584 00b8 ACE7     		b	.L99
 1585              	.L102:
 845:os/timers.c   ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1586              		.loc 1 845 25 view .LVU424
 845:os/timers.c   ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1587              		.loc 1 845 43 is_stmt 0 view .LVU425
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 56


 1588 00ba 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1589 00be 43F00103 		orr	r3, r3, #1
 1590 00c2 84F82830 		strb	r3, [r4, #40]
 846:os/timers.c   ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1591              		.loc 1 846 25 is_stmt 1 view .LVU426
 846:os/timers.c   ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1592              		.loc 1 846 83 is_stmt 0 view .LVU427
 1593 00c6 0599     		ldr	r1, [sp, #20]
 846:os/timers.c   ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1594              		.loc 1 846 54 view .LVU428
 1595 00c8 A161     		str	r1, [r4, #24]
 847:os/timers.c   **** 
 1596              		.loc 1 847 25 is_stmt 1 view .LVU429
 1597 00ca 31B1     		cbz	r1, .L117
 847:os/timers.c   **** 
 1598              		.loc 1 847 77 discriminator 2 view .LVU430
 855:os/timers.c   ****                         break;
 1599              		.loc 1 855 25 discriminator 2 view .LVU431
 855:os/timers.c   ****                         break;
 1600              		.loc 1 855 34 is_stmt 0 discriminator 2 view .LVU432
 1601 00cc 0346     		mov	r3, r0
 1602 00ce 0246     		mov	r2, r0
 1603 00d0 0144     		add	r1, r1, r0
 1604 00d2 2046     		mov	r0, r4
 1605              	.LVL119:
 855:os/timers.c   ****                         break;
 1606              		.loc 1 855 34 discriminator 2 view .LVU433
 1607 00d4 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1608              	.LVL120:
 856:os/timers.c   **** 
 1609              		.loc 1 856 25 is_stmt 1 discriminator 2 view .LVU434
 1610 00d8 9CE7     		b	.L99
 1611              	.LVL121:
 1612              	.L117:
 847:os/timers.c   **** 
 1613              		.loc 1 847 25 view .LVU435
 1614              	.LBB65:
 1615              	.LBI65:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1616              		.loc 2 193 34 view .LVU436
 1617              	.LBB66:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1618              		.loc 2 195 9 view .LVU437
 1619              		.loc 2 197 9 view .LVU438
 1620              		.syntax unified
 1621              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1622 00da 4FF05003 			mov r3, #80												
 1623 00de 72B6     		cpsid i													
 1624 00e0 83F31188 		msr basepri, r3											
 1625 00e4 BFF36F8F 		isb														
 1626 00e8 BFF34F8F 		dsb														
 1627 00ec 62B6     		cpsie i													
 1628              	
 1629              	@ 0 "" 2
 1630              	.LVL122:
 1631              		.thumb
 1632              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 57


 1633              	.L110:
 1634              		.loc 2 197 9 is_stmt 0 view .LVU439
 1635              	.LBE66:
 1636              	.LBE65:
 847:os/timers.c   **** 
 1637              		.loc 1 847 25 is_stmt 1 discriminator 5 view .LVU440
 847:os/timers.c   **** 
 1638              		.loc 1 847 25 discriminator 5 view .LVU441
 847:os/timers.c   **** 
 1639              		.loc 1 847 25 discriminator 5 view .LVU442
 1640 00ee FEE7     		b	.L110
 1641              	.L106:
 864:os/timers.c   ****                                 {
 1642              		.loc 1 864 33 view .LVU443
 864:os/timers.c   ****                                 {
 1643              		.loc 1 864 46 is_stmt 0 view .LVU444
 1644 00f0 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 864:os/timers.c   ****                                 {
 1645              		.loc 1 864 35 view .LVU445
 1646 00f4 13F0020F 		tst	r3, #2
 1647 00f8 04D0     		beq	.L118
 870:os/timers.c   ****                                 }
 1648              		.loc 1 870 37 is_stmt 1 view .LVU446
 870:os/timers.c   ****                                 }
 1649              		.loc 1 870 55 is_stmt 0 view .LVU447
 1650 00fa 23F00103 		bic	r3, r3, #1
 1651 00fe 84F82830 		strb	r3, [r4, #40]
 1652 0102 87E7     		b	.L99
 1653              	.L118:
 866:os/timers.c   ****                                 }
 1654              		.loc 1 866 37 is_stmt 1 view .LVU448
 1655 0104 2046     		mov	r0, r4
 1656              	.LVL123:
 866:os/timers.c   ****                                 }
 1657              		.loc 1 866 37 is_stmt 0 view .LVU449
 1658 0106 FFF7FEFF 		bl	vPortFree
 1659              	.LVL124:
 1660 010a 83E7     		b	.L99
 1661              	.LVL125:
 1662              	.L115:
 890:os/timers.c   **** /*-----------------------------------------------------------*/
 1663              		.loc 1 890 5 view .LVU450
 1664 010c 08B0     		add	sp, sp, #32
 1665              	.LCFI36:
 1666              		.cfi_def_cfa_offset 8
 1667              		@ sp needed
 1668 010e 10BD     		pop	{r4, pc}
 1669              	.L120:
 1670              		.align	2
 1671              	.L119:
 1672 0110 00000000 		.word	.LANCHOR2
 1673              		.cfi_endproc
 1674              	.LFE21:
 1676              		.section	.text.prvTimerTask,"ax",%progbits
 1677              		.align	1
 1678              		.syntax unified
 1679              		.thumb
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 58


 1680              		.thumb_func
 1681              		.fpu fpv5-d16
 1683              	prvTimerTask:
 1684              	.LFB16:
 552:os/timers.c   ****         TickType_t xNextExpireTime;
 1685              		.loc 1 552 5 is_stmt 1 view -0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 8
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689              	.LVL126:
 552:os/timers.c   ****         TickType_t xNextExpireTime;
 1690              		.loc 1 552 5 is_stmt 0 view .LVU452
 1691 0000 00B5     		push	{lr}
 1692              	.LCFI37:
 1693              		.cfi_def_cfa_offset 4
 1694              		.cfi_offset 14, -4
 1695 0002 83B0     		sub	sp, sp, #12
 1696              	.LCFI38:
 1697              		.cfi_def_cfa_offset 16
 1698              	.LVL127:
 1699              	.L122:
 553:os/timers.c   ****         BaseType_t xListWasEmpty;
 1700              		.loc 1 553 9 is_stmt 1 discriminator 1 view .LVU453
 554:os/timers.c   **** 
 1701              		.loc 1 554 9 discriminator 1 view .LVU454
 557:os/timers.c   **** 
 1702              		.loc 1 557 9 discriminator 1 view .LVU455
 571:os/timers.c   ****         {
 1703              		.loc 1 571 9 discriminator 1 view .LVU456
 575:os/timers.c   **** 
 1704              		.loc 1 575 13 discriminator 1 view .LVU457
 575:os/timers.c   **** 
 1705              		.loc 1 575 31 is_stmt 0 discriminator 1 view .LVU458
 1706 0004 01A8     		add	r0, sp, #4
 1707 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1708              	.LVL128:
 579:os/timers.c   **** 
 1709              		.loc 1 579 13 is_stmt 1 discriminator 1 view .LVU459
 1710 000a 0199     		ldr	r1, [sp, #4]
 1711 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1712              	.LVL129:
 582:os/timers.c   ****         }
 1713              		.loc 1 582 13 discriminator 1 view .LVU460
 1714 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1715              	.LVL130:
 571:os/timers.c   ****         {
 1716              		.loc 1 571 16 discriminator 1 view .LVU461
 1717 0014 F6E7     		b	.L122
 1718              		.cfi_endproc
 1719              	.LFE16:
 1721              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1722              		.align	1
 1723              		.global	xTimerGetTimerDaemonTaskHandle
 1724              		.syntax unified
 1725              		.thumb
 1726              		.thumb_func
 1727              		.fpu fpv5-d16
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 59


 1729              	xTimerGetTimerDaemonTaskHandle:
 1730              	.LFB9:
 425:os/timers.c   ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1731              		.loc 1 425 5 view -0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 0
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
 1735              		@ link register save eliminated.
 428:os/timers.c   ****         return xTimerTaskHandle;
 1736              		.loc 1 428 9 view .LVU463
 1737 0000 074B     		ldr	r3, .L128
 1738 0002 1868     		ldr	r0, [r3]
 1739 0004 00B1     		cbz	r0, .L127
 430:os/timers.c   **** /*-----------------------------------------------------------*/
 1740              		.loc 1 430 5 is_stmt 0 view .LVU464
 1741 0006 7047     		bx	lr
 1742              	.L127:
 428:os/timers.c   ****         return xTimerTaskHandle;
 1743              		.loc 1 428 9 is_stmt 1 view .LVU465
 1744              	.LBB67:
 1745              	.LBI67:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1746              		.loc 2 193 34 view .LVU466
 1747              	.LBB68:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1748              		.loc 2 195 9 view .LVU467
 1749              		.loc 2 197 9 view .LVU468
 1750              		.syntax unified
 1751              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1752 0008 4FF05003 			mov r3, #80												
 1753 000c 72B6     		cpsid i													
 1754 000e 83F31188 		msr basepri, r3											
 1755 0012 BFF36F8F 		isb														
 1756 0016 BFF34F8F 		dsb														
 1757 001a 62B6     		cpsie i													
 1758              	
 1759              	@ 0 "" 2
 1760              	.LVL131:
 1761              		.thumb
 1762              		.syntax unified
 1763              	.L126:
 1764              		.loc 2 197 9 is_stmt 0 view .LVU469
 1765              	.LBE68:
 1766              	.LBE67:
 428:os/timers.c   ****         return xTimerTaskHandle;
 1767              		.loc 1 428 9 is_stmt 1 discriminator 1 view .LVU470
 428:os/timers.c   ****         return xTimerTaskHandle;
 1768              		.loc 1 428 9 discriminator 1 view .LVU471
 428:os/timers.c   ****         return xTimerTaskHandle;
 1769              		.loc 1 428 9 discriminator 1 view .LVU472
 1770 001c FEE7     		b	.L126
 1771              	.L129:
 1772 001e 00BF     		.align	2
 1773              	.L128:
 1774 0020 00000000 		.word	.LANCHOR7
 1775              		.cfi_endproc
 1776              	.LFE9:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 60


 1778              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1779              		.align	1
 1780              		.global	xTimerGetPeriod
 1781              		.syntax unified
 1782              		.thumb
 1783              		.thumb_func
 1784              		.fpu fpv5-d16
 1786              	xTimerGetPeriod:
 1787              	.LVL132:
 1788              	.LFB10:
 434:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 1789              		.loc 1 434 5 view -0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 435:os/timers.c   **** 
 1794              		.loc 1 435 9 view .LVU474
 437:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 1795              		.loc 1 437 9 view .LVU475
 1796 0000 08B1     		cbz	r0, .L133
 437:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 1797              		.loc 1 437 31 discriminator 2 view .LVU476
 438:os/timers.c   ****     }
 1798              		.loc 1 438 9 discriminator 2 view .LVU477
 439:os/timers.c   **** /*-----------------------------------------------------------*/
 1799              		.loc 1 439 5 is_stmt 0 discriminator 2 view .LVU478
 1800 0002 8069     		ldr	r0, [r0, #24]
 1801              	.LVL133:
 439:os/timers.c   **** /*-----------------------------------------------------------*/
 1802              		.loc 1 439 5 discriminator 2 view .LVU479
 1803 0004 7047     		bx	lr
 1804              	.LVL134:
 1805              	.L133:
 437:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 1806              		.loc 1 437 9 is_stmt 1 view .LVU480
 1807              	.LBB69:
 1808              	.LBI69:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1809              		.loc 2 193 34 view .LVU481
 1810              	.LBB70:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1811              		.loc 2 195 9 view .LVU482
 1812              		.loc 2 197 9 view .LVU483
 1813              		.syntax unified
 1814              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1815 0006 4FF05003 			mov r3, #80												
 1816 000a 72B6     		cpsid i													
 1817 000c 83F31188 		msr basepri, r3											
 1818 0010 BFF36F8F 		isb														
 1819 0014 BFF34F8F 		dsb														
 1820 0018 62B6     		cpsie i													
 1821              	
 1822              	@ 0 "" 2
 1823              	.LVL135:
 1824              		.thumb
 1825              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 61


 1826              	.L132:
 1827              		.loc 2 197 9 is_stmt 0 view .LVU484
 1828              	.LBE70:
 1829              	.LBE69:
 437:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 1830              		.loc 1 437 9 is_stmt 1 discriminator 1 view .LVU485
 437:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 1831              		.loc 1 437 9 discriminator 1 view .LVU486
 437:os/timers.c   ****         return pxTimer->xTimerPeriodInTicks;
 1832              		.loc 1 437 9 discriminator 1 view .LVU487
 1833 001a FEE7     		b	.L132
 1834              		.cfi_endproc
 1835              	.LFE10:
 1837              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1838              		.align	1
 1839              		.global	vTimerSetReloadMode
 1840              		.syntax unified
 1841              		.thumb
 1842              		.thumb_func
 1843              		.fpu fpv5-d16
 1845              	vTimerSetReloadMode:
 1846              	.LVL136:
 1847              	.LFB11:
 444:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 1848              		.loc 1 444 5 view -0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 444:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 1852              		.loc 1 444 5 is_stmt 0 view .LVU489
 1853 0000 38B5     		push	{r3, r4, r5, lr}
 1854              	.LCFI39:
 1855              		.cfi_def_cfa_offset 16
 1856              		.cfi_offset 3, -16
 1857              		.cfi_offset 4, -12
 1858              		.cfi_offset 5, -8
 1859              		.cfi_offset 14, -4
 445:os/timers.c   **** 
 1860              		.loc 1 445 9 is_stmt 1 view .LVU490
 1861              	.LVL137:
 447:os/timers.c   ****         taskENTER_CRITICAL();
 1862              		.loc 1 447 9 view .LVU491
 1863 0002 68B1     		cbz	r0, .L140
 1864 0004 0D46     		mov	r5, r1
 1865 0006 0446     		mov	r4, r0
 447:os/timers.c   ****         taskENTER_CRITICAL();
 1866              		.loc 1 447 31 discriminator 2 view .LVU492
 448:os/timers.c   ****         {
 1867              		.loc 1 448 9 discriminator 2 view .LVU493
 1868 0008 FFF7FEFF 		bl	vPortEnterCritical
 1869              	.LVL138:
 450:os/timers.c   ****             {
 1870              		.loc 1 450 13 discriminator 2 view .LVU494
 450:os/timers.c   ****             {
 1871              		.loc 1 450 15 is_stmt 0 discriminator 2 view .LVU495
 1872 000c 9DB1     		cbz	r5, .L137
 452:os/timers.c   ****             }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 62


 1873              		.loc 1 452 17 is_stmt 1 view .LVU496
 452:os/timers.c   ****             }
 1874              		.loc 1 452 35 is_stmt 0 view .LVU497
 1875 000e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1876 0012 43F00403 		orr	r3, r3, #4
 1877 0016 84F82830 		strb	r3, [r4, #40]
 1878              	.L138:
 459:os/timers.c   ****     }
 1879              		.loc 1 459 9 is_stmt 1 view .LVU498
 1880 001a FFF7FEFF 		bl	vPortExitCritical
 1881              	.LVL139:
 460:os/timers.c   **** /*-----------------------------------------------------------*/
 1882              		.loc 1 460 5 is_stmt 0 view .LVU499
 1883 001e 38BD     		pop	{r3, r4, r5, pc}
 1884              	.LVL140:
 1885              	.L140:
 447:os/timers.c   ****         taskENTER_CRITICAL();
 1886              		.loc 1 447 9 is_stmt 1 view .LVU500
 1887              	.LBB71:
 1888              	.LBI71:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1889              		.loc 2 193 34 view .LVU501
 1890              	.LBB72:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1891              		.loc 2 195 9 view .LVU502
 1892              		.loc 2 197 9 view .LVU503
 1893              		.syntax unified
 1894              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1895 0020 4FF05003 			mov r3, #80												
 1896 0024 72B6     		cpsid i													
 1897 0026 83F31188 		msr basepri, r3											
 1898 002a BFF36F8F 		isb														
 1899 002e BFF34F8F 		dsb														
 1900 0032 62B6     		cpsie i													
 1901              	
 1902              	@ 0 "" 2
 1903              	.LVL141:
 1904              		.thumb
 1905              		.syntax unified
 1906              	.L136:
 1907              		.loc 2 197 9 is_stmt 0 view .LVU504
 1908              	.LBE72:
 1909              	.LBE71:
 447:os/timers.c   ****         taskENTER_CRITICAL();
 1910              		.loc 1 447 9 is_stmt 1 discriminator 1 view .LVU505
 447:os/timers.c   ****         taskENTER_CRITICAL();
 1911              		.loc 1 447 9 discriminator 1 view .LVU506
 447:os/timers.c   ****         taskENTER_CRITICAL();
 1912              		.loc 1 447 9 discriminator 1 view .LVU507
 1913 0034 FEE7     		b	.L136
 1914              	.LVL142:
 1915              	.L137:
 456:os/timers.c   ****             }
 1916              		.loc 1 456 17 view .LVU508
 456:os/timers.c   ****             }
 1917              		.loc 1 456 35 is_stmt 0 view .LVU509
 1918 0036 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 63


 1919 003a 23F00403 		bic	r3, r3, #4
 1920 003e 84F82830 		strb	r3, [r4, #40]
 1921 0042 EAE7     		b	.L138
 1922              		.cfi_endproc
 1923              	.LFE11:
 1925              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 1926              		.align	1
 1927              		.global	uxTimerGetReloadMode
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1931              		.fpu fpv5-d16
 1933              	uxTimerGetReloadMode:
 1934              	.LVL143:
 1935              	.LFB12:
 464:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 1936              		.loc 1 464 5 is_stmt 1 view -0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 0
 1939              		@ frame_needed = 0, uses_anonymous_args = 0
 465:os/timers.c   ****         UBaseType_t uxReturn;
 1940              		.loc 1 465 9 view .LVU511
 466:os/timers.c   **** 
 1941              		.loc 1 466 9 view .LVU512
 468:os/timers.c   ****         taskENTER_CRITICAL();
 1942              		.loc 1 468 9 view .LVU513
 1943 0000 68B1     		cbz	r0, .L148
 464:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 1944              		.loc 1 464 5 is_stmt 0 discriminator 2 view .LVU514
 1945 0002 10B5     		push	{r4, lr}
 1946              	.LCFI40:
 1947              		.cfi_def_cfa_offset 8
 1948              		.cfi_offset 4, -8
 1949              		.cfi_offset 14, -4
 1950 0004 0446     		mov	r4, r0
 468:os/timers.c   ****         taskENTER_CRITICAL();
 1951              		.loc 1 468 31 is_stmt 1 discriminator 2 view .LVU515
 469:os/timers.c   ****         {
 1952              		.loc 1 469 9 discriminator 2 view .LVU516
 1953 0006 FFF7FEFF 		bl	vPortEnterCritical
 1954              	.LVL144:
 471:os/timers.c   ****             {
 1955              		.loc 1 471 13 discriminator 2 view .LVU517
 471:os/timers.c   ****             {
 1956              		.loc 1 471 26 is_stmt 0 discriminator 2 view .LVU518
 1957 000a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 471:os/timers.c   ****             {
 1958              		.loc 1 471 15 discriminator 2 view .LVU519
 1959 000e 13F0040F 		tst	r3, #4
 1960 0012 0FD1     		bne	.L145
 474:os/timers.c   ****             }
 1961              		.loc 1 474 26 view .LVU520
 1962 0014 0024     		movs	r4, #0
 1963              	.LVL145:
 1964              	.L144:
 482:os/timers.c   **** 
 1965              		.loc 1 482 9 is_stmt 1 view .LVU521
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 64


 1966 0016 FFF7FEFF 		bl	vPortExitCritical
 1967              	.LVL146:
 484:os/timers.c   ****     }
 1968              		.loc 1 484 9 view .LVU522
 485:os/timers.c   **** /*-----------------------------------------------------------*/
 1969              		.loc 1 485 5 is_stmt 0 view .LVU523
 1970 001a 2046     		mov	r0, r4
 1971 001c 10BD     		pop	{r4, pc}
 1972              	.LVL147:
 1973              	.L148:
 1974              	.LCFI41:
 1975              		.cfi_def_cfa_offset 0
 1976              		.cfi_restore 4
 1977              		.cfi_restore 14
 468:os/timers.c   ****         taskENTER_CRITICAL();
 1978              		.loc 1 468 9 is_stmt 1 view .LVU524
 1979              	.LBB73:
 1980              	.LBI73:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1981              		.loc 2 193 34 view .LVU525
 1982              	.LBB74:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1983              		.loc 2 195 9 view .LVU526
 1984              		.loc 2 197 9 view .LVU527
 1985              		.syntax unified
 1986              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1987 001e 4FF05003 			mov r3, #80												
 1988 0022 72B6     		cpsid i													
 1989 0024 83F31188 		msr basepri, r3											
 1990 0028 BFF36F8F 		isb														
 1991 002c BFF34F8F 		dsb														
 1992 0030 62B6     		cpsie i													
 1993              	
 1994              	@ 0 "" 2
 1995              	.LVL148:
 1996              		.thumb
 1997              		.syntax unified
 1998              	.L143:
 1999              		.loc 2 197 9 is_stmt 0 view .LVU528
 2000              	.LBE74:
 2001              	.LBE73:
 468:os/timers.c   ****         taskENTER_CRITICAL();
 2002              		.loc 1 468 9 is_stmt 1 discriminator 1 view .LVU529
 468:os/timers.c   ****         taskENTER_CRITICAL();
 2003              		.loc 1 468 9 discriminator 1 view .LVU530
 468:os/timers.c   ****         taskENTER_CRITICAL();
 2004              		.loc 1 468 9 discriminator 1 view .LVU531
 2005 0032 FEE7     		b	.L143
 2006              	.LVL149:
 2007              	.L145:
 2008              	.LCFI42:
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 4, -8
 2011              		.cfi_offset 14, -4
 479:os/timers.c   ****             }
 2012              		.loc 1 479 26 is_stmt 0 view .LVU532
 2013 0034 0124     		movs	r4, #1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 65


 2014              	.LVL150:
 479:os/timers.c   ****             }
 2015              		.loc 1 479 26 view .LVU533
 2016 0036 EEE7     		b	.L144
 2017              		.cfi_endproc
 2018              	.LFE12:
 2020              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 2021              		.align	1
 2022              		.global	xTimerGetExpiryTime
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
 2026              		.fpu fpv5-d16
 2028              	xTimerGetExpiryTime:
 2029              	.LVL151:
 2030              	.LFB13:
 489:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 2031              		.loc 1 489 5 is_stmt 1 view -0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 0
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 2035              		@ link register save eliminated.
 490:os/timers.c   ****         TickType_t xReturn;
 2036              		.loc 1 490 9 view .LVU535
 491:os/timers.c   **** 
 2037              		.loc 1 491 9 view .LVU536
 493:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2038              		.loc 1 493 9 view .LVU537
 2039 0000 08B1     		cbz	r0, .L152
 493:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2040              		.loc 1 493 31 discriminator 2 view .LVU538
 494:os/timers.c   ****         return xReturn;
 2041              		.loc 1 494 9 discriminator 2 view .LVU539
 2042              	.LVL152:
 495:os/timers.c   ****     }
 2043              		.loc 1 495 9 discriminator 2 view .LVU540
 496:os/timers.c   **** /*-----------------------------------------------------------*/
 2044              		.loc 1 496 5 is_stmt 0 discriminator 2 view .LVU541
 2045 0002 4068     		ldr	r0, [r0, #4]
 2046              	.LVL153:
 496:os/timers.c   **** /*-----------------------------------------------------------*/
 2047              		.loc 1 496 5 discriminator 2 view .LVU542
 2048 0004 7047     		bx	lr
 2049              	.LVL154:
 2050              	.L152:
 493:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2051              		.loc 1 493 9 is_stmt 1 view .LVU543
 2052              	.LBB75:
 2053              	.LBI75:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2054              		.loc 2 193 34 view .LVU544
 2055              	.LBB76:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2056              		.loc 2 195 9 view .LVU545
 2057              		.loc 2 197 9 view .LVU546
 2058              		.syntax unified
 2059              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 66


 2060 0006 4FF05003 			mov r3, #80												
 2061 000a 72B6     		cpsid i													
 2062 000c 83F31188 		msr basepri, r3											
 2063 0010 BFF36F8F 		isb														
 2064 0014 BFF34F8F 		dsb														
 2065 0018 62B6     		cpsie i													
 2066              	
 2067              	@ 0 "" 2
 2068              	.LVL155:
 2069              		.thumb
 2070              		.syntax unified
 2071              	.L151:
 2072              		.loc 2 197 9 is_stmt 0 view .LVU547
 2073              	.LBE76:
 2074              	.LBE75:
 493:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2075              		.loc 1 493 9 is_stmt 1 discriminator 1 view .LVU548
 493:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2076              		.loc 1 493 9 discriminator 1 view .LVU549
 493:os/timers.c   ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 2077              		.loc 1 493 9 discriminator 1 view .LVU550
 2078 001a FEE7     		b	.L151
 2079              		.cfi_endproc
 2080              	.LFE13:
 2082              		.section	.text.pcTimerGetName,"ax",%progbits
 2083              		.align	1
 2084              		.global	pcTimerGetName
 2085              		.syntax unified
 2086              		.thumb
 2087              		.thumb_func
 2088              		.fpu fpv5-d16
 2090              	pcTimerGetName:
 2091              	.LVL156:
 2092              	.LFB14:
 500:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 2093              		.loc 1 500 5 view -0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 0
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097              		@ link register save eliminated.
 501:os/timers.c   **** 
 2098              		.loc 1 501 9 view .LVU552
 503:os/timers.c   ****         return pxTimer->pcTimerName;
 2099              		.loc 1 503 9 view .LVU553
 2100 0000 08B1     		cbz	r0, .L156
 503:os/timers.c   ****         return pxTimer->pcTimerName;
 2101              		.loc 1 503 31 discriminator 2 view .LVU554
 504:os/timers.c   ****     }
 2102              		.loc 1 504 9 discriminator 2 view .LVU555
 505:os/timers.c   **** /*-----------------------------------------------------------*/
 2103              		.loc 1 505 5 is_stmt 0 discriminator 2 view .LVU556
 2104 0002 0068     		ldr	r0, [r0]
 2105              	.LVL157:
 505:os/timers.c   **** /*-----------------------------------------------------------*/
 2106              		.loc 1 505 5 discriminator 2 view .LVU557
 2107 0004 7047     		bx	lr
 2108              	.LVL158:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 67


 2109              	.L156:
 503:os/timers.c   ****         return pxTimer->pcTimerName;
 2110              		.loc 1 503 9 is_stmt 1 view .LVU558
 2111              	.LBB77:
 2112              	.LBI77:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2113              		.loc 2 193 34 view .LVU559
 2114              	.LBB78:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2115              		.loc 2 195 9 view .LVU560
 2116              		.loc 2 197 9 view .LVU561
 2117              		.syntax unified
 2118              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2119 0006 4FF05003 			mov r3, #80												
 2120 000a 72B6     		cpsid i													
 2121 000c 83F31188 		msr basepri, r3											
 2122 0010 BFF36F8F 		isb														
 2123 0014 BFF34F8F 		dsb														
 2124 0018 62B6     		cpsie i													
 2125              	
 2126              	@ 0 "" 2
 2127              	.LVL159:
 2128              		.thumb
 2129              		.syntax unified
 2130              	.L155:
 2131              		.loc 2 197 9 is_stmt 0 view .LVU562
 2132              	.LBE78:
 2133              	.LBE77:
 503:os/timers.c   ****         return pxTimer->pcTimerName;
 2134              		.loc 1 503 9 is_stmt 1 discriminator 1 view .LVU563
 503:os/timers.c   ****         return pxTimer->pcTimerName;
 2135              		.loc 1 503 9 discriminator 1 view .LVU564
 503:os/timers.c   ****         return pxTimer->pcTimerName;
 2136              		.loc 1 503 9 discriminator 1 view .LVU565
 2137 001a FEE7     		b	.L155
 2138              		.cfi_endproc
 2139              	.LFE14:
 2141              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 2142              		.align	1
 2143              		.global	xTimerIsTimerActive
 2144              		.syntax unified
 2145              		.thumb
 2146              		.thumb_func
 2147              		.fpu fpv5-d16
 2149              	xTimerIsTimerActive:
 2150              	.LVL160:
 2151              	.LFB24:
1002:os/timers.c   **** /*-----------------------------------------------------------*/
1003:os/timers.c   **** 
1004:os/timers.c   ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
1005:os/timers.c   ****     {
 2152              		.loc 1 1005 5 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
1006:os/timers.c   ****         BaseType_t xReturn;
 2156              		.loc 1 1006 9 view .LVU567
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 68


1007:os/timers.c   ****         Timer_t * pxTimer = xTimer;
 2157              		.loc 1 1007 9 view .LVU568
1008:os/timers.c   **** 
1009:os/timers.c   ****         configASSERT( xTimer );
 2158              		.loc 1 1009 9 view .LVU569
 2159 0000 68B1     		cbz	r0, .L164
1005:os/timers.c   ****         BaseType_t xReturn;
 2160              		.loc 1 1005 5 is_stmt 0 discriminator 2 view .LVU570
 2161 0002 10B5     		push	{r4, lr}
 2162              	.LCFI43:
 2163              		.cfi_def_cfa_offset 8
 2164              		.cfi_offset 4, -8
 2165              		.cfi_offset 14, -4
 2166 0004 0446     		mov	r4, r0
 2167              		.loc 1 1009 31 is_stmt 1 discriminator 2 view .LVU571
1010:os/timers.c   **** 
1011:os/timers.c   ****         /* Is the timer in the list of active timers? */
1012:os/timers.c   ****         taskENTER_CRITICAL();
 2168              		.loc 1 1012 9 discriminator 2 view .LVU572
 2169 0006 FFF7FEFF 		bl	vPortEnterCritical
 2170              	.LVL161:
1013:os/timers.c   ****         {
1014:os/timers.c   ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 2171              		.loc 1 1014 13 discriminator 2 view .LVU573
 2172              		.loc 1 1014 26 is_stmt 0 discriminator 2 view .LVU574
 2173 000a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 2174              		.loc 1 1014 15 discriminator 2 view .LVU575
 2175 000e 13F0010F 		tst	r3, #1
 2176 0012 0FD1     		bne	.L161
1015:os/timers.c   ****             {
1016:os/timers.c   ****                 xReturn = pdFALSE;
 2177              		.loc 1 1016 25 view .LVU576
 2178 0014 0024     		movs	r4, #0
 2179              	.LVL162:
 2180              	.L160:
1017:os/timers.c   ****             }
1018:os/timers.c   ****             else
1019:os/timers.c   ****             {
1020:os/timers.c   ****                 xReturn = pdTRUE;
1021:os/timers.c   ****             }
1022:os/timers.c   ****         }
1023:os/timers.c   ****         taskEXIT_CRITICAL();
 2181              		.loc 1 1023 9 is_stmt 1 view .LVU577
 2182 0016 FFF7FEFF 		bl	vPortExitCritical
 2183              	.LVL163:
1024:os/timers.c   **** 
1025:os/timers.c   ****         return xReturn;
 2184              		.loc 1 1025 9 view .LVU578
1026:os/timers.c   ****     } /*lint !e818 Can't be pointer to const due to the typedef. */
 2185              		.loc 1 1026 5 is_stmt 0 view .LVU579
 2186 001a 2046     		mov	r0, r4
 2187 001c 10BD     		pop	{r4, pc}
 2188              	.LVL164:
 2189              	.L164:
 2190              	.LCFI44:
 2191              		.cfi_def_cfa_offset 0
 2192              		.cfi_restore 4
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 69


 2193              		.cfi_restore 14
1009:os/timers.c   **** 
 2194              		.loc 1 1009 9 is_stmt 1 view .LVU580
 2195              	.LBB79:
 2196              	.LBI79:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2197              		.loc 2 193 34 view .LVU581
 2198              	.LBB80:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2199              		.loc 2 195 9 view .LVU582
 2200              		.loc 2 197 9 view .LVU583
 2201              		.syntax unified
 2202              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2203 001e 4FF05003 			mov r3, #80												
 2204 0022 72B6     		cpsid i													
 2205 0024 83F31188 		msr basepri, r3											
 2206 0028 BFF36F8F 		isb														
 2207 002c BFF34F8F 		dsb														
 2208 0030 62B6     		cpsie i													
 2209              	
 2210              	@ 0 "" 2
 2211              	.LVL165:
 2212              		.thumb
 2213              		.syntax unified
 2214              	.L159:
 2215              		.loc 2 197 9 is_stmt 0 view .LVU584
 2216              	.LBE80:
 2217              	.LBE79:
1009:os/timers.c   **** 
 2218              		.loc 1 1009 9 is_stmt 1 discriminator 1 view .LVU585
1009:os/timers.c   **** 
 2219              		.loc 1 1009 9 discriminator 1 view .LVU586
1009:os/timers.c   **** 
 2220              		.loc 1 1009 9 discriminator 1 view .LVU587
 2221 0032 FEE7     		b	.L159
 2222              	.LVL166:
 2223              	.L161:
 2224              	.LCFI45:
 2225              		.cfi_def_cfa_offset 8
 2226              		.cfi_offset 4, -8
 2227              		.cfi_offset 14, -4
1020:os/timers.c   ****             }
 2228              		.loc 1 1020 25 is_stmt 0 view .LVU588
 2229 0034 0124     		movs	r4, #1
 2230              	.LVL167:
1020:os/timers.c   ****             }
 2231              		.loc 1 1020 25 view .LVU589
 2232 0036 EEE7     		b	.L160
 2233              		.cfi_endproc
 2234              	.LFE24:
 2236              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 2237              		.align	1
 2238              		.global	pvTimerGetTimerID
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu fpv5-d16
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 70


 2244              	pvTimerGetTimerID:
 2245              	.LVL168:
 2246              	.LFB25:
1027:os/timers.c   **** /*-----------------------------------------------------------*/
1028:os/timers.c   **** 
1029:os/timers.c   ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
1030:os/timers.c   ****     {
 2247              		.loc 1 1030 5 is_stmt 1 view -0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
1031:os/timers.c   ****         Timer_t * const pxTimer = xTimer;
 2251              		.loc 1 1031 9 view .LVU591
1032:os/timers.c   ****         void * pvReturn;
 2252              		.loc 1 1032 9 view .LVU592
1033:os/timers.c   **** 
1034:os/timers.c   ****         configASSERT( xTimer );
 2253              		.loc 1 1034 9 view .LVU593
 2254 0000 40B1     		cbz	r0, .L170
1030:os/timers.c   ****         Timer_t * const pxTimer = xTimer;
 2255              		.loc 1 1030 5 is_stmt 0 discriminator 2 view .LVU594
 2256 0002 10B5     		push	{r4, lr}
 2257              	.LCFI46:
 2258              		.cfi_def_cfa_offset 8
 2259              		.cfi_offset 4, -8
 2260              		.cfi_offset 14, -4
 2261 0004 0446     		mov	r4, r0
 2262              		.loc 1 1034 31 is_stmt 1 discriminator 2 view .LVU595
1035:os/timers.c   **** 
1036:os/timers.c   ****         taskENTER_CRITICAL();
 2263              		.loc 1 1036 9 discriminator 2 view .LVU596
 2264 0006 FFF7FEFF 		bl	vPortEnterCritical
 2265              	.LVL169:
1037:os/timers.c   ****         {
1038:os/timers.c   ****             pvReturn = pxTimer->pvTimerID;
 2266              		.loc 1 1038 13 discriminator 2 view .LVU597
 2267              		.loc 1 1038 22 is_stmt 0 discriminator 2 view .LVU598
 2268 000a E469     		ldr	r4, [r4, #28]
 2269              	.LVL170:
1039:os/timers.c   ****         }
1040:os/timers.c   ****         taskEXIT_CRITICAL();
 2270              		.loc 1 1040 9 is_stmt 1 discriminator 2 view .LVU599
 2271 000c FFF7FEFF 		bl	vPortExitCritical
 2272              	.LVL171:
1041:os/timers.c   **** 
1042:os/timers.c   ****         return pvReturn;
 2273              		.loc 1 1042 9 discriminator 2 view .LVU600
1043:os/timers.c   ****     }
 2274              		.loc 1 1043 5 is_stmt 0 discriminator 2 view .LVU601
 2275 0010 2046     		mov	r0, r4
 2276 0012 10BD     		pop	{r4, pc}
 2277              	.LVL172:
 2278              	.L170:
 2279              	.LCFI47:
 2280              		.cfi_def_cfa_offset 0
 2281              		.cfi_restore 4
 2282              		.cfi_restore 14
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 71


1034:os/timers.c   **** 
 2283              		.loc 1 1034 9 is_stmt 1 view .LVU602
 2284              	.LBB81:
 2285              	.LBI81:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2286              		.loc 2 193 34 view .LVU603
 2287              	.LBB82:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2288              		.loc 2 195 9 view .LVU604
 2289              		.loc 2 197 9 view .LVU605
 2290              		.syntax unified
 2291              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2292 0014 4FF05003 			mov r3, #80												
 2293 0018 72B6     		cpsid i													
 2294 001a 83F31188 		msr basepri, r3											
 2295 001e BFF36F8F 		isb														
 2296 0022 BFF34F8F 		dsb														
 2297 0026 62B6     		cpsie i													
 2298              	
 2299              	@ 0 "" 2
 2300              	.LVL173:
 2301              		.thumb
 2302              		.syntax unified
 2303              	.L167:
 2304              		.loc 2 197 9 is_stmt 0 view .LVU606
 2305              	.LBE82:
 2306              	.LBE81:
1034:os/timers.c   **** 
 2307              		.loc 1 1034 9 is_stmt 1 discriminator 1 view .LVU607
1034:os/timers.c   **** 
 2308              		.loc 1 1034 9 discriminator 1 view .LVU608
1034:os/timers.c   **** 
 2309              		.loc 1 1034 9 discriminator 1 view .LVU609
 2310 0028 FEE7     		b	.L167
 2311              		.cfi_endproc
 2312              	.LFE25:
 2314              		.section	.text.vTimerSetTimerID,"ax",%progbits
 2315              		.align	1
 2316              		.global	vTimerSetTimerID
 2317              		.syntax unified
 2318              		.thumb
 2319              		.thumb_func
 2320              		.fpu fpv5-d16
 2322              	vTimerSetTimerID:
 2323              	.LVL174:
 2324              	.LFB26:
1044:os/timers.c   **** /*-----------------------------------------------------------*/
1045:os/timers.c   **** 
1046:os/timers.c   ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1047:os/timers.c   ****                            void * pvNewID )
1048:os/timers.c   ****     {
 2325              		.loc 1 1048 5 view -0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              		.loc 1 1048 5 is_stmt 0 view .LVU611
 2330 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 72


 2331              	.LCFI48:
 2332              		.cfi_def_cfa_offset 16
 2333              		.cfi_offset 3, -16
 2334              		.cfi_offset 4, -12
 2335              		.cfi_offset 5, -8
 2336              		.cfi_offset 14, -4
1049:os/timers.c   ****         Timer_t * const pxTimer = xTimer;
 2337              		.loc 1 1049 9 is_stmt 1 view .LVU612
 2338              	.LVL175:
1050:os/timers.c   **** 
1051:os/timers.c   ****         configASSERT( xTimer );
 2339              		.loc 1 1051 9 view .LVU613
 2340 0002 38B1     		cbz	r0, .L175
 2341 0004 0C46     		mov	r4, r1
 2342 0006 0546     		mov	r5, r0
 2343              		.loc 1 1051 31 discriminator 2 view .LVU614
1052:os/timers.c   **** 
1053:os/timers.c   ****         taskENTER_CRITICAL();
 2344              		.loc 1 1053 9 discriminator 2 view .LVU615
 2345 0008 FFF7FEFF 		bl	vPortEnterCritical
 2346              	.LVL176:
1054:os/timers.c   ****         {
1055:os/timers.c   ****             pxTimer->pvTimerID = pvNewID;
 2347              		.loc 1 1055 13 discriminator 2 view .LVU616
 2348              		.loc 1 1055 32 is_stmt 0 discriminator 2 view .LVU617
 2349 000c EC61     		str	r4, [r5, #28]
1056:os/timers.c   ****         }
1057:os/timers.c   ****         taskEXIT_CRITICAL();
 2350              		.loc 1 1057 9 is_stmt 1 discriminator 2 view .LVU618
 2351 000e FFF7FEFF 		bl	vPortExitCritical
 2352              	.LVL177:
1058:os/timers.c   ****     }
 2353              		.loc 1 1058 5 is_stmt 0 discriminator 2 view .LVU619
 2354 0012 38BD     		pop	{r3, r4, r5, pc}
 2355              	.LVL178:
 2356              	.L175:
1051:os/timers.c   **** 
 2357              		.loc 1 1051 9 is_stmt 1 view .LVU620
 2358              	.LBB83:
 2359              	.LBI83:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2360              		.loc 2 193 34 view .LVU621
 2361              	.LBB84:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2362              		.loc 2 195 9 view .LVU622
 2363              		.loc 2 197 9 view .LVU623
 2364              		.syntax unified
 2365              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2366 0014 4FF05003 			mov r3, #80												
 2367 0018 72B6     		cpsid i													
 2368 001a 83F31188 		msr basepri, r3											
 2369 001e BFF36F8F 		isb														
 2370 0022 BFF34F8F 		dsb														
 2371 0026 62B6     		cpsie i													
 2372              	
 2373              	@ 0 "" 2
 2374              	.LVL179:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 73


 2375              		.thumb
 2376              		.syntax unified
 2377              	.L173:
 2378              		.loc 2 197 9 is_stmt 0 view .LVU624
 2379              	.LBE84:
 2380              	.LBE83:
1051:os/timers.c   **** 
 2381              		.loc 1 1051 9 is_stmt 1 discriminator 1 view .LVU625
1051:os/timers.c   **** 
 2382              		.loc 1 1051 9 discriminator 1 view .LVU626
1051:os/timers.c   **** 
 2383              		.loc 1 1051 9 discriminator 1 view .LVU627
 2384 0028 FEE7     		b	.L173
 2385              		.cfi_endproc
 2386              	.LFE26:
 2388              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 2389              		.align	1
 2390              		.global	xTimerPendFunctionCallFromISR
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2394              		.fpu fpv5-d16
 2396              	xTimerPendFunctionCallFromISR:
 2397              	.LVL180:
 2398              	.LFB27:
1059:os/timers.c   **** /*-----------------------------------------------------------*/
1060:os/timers.c   **** 
1061:os/timers.c   ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1062:os/timers.c   **** 
1063:os/timers.c   ****         BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,
1064:os/timers.c   ****                                                   void * pvParameter1,
1065:os/timers.c   ****                                                   uint32_t ulParameter2,
1066:os/timers.c   ****                                                   BaseType_t * pxHigherPriorityTaskWoken )
1067:os/timers.c   ****         {
 2399              		.loc 1 1067 9 view -0
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 16
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		.loc 1 1067 9 is_stmt 0 view .LVU629
 2404 0000 10B5     		push	{r4, lr}
 2405              	.LCFI49:
 2406              		.cfi_def_cfa_offset 8
 2407              		.cfi_offset 4, -8
 2408              		.cfi_offset 14, -4
 2409 0002 84B0     		sub	sp, sp, #16
 2410              	.LCFI50:
 2411              		.cfi_def_cfa_offset 24
 2412 0004 1446     		mov	r4, r2
 2413 0006 1A46     		mov	r2, r3
 2414              	.LVL181:
1068:os/timers.c   ****             DaemonTaskMessage_t xMessage;
 2415              		.loc 1 1068 13 is_stmt 1 view .LVU630
1069:os/timers.c   ****             BaseType_t xReturn;
 2416              		.loc 1 1069 13 view .LVU631
1070:os/timers.c   **** 
1071:os/timers.c   ****             /* Complete the message with the function parameters and post it to the
1072:os/timers.c   ****              * daemon task. */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 74


1073:os/timers.c   ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 2417              		.loc 1 1073 13 view .LVU632
 2418              		.loc 1 1073 33 is_stmt 0 view .LVU633
 2419 0008 6FF00103 		mvn	r3, #1
 2420              	.LVL182:
 2421              		.loc 1 1073 33 view .LVU634
 2422 000c 0093     		str	r3, [sp]
1074:os/timers.c   ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2423              		.loc 1 1074 13 is_stmt 1 view .LVU635
 2424              		.loc 1 1074 63 is_stmt 0 view .LVU636
 2425 000e 0190     		str	r0, [sp, #4]
1075:os/timers.c   ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2426              		.loc 1 1075 13 is_stmt 1 view .LVU637
 2427              		.loc 1 1075 57 is_stmt 0 view .LVU638
 2428 0010 0291     		str	r1, [sp, #8]
1076:os/timers.c   ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2429              		.loc 1 1076 13 is_stmt 1 view .LVU639
 2430              		.loc 1 1076 57 is_stmt 0 view .LVU640
 2431 0012 0394     		str	r4, [sp, #12]
1077:os/timers.c   **** 
1078:os/timers.c   ****             xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 2432              		.loc 1 1078 13 is_stmt 1 view .LVU641
 2433              		.loc 1 1078 23 is_stmt 0 view .LVU642
 2434 0014 0023     		movs	r3, #0
 2435 0016 6946     		mov	r1, sp
 2436              	.LVL183:
 2437              		.loc 1 1078 23 view .LVU643
 2438 0018 0248     		ldr	r0, .L178
 2439              	.LVL184:
 2440              		.loc 1 1078 23 view .LVU644
 2441 001a 0068     		ldr	r0, [r0]
 2442 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 2443              	.LVL185:
1079:os/timers.c   **** 
1080:os/timers.c   ****             tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
 2444              		.loc 1 1080 97 is_stmt 1 view .LVU645
1081:os/timers.c   **** 
1082:os/timers.c   ****             return xReturn;
 2445              		.loc 1 1082 13 view .LVU646
1083:os/timers.c   ****         }
 2446              		.loc 1 1083 9 is_stmt 0 view .LVU647
 2447 0020 04B0     		add	sp, sp, #16
 2448              	.LCFI51:
 2449              		.cfi_def_cfa_offset 8
 2450              		@ sp needed
 2451 0022 10BD     		pop	{r4, pc}
 2452              	.LVL186:
 2453              	.L179:
 2454              		.loc 1 1083 9 view .LVU648
 2455              		.align	2
 2456              	.L178:
 2457 0024 00000000 		.word	.LANCHOR2
 2458              		.cfi_endproc
 2459              	.LFE27:
 2461              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 2462              		.align	1
 2463              		.global	xTimerPendFunctionCall
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 75


 2464              		.syntax unified
 2465              		.thumb
 2466              		.thumb_func
 2467              		.fpu fpv5-d16
 2469              	xTimerPendFunctionCall:
 2470              	.LVL187:
 2471              	.LFB28:
1084:os/timers.c   **** 
1085:os/timers.c   ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1086:os/timers.c   **** /*-----------------------------------------------------------*/
1087:os/timers.c   **** 
1088:os/timers.c   ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1089:os/timers.c   **** 
1090:os/timers.c   ****         BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,
1091:os/timers.c   ****                                            void * pvParameter1,
1092:os/timers.c   ****                                            uint32_t ulParameter2,
1093:os/timers.c   ****                                            TickType_t xTicksToWait )
1094:os/timers.c   ****         {
 2472              		.loc 1 1094 9 is_stmt 1 view -0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 16
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              		.loc 1 1094 9 is_stmt 0 view .LVU650
 2477 0000 30B5     		push	{r4, r5, lr}
 2478              	.LCFI52:
 2479              		.cfi_def_cfa_offset 12
 2480              		.cfi_offset 4, -12
 2481              		.cfi_offset 5, -8
 2482              		.cfi_offset 14, -4
 2483 0002 85B0     		sub	sp, sp, #20
 2484              	.LCFI53:
 2485              		.cfi_def_cfa_offset 32
 2486 0004 0546     		mov	r5, r0
 2487 0006 0C46     		mov	r4, r1
 2488 0008 1146     		mov	r1, r2
 2489              	.LVL188:
 2490              		.loc 1 1094 9 view .LVU651
 2491 000a 1A46     		mov	r2, r3
 2492              	.LVL189:
1095:os/timers.c   ****             DaemonTaskMessage_t xMessage;
 2493              		.loc 1 1095 13 is_stmt 1 view .LVU652
1096:os/timers.c   ****             BaseType_t xReturn;
 2494              		.loc 1 1096 13 view .LVU653
1097:os/timers.c   **** 
1098:os/timers.c   ****             /* This function can only be called after a timer has been created or
1099:os/timers.c   ****              * after the scheduler has been started because, until then, the timer
1100:os/timers.c   ****              * queue does not exist. */
1101:os/timers.c   ****             configASSERT( xTimerQueue );
 2495              		.loc 1 1101 13 view .LVU654
 2496 000c 0C4B     		ldr	r3, .L185
 2497              	.LVL190:
 2498              		.loc 1 1101 13 is_stmt 0 view .LVU655
 2499 000e 1868     		ldr	r0, [r3]
 2500              	.LVL191:
 2501              		.loc 1 1101 13 view .LVU656
 2502 0010 58B1     		cbz	r0, .L184
 2503              		.loc 1 1101 40 is_stmt 1 discriminator 2 view .LVU657
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 76


1102:os/timers.c   **** 
1103:os/timers.c   ****             /* Complete the message with the function parameters and post it to the
1104:os/timers.c   ****              * daemon task. */
1105:os/timers.c   ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 2504              		.loc 1 1105 13 discriminator 2 view .LVU658
 2505              		.loc 1 1105 33 is_stmt 0 discriminator 2 view .LVU659
 2506 0012 4FF0FF33 		mov	r3, #-1
 2507 0016 0093     		str	r3, [sp]
1106:os/timers.c   ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2508              		.loc 1 1106 13 is_stmt 1 discriminator 2 view .LVU660
 2509              		.loc 1 1106 63 is_stmt 0 discriminator 2 view .LVU661
 2510 0018 0195     		str	r5, [sp, #4]
1107:os/timers.c   ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2511              		.loc 1 1107 13 is_stmt 1 discriminator 2 view .LVU662
 2512              		.loc 1 1107 57 is_stmt 0 discriminator 2 view .LVU663
 2513 001a 0294     		str	r4, [sp, #8]
1108:os/timers.c   ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2514              		.loc 1 1108 13 is_stmt 1 discriminator 2 view .LVU664
 2515              		.loc 1 1108 57 is_stmt 0 discriminator 2 view .LVU665
 2516 001c 0391     		str	r1, [sp, #12]
1109:os/timers.c   **** 
1110:os/timers.c   ****             xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 2517              		.loc 1 1110 13 is_stmt 1 discriminator 2 view .LVU666
 2518              		.loc 1 1110 23 is_stmt 0 discriminator 2 view .LVU667
 2519 001e 0023     		movs	r3, #0
 2520 0020 6946     		mov	r1, sp
 2521              	.LVL192:
 2522              		.loc 1 1110 23 discriminator 2 view .LVU668
 2523 0022 FFF7FEFF 		bl	xQueueGenericSend
 2524              	.LVL193:
1111:os/timers.c   **** 
1112:os/timers.c   ****             tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
 2525              		.loc 1 1112 88 is_stmt 1 discriminator 2 view .LVU669
1113:os/timers.c   **** 
1114:os/timers.c   ****             return xReturn;
 2526              		.loc 1 1114 13 discriminator 2 view .LVU670
1115:os/timers.c   ****         }
 2527              		.loc 1 1115 9 is_stmt 0 discriminator 2 view .LVU671
 2528 0026 05B0     		add	sp, sp, #20
 2529              	.LCFI54:
 2530              		.cfi_remember_state
 2531              		.cfi_def_cfa_offset 12
 2532              		@ sp needed
 2533 0028 30BD     		pop	{r4, r5, pc}
 2534              	.LVL194:
 2535              	.L184:
 2536              	.LCFI55:
 2537              		.cfi_restore_state
1101:os/timers.c   **** 
 2538              		.loc 1 1101 13 is_stmt 1 view .LVU672
 2539              	.LBB85:
 2540              	.LBI85:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2541              		.loc 2 193 34 view .LVU673
 2542              	.LBB86:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2543              		.loc 2 195 9 view .LVU674
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 77


 2544              		.loc 2 197 9 view .LVU675
 2545              		.syntax unified
 2546              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2547 002a 4FF05003 			mov r3, #80												
 2548 002e 72B6     		cpsid i													
 2549 0030 83F31188 		msr basepri, r3											
 2550 0034 BFF36F8F 		isb														
 2551 0038 BFF34F8F 		dsb														
 2552 003c 62B6     		cpsie i													
 2553              	
 2554              	@ 0 "" 2
 2555              	.LVL195:
 2556              		.thumb
 2557              		.syntax unified
 2558              	.L182:
 2559              		.loc 2 197 9 is_stmt 0 view .LVU676
 2560              	.LBE86:
 2561              	.LBE85:
1101:os/timers.c   **** 
 2562              		.loc 1 1101 13 is_stmt 1 discriminator 1 view .LVU677
1101:os/timers.c   **** 
 2563              		.loc 1 1101 13 discriminator 1 view .LVU678
1101:os/timers.c   **** 
 2564              		.loc 1 1101 13 discriminator 1 view .LVU679
 2565 003e FEE7     		b	.L182
 2566              	.L186:
 2567              		.align	2
 2568              	.L185:
 2569 0040 00000000 		.word	.LANCHOR2
 2570              		.cfi_endproc
 2571              	.LFE28:
 2573              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 2574              		.align	1
 2575              		.global	uxTimerGetTimerNumber
 2576              		.syntax unified
 2577              		.thumb
 2578              		.thumb_func
 2579              		.fpu fpv5-d16
 2581              	uxTimerGetTimerNumber:
 2582              	.LVL196:
 2583              	.LFB29:
1116:os/timers.c   **** 
1117:os/timers.c   ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1118:os/timers.c   **** /*-----------------------------------------------------------*/
1119:os/timers.c   **** 
1120:os/timers.c   ****     #if ( configUSE_TRACE_FACILITY == 1 )
1121:os/timers.c   **** 
1122:os/timers.c   ****         UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1123:os/timers.c   ****         {
 2584              		.loc 1 1123 9 view -0
 2585              		.cfi_startproc
 2586              		@ args = 0, pretend = 0, frame = 0
 2587              		@ frame_needed = 0, uses_anonymous_args = 0
 2588              		@ link register save eliminated.
1124:os/timers.c   ****             return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 2589              		.loc 1 1124 13 view .LVU681
1125:os/timers.c   ****         }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 78


 2590              		.loc 1 1125 9 is_stmt 0 view .LVU682
 2591 0000 406A     		ldr	r0, [r0, #36]
 2592              	.LVL197:
 2593              		.loc 1 1125 9 view .LVU683
 2594 0002 7047     		bx	lr
 2595              		.cfi_endproc
 2596              	.LFE29:
 2598              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 2599              		.align	1
 2600              		.global	vTimerSetTimerNumber
 2601              		.syntax unified
 2602              		.thumb
 2603              		.thumb_func
 2604              		.fpu fpv5-d16
 2606              	vTimerSetTimerNumber:
 2607              	.LVL198:
 2608              	.LFB30:
1126:os/timers.c   **** 
1127:os/timers.c   ****     #endif /* configUSE_TRACE_FACILITY */
1128:os/timers.c   **** /*-----------------------------------------------------------*/
1129:os/timers.c   **** 
1130:os/timers.c   ****     #if ( configUSE_TRACE_FACILITY == 1 )
1131:os/timers.c   **** 
1132:os/timers.c   ****         void vTimerSetTimerNumber( TimerHandle_t xTimer,
1133:os/timers.c   ****                                    UBaseType_t uxTimerNumber )
1134:os/timers.c   ****         {
 2609              		.loc 1 1134 9 is_stmt 1 view -0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 0
 2612              		@ frame_needed = 0, uses_anonymous_args = 0
 2613              		@ link register save eliminated.
1135:os/timers.c   ****             ( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2614              		.loc 1 1135 13 view .LVU685
 2615              		.loc 1 1135 53 is_stmt 0 view .LVU686
 2616 0000 4162     		str	r1, [r0, #36]
1136:os/timers.c   ****         }
 2617              		.loc 1 1136 9 view .LVU687
 2618 0002 7047     		bx	lr
 2619              		.cfi_endproc
 2620              	.LFE30:
 2622              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 2623              		.align	2
 2624              		.set	.LANCHOR0,. + 0
 2627              	pxCurrentTimerList:
 2628 0000 00000000 		.space	4
 2629              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 2630              		.align	2
 2631              		.set	.LANCHOR1,. + 0
 2634              	pxOverflowTimerList:
 2635 0000 00000000 		.space	4
 2636              		.section	.bss.ucStaticTimerQueueStorage.6973,"aw",%nobits
 2637              		.align	2
 2638              		.set	.LANCHOR6,. + 0
 2641              	ucStaticTimerQueueStorage.6973:
 2642 0000 00000000 		.space	160
 2642      00000000 
 2642      00000000 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 79


 2642      00000000 
 2642      00000000 
 2643              		.section	.bss.xActiveTimerList1,"aw",%nobits
 2644              		.align	2
 2645              		.set	.LANCHOR3,. + 0
 2648              	xActiveTimerList1:
 2649 0000 00000000 		.space	20
 2649      00000000 
 2649      00000000 
 2649      00000000 
 2649      00000000 
 2650              		.section	.bss.xActiveTimerList2,"aw",%nobits
 2651              		.align	2
 2652              		.set	.LANCHOR4,. + 0
 2655              	xActiveTimerList2:
 2656 0000 00000000 		.space	20
 2656      00000000 
 2656      00000000 
 2656      00000000 
 2656      00000000 
 2657              		.section	.bss.xLastTime.6922,"aw",%nobits
 2658              		.align	2
 2659              		.set	.LANCHOR8,. + 0
 2662              	xLastTime.6922:
 2663 0000 00000000 		.space	4
 2664              		.section	.bss.xStaticTimerQueue.6972,"aw",%nobits
 2665              		.align	2
 2666              		.set	.LANCHOR5,. + 0
 2669              	xStaticTimerQueue.6972:
 2670 0000 00000000 		.space	80
 2670      00000000 
 2670      00000000 
 2670      00000000 
 2670      00000000 
 2671              		.section	.bss.xTimerQueue,"aw",%nobits
 2672              		.align	2
 2673              		.set	.LANCHOR2,. + 0
 2676              	xTimerQueue:
 2677 0000 00000000 		.space	4
 2678              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 2679              		.align	2
 2680              		.set	.LANCHOR7,. + 0
 2683              	xTimerTaskHandle:
 2684 0000 00000000 		.space	4
 2685              		.text
 2686              	.Letext0:
 2687              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2688              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2689              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2690              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2691              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2692              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2693              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2694              		.file 10 "user/Inc/FreeRTOSConfig.h"
 2695              		.file 11 "os/include/projdefs.h"
 2696              		.file 12 "os/include/FreeRTOS.h"
 2697              		.file 13 "os/include/list.h"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 80


 2698              		.file 14 "os/include/task.h"
 2699              		.file 15 "os/include/queue.h"
 2700              		.file 16 "os/include/timers.h"
 2701              		.file 17 "os/include/portable.h"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:17     .text.prvGetNextExpireTime:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:24     .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:70     .text.prvGetNextExpireTime:0000001c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:75     .text.prvInsertTimerInActiveList:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:81     .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:176    .text.prvInsertTimerInActiveList:00000048 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:182    .rodata.prvCheckForValidListAndQueue.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:186    .text.prvCheckForValidListAndQueue:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:192    .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:278    .text.prvCheckForValidListAndQueue:00000050 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:290    .text.prvInitialiseNewTimer:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:296    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:393    .rodata.xTimerCreateTimerTask.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:397    .text.xTimerCreateTimerTask:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:404    .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:508    .text.xTimerCreateTimerTask:00000058 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1683   .text.prvTimerTask:00000000 prvTimerTask
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:516    .text.xTimerCreate:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:523    .text.xTimerCreate:00000000 xTimerCreate
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:589    .text.xTimerCreateStatic:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:596    .text.xTimerCreateStatic:00000000 xTimerCreateStatic
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:719    .text.xTimerGenericCommand:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:726    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:876    .text.xTimerGenericCommand:0000006c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:881    .text.prvSwitchTimerLists:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:887    .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1036   .text.prvSwitchTimerLists:00000078 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1042   .text.prvSampleTimeNow:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1048   .text.prvSampleTimeNow:00000000 prvSampleTimeNow
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1107   .text.prvSampleTimeNow:00000028 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1112   .text.prvProcessExpiredTimer:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1118   .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1241   .text.prvProcessExpiredTimer:0000006c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1246   .text.prvProcessTimerOrBlockTask:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1252   .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1381   .text.prvProcessTimerOrBlockTask:00000074 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1388   .text.prvProcessReceivedCommands:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1394   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1486   .text.prvProcessReceivedCommands:00000048 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1496   .text.prvProcessReceivedCommands:00000052 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1672   .text.prvProcessReceivedCommands:00000110 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1677   .text.prvTimerTask:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1722   .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1729   .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1774   .text.xTimerGetTimerDaemonTaskHandle:00000020 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1779   .text.xTimerGetPeriod:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1786   .text.xTimerGetPeriod:00000000 xTimerGetPeriod
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1838   .text.vTimerSetReloadMode:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1845   .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1926   .text.uxTimerGetReloadMode:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:1933   .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2021   .text.xTimerGetExpiryTime:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2028   .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2083   .text.pcTimerGetName:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2090   .text.pcTimerGetName:00000000 pcTimerGetName
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s 			page 82


C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2142   .text.xTimerIsTimerActive:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2149   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2237   .text.pvTimerGetTimerID:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2244   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2315   .text.vTimerSetTimerID:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2322   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2389   .text.xTimerPendFunctionCallFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2396   .text.xTimerPendFunctionCallFromISR:00000000 xTimerPendFunctionCallFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2457   .text.xTimerPendFunctionCallFromISR:00000024 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2462   .text.xTimerPendFunctionCall:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2469   .text.xTimerPendFunctionCall:00000000 xTimerPendFunctionCall
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2569   .text.xTimerPendFunctionCall:00000040 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2574   .text.uxTimerGetTimerNumber:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2581   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2599   .text.vTimerSetTimerNumber:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2606   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2623   .bss.pxCurrentTimerList:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2627   .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2630   .bss.pxOverflowTimerList:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2634   .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2637   .bss.ucStaticTimerQueueStorage.6973:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2641   .bss.ucStaticTimerQueueStorage.6973:00000000 ucStaticTimerQueueStorage.6973
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2644   .bss.xActiveTimerList1:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2648   .bss.xActiveTimerList1:00000000 xActiveTimerList1
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2651   .bss.xActiveTimerList2:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2655   .bss.xActiveTimerList2:00000000 xActiveTimerList2
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2658   .bss.xLastTime.6922:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2662   .bss.xLastTime.6922:00000000 xLastTime.6922
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2665   .bss.xStaticTimerQueue.6972:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2669   .bss.xStaticTimerQueue.6972:00000000 xStaticTimerQueue.6972
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2672   .bss.xTimerQueue:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2676   .bss.xTimerQueue:00000000 xTimerQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2679   .bss.xTimerTaskHandle:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFhkfNN.s:2683   .bss.xTimerTaskHandle:00000000 xTimerTaskHandle

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
