ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_cortex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_NVIC_SetPriorityGrouping
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_NVIC_SetPriorityGrouping:
  26              	.LVL0:
  27              	.LFB141:
  28              		.file 1 "dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c"
   1:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
   2:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
   3:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @file    stm32f7xx_hal_cortex.c
   4:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   7:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  11:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @verbatim  
  12:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  13:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  15:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  16:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  17:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ===========================================================
  19:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]     
  20:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  23:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         function according to the following table.
  25:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  26:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  28:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
  29:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
  30:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 2


  31:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  32:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
  37:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  38:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ========================================================
  40:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
  41:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****            
  43:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        is a CMSIS function that:
  45:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
  52:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  55:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        inside the stm32f7xx_hal_cortex.h file.
  56:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  57:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  61:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                             
  63:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  67:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @endverbatim
  68:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  69:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @attention
  70:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  71:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  72:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * All rights reserved.</center></h2>
  73:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  74:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  75:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * the "License"; You may not use this file except in compliance with the
  76:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * License. You may obtain a copy of the License at:
  77:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  78:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  79:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  80:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  81:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  82:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  83:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #include "stm32f7xx_hal.h"
  84:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  85:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  86:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
  87:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 3


  88:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  89:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  90:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  91:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
  92:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  93:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  94:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  95:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  96:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  97:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  98:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  99:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 100:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 101:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 102:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 103:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 104:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 105:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 106:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 107:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 108:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 109:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 110:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 111:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim    
 112:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 113:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 114:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 115:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 116:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 117:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       Systick functionalities 
 118:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 119:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 120:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 121:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 122:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 123:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 124:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 125:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 126:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         using the required unlock sequence.
 127:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length. 
 128:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 129:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 130:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 131:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 132:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 133:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 134:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 135:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 136:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 137:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 138:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 139:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 140:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 141:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 142:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 143:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 144:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 4


  29              		.loc 1 144 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 145:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 146:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  34              		.loc 1 146 3 view .LVU1
 147:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 148:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 149:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  35              		.loc 1 149 3 view .LVU2
  36              	.LBB52:
  37              	.LBI52:
  38              		.file 2 "dev/CMSIS/Include/core_cm7.h"
   1:dev/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:dev/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:dev/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:dev/CMSIS/Include/core_cm7.h ****  * @version  V5.0.8
   5:dev/CMSIS/Include/core_cm7.h ****  * @date     04. June 2018
   6:dev/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:dev/CMSIS/Include/core_cm7.h **** /*
   8:dev/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:dev/CMSIS/Include/core_cm7.h ****  *
  10:dev/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:dev/CMSIS/Include/core_cm7.h ****  *
  12:dev/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:dev/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:dev/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:dev/CMSIS/Include/core_cm7.h ****  *
  16:dev/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:dev/CMSIS/Include/core_cm7.h ****  *
  18:dev/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:dev/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:dev/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:dev/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:dev/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:dev/CMSIS/Include/core_cm7.h ****  */
  24:dev/CMSIS/Include/core_cm7.h **** 
  25:dev/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:dev/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:dev/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:dev/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:dev/CMSIS/Include/core_cm7.h **** #endif
  30:dev/CMSIS/Include/core_cm7.h **** 
  31:dev/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:dev/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:dev/CMSIS/Include/core_cm7.h **** 
  34:dev/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:dev/CMSIS/Include/core_cm7.h **** 
  36:dev/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:dev/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:dev/CMSIS/Include/core_cm7.h **** #endif
  39:dev/CMSIS/Include/core_cm7.h **** 
  40:dev/CMSIS/Include/core_cm7.h **** /**
  41:dev/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:dev/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 5


  43:dev/CMSIS/Include/core_cm7.h **** 
  44:dev/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:dev/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:dev/CMSIS/Include/core_cm7.h **** 
  47:dev/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:dev/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:dev/CMSIS/Include/core_cm7.h **** 
  50:dev/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:dev/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:dev/CMSIS/Include/core_cm7.h ****  */
  53:dev/CMSIS/Include/core_cm7.h **** 
  54:dev/CMSIS/Include/core_cm7.h **** 
  55:dev/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:dev/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:dev/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:dev/CMSIS/Include/core_cm7.h **** /**
  59:dev/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:dev/CMSIS/Include/core_cm7.h ****   @{
  61:dev/CMSIS/Include/core_cm7.h ****  */
  62:dev/CMSIS/Include/core_cm7.h **** 
  63:dev/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:dev/CMSIS/Include/core_cm7.h **** 
  65:dev/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:dev/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:dev/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:dev/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:dev/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:dev/CMSIS/Include/core_cm7.h **** 
  71:dev/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:dev/CMSIS/Include/core_cm7.h **** 
  73:dev/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:dev/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:dev/CMSIS/Include/core_cm7.h **** */
  76:dev/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:dev/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:dev/CMSIS/Include/core_cm7.h ****     #else
  81:dev/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:dev/CMSIS/Include/core_cm7.h ****     #endif
  84:dev/CMSIS/Include/core_cm7.h ****   #else
  85:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:dev/CMSIS/Include/core_cm7.h ****   #endif
  87:dev/CMSIS/Include/core_cm7.h **** 
  88:dev/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:dev/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:dev/CMSIS/Include/core_cm7.h ****     #else
  93:dev/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:dev/CMSIS/Include/core_cm7.h ****     #endif
  96:dev/CMSIS/Include/core_cm7.h ****   #else
  97:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:dev/CMSIS/Include/core_cm7.h ****   #endif
  99:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 6


 100:dev/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:dev/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:dev/CMSIS/Include/core_cm7.h ****     #else
 105:dev/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:dev/CMSIS/Include/core_cm7.h ****     #endif
 108:dev/CMSIS/Include/core_cm7.h ****   #else
 109:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:dev/CMSIS/Include/core_cm7.h ****   #endif
 111:dev/CMSIS/Include/core_cm7.h **** 
 112:dev/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:dev/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:dev/CMSIS/Include/core_cm7.h ****     #else
 117:dev/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:dev/CMSIS/Include/core_cm7.h ****     #endif
 120:dev/CMSIS/Include/core_cm7.h ****   #else
 121:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:dev/CMSIS/Include/core_cm7.h ****   #endif
 123:dev/CMSIS/Include/core_cm7.h **** 
 124:dev/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:dev/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:dev/CMSIS/Include/core_cm7.h ****     #else
 129:dev/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:dev/CMSIS/Include/core_cm7.h ****     #endif
 132:dev/CMSIS/Include/core_cm7.h ****   #else
 133:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:dev/CMSIS/Include/core_cm7.h ****   #endif
 135:dev/CMSIS/Include/core_cm7.h **** 
 136:dev/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:dev/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:dev/CMSIS/Include/core_cm7.h ****     #else
 141:dev/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:dev/CMSIS/Include/core_cm7.h ****     #endif
 144:dev/CMSIS/Include/core_cm7.h ****   #else
 145:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:dev/CMSIS/Include/core_cm7.h ****   #endif
 147:dev/CMSIS/Include/core_cm7.h **** 
 148:dev/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:dev/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:dev/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:dev/CMSIS/Include/core_cm7.h ****     #else
 153:dev/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:dev/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:dev/CMSIS/Include/core_cm7.h ****     #endif
 156:dev/CMSIS/Include/core_cm7.h ****   #else
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 7


 157:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:dev/CMSIS/Include/core_cm7.h ****   #endif
 159:dev/CMSIS/Include/core_cm7.h **** 
 160:dev/CMSIS/Include/core_cm7.h **** #endif
 161:dev/CMSIS/Include/core_cm7.h **** 
 162:dev/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:dev/CMSIS/Include/core_cm7.h **** 
 164:dev/CMSIS/Include/core_cm7.h **** 
 165:dev/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:dev/CMSIS/Include/core_cm7.h **** }
 167:dev/CMSIS/Include/core_cm7.h **** #endif
 168:dev/CMSIS/Include/core_cm7.h **** 
 169:dev/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:dev/CMSIS/Include/core_cm7.h **** 
 171:dev/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:dev/CMSIS/Include/core_cm7.h **** 
 173:dev/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:dev/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:dev/CMSIS/Include/core_cm7.h **** 
 176:dev/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:dev/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:dev/CMSIS/Include/core_cm7.h **** #endif
 179:dev/CMSIS/Include/core_cm7.h **** 
 180:dev/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:dev/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:dev/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:dev/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:dev/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:dev/CMSIS/Include/core_cm7.h ****   #endif
 186:dev/CMSIS/Include/core_cm7.h **** 
 187:dev/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:dev/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:dev/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:dev/CMSIS/Include/core_cm7.h ****   #endif
 191:dev/CMSIS/Include/core_cm7.h **** 
 192:dev/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:dev/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:dev/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:dev/CMSIS/Include/core_cm7.h ****   #endif
 196:dev/CMSIS/Include/core_cm7.h **** 
 197:dev/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:dev/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:dev/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:dev/CMSIS/Include/core_cm7.h ****   #endif
 201:dev/CMSIS/Include/core_cm7.h **** 
 202:dev/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:dev/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:dev/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:dev/CMSIS/Include/core_cm7.h ****   #endif
 206:dev/CMSIS/Include/core_cm7.h **** 
 207:dev/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:dev/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:dev/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:dev/CMSIS/Include/core_cm7.h ****   #endif
 211:dev/CMSIS/Include/core_cm7.h **** 
 212:dev/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:dev/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 8


 214:dev/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:dev/CMSIS/Include/core_cm7.h ****   #endif
 216:dev/CMSIS/Include/core_cm7.h **** 
 217:dev/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:dev/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:dev/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:dev/CMSIS/Include/core_cm7.h ****   #endif
 221:dev/CMSIS/Include/core_cm7.h **** #endif
 222:dev/CMSIS/Include/core_cm7.h **** 
 223:dev/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:dev/CMSIS/Include/core_cm7.h **** /**
 225:dev/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:dev/CMSIS/Include/core_cm7.h **** 
 227:dev/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:dev/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:dev/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:dev/CMSIS/Include/core_cm7.h **** */
 231:dev/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:dev/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:dev/CMSIS/Include/core_cm7.h **** #else
 234:dev/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:dev/CMSIS/Include/core_cm7.h **** #endif
 236:dev/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:dev/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:dev/CMSIS/Include/core_cm7.h **** 
 239:dev/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:dev/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:dev/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:dev/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:dev/CMSIS/Include/core_cm7.h **** 
 244:dev/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:dev/CMSIS/Include/core_cm7.h **** 
 246:dev/CMSIS/Include/core_cm7.h **** 
 247:dev/CMSIS/Include/core_cm7.h **** 
 248:dev/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:dev/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:dev/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:dev/CMSIS/Include/core_cm7.h ****   - Core Register
 252:dev/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:dev/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:dev/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:dev/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:dev/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:dev/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:dev/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:dev/CMSIS/Include/core_cm7.h **** /**
 260:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:dev/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:dev/CMSIS/Include/core_cm7.h **** */
 263:dev/CMSIS/Include/core_cm7.h **** 
 264:dev/CMSIS/Include/core_cm7.h **** /**
 265:dev/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:dev/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:dev/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:dev/CMSIS/Include/core_cm7.h ****   @{
 269:dev/CMSIS/Include/core_cm7.h ****  */
 270:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 9


 271:dev/CMSIS/Include/core_cm7.h **** /**
 272:dev/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:dev/CMSIS/Include/core_cm7.h ****  */
 274:dev/CMSIS/Include/core_cm7.h **** typedef union
 275:dev/CMSIS/Include/core_cm7.h **** {
 276:dev/CMSIS/Include/core_cm7.h ****   struct
 277:dev/CMSIS/Include/core_cm7.h ****   {
 278:dev/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:dev/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:dev/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:dev/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:dev/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:dev/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:dev/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:dev/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:dev/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:dev/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:dev/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:dev/CMSIS/Include/core_cm7.h **** 
 290:dev/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:dev/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:dev/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:dev/CMSIS/Include/core_cm7.h **** 
 294:dev/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:dev/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:dev/CMSIS/Include/core_cm7.h **** 
 297:dev/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:dev/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:dev/CMSIS/Include/core_cm7.h **** 
 300:dev/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:dev/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:dev/CMSIS/Include/core_cm7.h **** 
 303:dev/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:dev/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:dev/CMSIS/Include/core_cm7.h **** 
 306:dev/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:dev/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:dev/CMSIS/Include/core_cm7.h **** 
 309:dev/CMSIS/Include/core_cm7.h **** 
 310:dev/CMSIS/Include/core_cm7.h **** /**
 311:dev/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:dev/CMSIS/Include/core_cm7.h ****  */
 313:dev/CMSIS/Include/core_cm7.h **** typedef union
 314:dev/CMSIS/Include/core_cm7.h **** {
 315:dev/CMSIS/Include/core_cm7.h ****   struct
 316:dev/CMSIS/Include/core_cm7.h ****   {
 317:dev/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:dev/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:dev/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:dev/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:dev/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:dev/CMSIS/Include/core_cm7.h **** 
 323:dev/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:dev/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:dev/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:dev/CMSIS/Include/core_cm7.h **** 
 327:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 10


 328:dev/CMSIS/Include/core_cm7.h **** /**
 329:dev/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:dev/CMSIS/Include/core_cm7.h ****  */
 331:dev/CMSIS/Include/core_cm7.h **** typedef union
 332:dev/CMSIS/Include/core_cm7.h **** {
 333:dev/CMSIS/Include/core_cm7.h ****   struct
 334:dev/CMSIS/Include/core_cm7.h ****   {
 335:dev/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:dev/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:dev/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:dev/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:dev/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:dev/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:dev/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:dev/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:dev/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:dev/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:dev/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:dev/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:dev/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:dev/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:dev/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:dev/CMSIS/Include/core_cm7.h **** 
 351:dev/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:dev/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:dev/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:dev/CMSIS/Include/core_cm7.h **** 
 355:dev/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:dev/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:dev/CMSIS/Include/core_cm7.h **** 
 358:dev/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:dev/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:dev/CMSIS/Include/core_cm7.h **** 
 361:dev/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:dev/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:dev/CMSIS/Include/core_cm7.h **** 
 364:dev/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:dev/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:dev/CMSIS/Include/core_cm7.h **** 
 367:dev/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:dev/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:dev/CMSIS/Include/core_cm7.h **** 
 370:dev/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:dev/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:dev/CMSIS/Include/core_cm7.h **** 
 373:dev/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:dev/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:dev/CMSIS/Include/core_cm7.h **** 
 376:dev/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:dev/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:dev/CMSIS/Include/core_cm7.h **** 
 379:dev/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:dev/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:dev/CMSIS/Include/core_cm7.h **** 
 382:dev/CMSIS/Include/core_cm7.h **** 
 383:dev/CMSIS/Include/core_cm7.h **** /**
 384:dev/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 11


 385:dev/CMSIS/Include/core_cm7.h ****  */
 386:dev/CMSIS/Include/core_cm7.h **** typedef union
 387:dev/CMSIS/Include/core_cm7.h **** {
 388:dev/CMSIS/Include/core_cm7.h ****   struct
 389:dev/CMSIS/Include/core_cm7.h ****   {
 390:dev/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:dev/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:dev/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:dev/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:dev/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:dev/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:dev/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:dev/CMSIS/Include/core_cm7.h **** 
 398:dev/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:dev/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:dev/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:dev/CMSIS/Include/core_cm7.h **** 
 402:dev/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:dev/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:dev/CMSIS/Include/core_cm7.h **** 
 405:dev/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:dev/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:dev/CMSIS/Include/core_cm7.h **** 
 408:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:dev/CMSIS/Include/core_cm7.h **** 
 410:dev/CMSIS/Include/core_cm7.h **** 
 411:dev/CMSIS/Include/core_cm7.h **** /**
 412:dev/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:dev/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:dev/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:dev/CMSIS/Include/core_cm7.h ****   @{
 416:dev/CMSIS/Include/core_cm7.h ****  */
 417:dev/CMSIS/Include/core_cm7.h **** 
 418:dev/CMSIS/Include/core_cm7.h **** /**
 419:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:dev/CMSIS/Include/core_cm7.h ****  */
 421:dev/CMSIS/Include/core_cm7.h **** typedef struct
 422:dev/CMSIS/Include/core_cm7.h **** {
 423:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:dev/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:dev/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:dev/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:dev/CMSIS/Include/core_cm7.h **** 
 438:dev/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:dev/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:dev/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 12


 442:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:dev/CMSIS/Include/core_cm7.h **** 
 444:dev/CMSIS/Include/core_cm7.h **** 
 445:dev/CMSIS/Include/core_cm7.h **** /**
 446:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:dev/CMSIS/Include/core_cm7.h ****   @{
 450:dev/CMSIS/Include/core_cm7.h ****  */
 451:dev/CMSIS/Include/core_cm7.h **** 
 452:dev/CMSIS/Include/core_cm7.h **** /**
 453:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:dev/CMSIS/Include/core_cm7.h ****  */
 455:dev/CMSIS/Include/core_cm7.h **** typedef struct
 456:dev/CMSIS/Include/core_cm7.h **** {
 457:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:dev/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 13


 499:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:dev/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:dev/CMSIS/Include/core_cm7.h **** 
 509:dev/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:dev/CMSIS/Include/core_cm7.h **** 
 513:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:dev/CMSIS/Include/core_cm7.h **** 
 516:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:dev/CMSIS/Include/core_cm7.h **** 
 519:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:dev/CMSIS/Include/core_cm7.h **** 
 522:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:dev/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:dev/CMSIS/Include/core_cm7.h **** 
 525:dev/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:dev/CMSIS/Include/core_cm7.h **** 
 529:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:dev/CMSIS/Include/core_cm7.h **** 
 532:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:dev/CMSIS/Include/core_cm7.h **** 
 535:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:dev/CMSIS/Include/core_cm7.h **** 
 538:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:dev/CMSIS/Include/core_cm7.h **** 
 541:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:dev/CMSIS/Include/core_cm7.h **** 
 544:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:dev/CMSIS/Include/core_cm7.h **** 
 547:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:dev/CMSIS/Include/core_cm7.h **** 
 550:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:dev/CMSIS/Include/core_cm7.h **** 
 553:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:dev/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 14


 556:dev/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:dev/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:dev/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:dev/CMSIS/Include/core_cm7.h **** 
 560:dev/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:dev/CMSIS/Include/core_cm7.h **** 
 564:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:dev/CMSIS/Include/core_cm7.h **** 
 567:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:dev/CMSIS/Include/core_cm7.h **** 
 570:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:dev/CMSIS/Include/core_cm7.h **** 
 573:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:dev/CMSIS/Include/core_cm7.h **** 
 576:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:dev/CMSIS/Include/core_cm7.h **** 
 579:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:dev/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:dev/CMSIS/Include/core_cm7.h **** 
 582:dev/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:dev/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:dev/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:dev/CMSIS/Include/core_cm7.h **** 
 586:dev/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:dev/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:dev/CMSIS/Include/core_cm7.h **** 
 589:dev/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:dev/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:dev/CMSIS/Include/core_cm7.h **** 
 592:dev/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:dev/CMSIS/Include/core_cm7.h **** 
 596:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:dev/CMSIS/Include/core_cm7.h **** 
 599:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:dev/CMSIS/Include/core_cm7.h **** 
 602:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:dev/CMSIS/Include/core_cm7.h **** 
 605:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:dev/CMSIS/Include/core_cm7.h **** 
 608:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:dev/CMSIS/Include/core_cm7.h **** 
 611:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 15


 613:dev/CMSIS/Include/core_cm7.h **** 
 614:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:dev/CMSIS/Include/core_cm7.h **** 
 617:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:dev/CMSIS/Include/core_cm7.h **** 
 620:dev/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:dev/CMSIS/Include/core_cm7.h **** 
 624:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:dev/CMSIS/Include/core_cm7.h **** 
 627:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:dev/CMSIS/Include/core_cm7.h **** 
 630:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:dev/CMSIS/Include/core_cm7.h **** 
 633:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:dev/CMSIS/Include/core_cm7.h **** 
 636:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:dev/CMSIS/Include/core_cm7.h **** 
 639:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:dev/CMSIS/Include/core_cm7.h **** 
 642:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:dev/CMSIS/Include/core_cm7.h **** 
 645:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:dev/CMSIS/Include/core_cm7.h **** 
 648:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:dev/CMSIS/Include/core_cm7.h **** 
 651:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:dev/CMSIS/Include/core_cm7.h **** 
 654:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:dev/CMSIS/Include/core_cm7.h **** 
 657:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:dev/CMSIS/Include/core_cm7.h **** 
 660:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:dev/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:dev/CMSIS/Include/core_cm7.h **** 
 663:dev/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:dev/CMSIS/Include/core_cm7.h **** 
 667:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 16


 670:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:dev/CMSIS/Include/core_cm7.h **** 
 673:dev/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:dev/CMSIS/Include/core_cm7.h **** 
 677:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:dev/CMSIS/Include/core_cm7.h **** 
 680:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:dev/CMSIS/Include/core_cm7.h **** 
 683:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:dev/CMSIS/Include/core_cm7.h **** 
 686:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:dev/CMSIS/Include/core_cm7.h **** 
 689:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:dev/CMSIS/Include/core_cm7.h **** 
 692:dev/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:dev/CMSIS/Include/core_cm7.h **** 
 696:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:dev/CMSIS/Include/core_cm7.h **** 
 699:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:dev/CMSIS/Include/core_cm7.h **** 
 702:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:dev/CMSIS/Include/core_cm7.h **** 
 705:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:dev/CMSIS/Include/core_cm7.h **** 
 708:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:dev/CMSIS/Include/core_cm7.h **** 
 711:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:dev/CMSIS/Include/core_cm7.h **** 
 714:dev/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:dev/CMSIS/Include/core_cm7.h **** 
 718:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:dev/CMSIS/Include/core_cm7.h **** 
 721:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:dev/CMSIS/Include/core_cm7.h **** 
 724:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 17


 727:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:dev/CMSIS/Include/core_cm7.h **** 
 730:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:dev/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:dev/CMSIS/Include/core_cm7.h **** 
 733:dev/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:dev/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:dev/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:dev/CMSIS/Include/core_cm7.h **** 
 737:dev/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:dev/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:dev/CMSIS/Include/core_cm7.h **** 
 740:dev/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:dev/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:dev/CMSIS/Include/core_cm7.h **** 
 743:dev/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:dev/CMSIS/Include/core_cm7.h **** 
 747:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:dev/CMSIS/Include/core_cm7.h **** 
 750:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:dev/CMSIS/Include/core_cm7.h **** 
 753:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:dev/CMSIS/Include/core_cm7.h **** 
 756:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:dev/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:dev/CMSIS/Include/core_cm7.h **** 
 759:dev/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:dev/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:dev/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:dev/CMSIS/Include/core_cm7.h **** 
 763:dev/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:dev/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:dev/CMSIS/Include/core_cm7.h **** 
 766:dev/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:dev/CMSIS/Include/core_cm7.h **** 
 770:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:dev/CMSIS/Include/core_cm7.h **** 
 773:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:dev/CMSIS/Include/core_cm7.h **** 
 776:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:dev/CMSIS/Include/core_cm7.h **** 
 779:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:dev/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:dev/CMSIS/Include/core_cm7.h **** 
 782:dev/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 18


 784:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:dev/CMSIS/Include/core_cm7.h **** 
 786:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:dev/CMSIS/Include/core_cm7.h **** 
 789:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:dev/CMSIS/Include/core_cm7.h **** 
 792:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:dev/CMSIS/Include/core_cm7.h **** 
 795:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:dev/CMSIS/Include/core_cm7.h **** 
 798:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:dev/CMSIS/Include/core_cm7.h **** 
 801:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:dev/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:dev/CMSIS/Include/core_cm7.h **** 
 804:dev/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:dev/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:dev/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:dev/CMSIS/Include/core_cm7.h **** 
 808:dev/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:dev/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:dev/CMSIS/Include/core_cm7.h **** 
 811:dev/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:dev/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:dev/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:dev/CMSIS/Include/core_cm7.h **** 
 815:dev/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:dev/CMSIS/Include/core_cm7.h **** 
 819:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:dev/CMSIS/Include/core_cm7.h **** 
 822:dev/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:dev/CMSIS/Include/core_cm7.h **** 
 826:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:dev/CMSIS/Include/core_cm7.h **** 
 829:dev/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:dev/CMSIS/Include/core_cm7.h **** 
 833:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:dev/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:dev/CMSIS/Include/core_cm7.h **** 
 836:dev/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:dev/CMSIS/Include/core_cm7.h **** 
 840:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 19


 841:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:dev/CMSIS/Include/core_cm7.h **** 
 843:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:dev/CMSIS/Include/core_cm7.h **** 
 846:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:dev/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:dev/CMSIS/Include/core_cm7.h **** 
 849:dev/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:dev/CMSIS/Include/core_cm7.h **** 
 853:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:dev/CMSIS/Include/core_cm7.h **** 
 856:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:dev/CMSIS/Include/core_cm7.h **** 
 859:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:dev/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:dev/CMSIS/Include/core_cm7.h **** 
 862:dev/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:dev/CMSIS/Include/core_cm7.h **** 
 866:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:dev/CMSIS/Include/core_cm7.h **** 
 869:dev/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:dev/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:dev/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:dev/CMSIS/Include/core_cm7.h **** 
 873:dev/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:dev/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:dev/CMSIS/Include/core_cm7.h **** 
 876:dev/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:dev/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:dev/CMSIS/Include/core_cm7.h **** 
 879:dev/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:dev/CMSIS/Include/core_cm7.h **** 
 883:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:dev/CMSIS/Include/core_cm7.h **** 
 886:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:dev/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:dev/CMSIS/Include/core_cm7.h **** 
 889:dev/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:dev/CMSIS/Include/core_cm7.h **** 
 893:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:dev/CMSIS/Include/core_cm7.h **** 
 896:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 20


 898:dev/CMSIS/Include/core_cm7.h **** 
 899:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:dev/CMSIS/Include/core_cm7.h **** 
 902:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:dev/CMSIS/Include/core_cm7.h **** 
 905:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:dev/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:dev/CMSIS/Include/core_cm7.h **** 
 908:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:dev/CMSIS/Include/core_cm7.h **** 
 910:dev/CMSIS/Include/core_cm7.h **** 
 911:dev/CMSIS/Include/core_cm7.h **** /**
 912:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:dev/CMSIS/Include/core_cm7.h ****   @{
 916:dev/CMSIS/Include/core_cm7.h ****  */
 917:dev/CMSIS/Include/core_cm7.h **** 
 918:dev/CMSIS/Include/core_cm7.h **** /**
 919:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:dev/CMSIS/Include/core_cm7.h ****  */
 921:dev/CMSIS/Include/core_cm7.h **** typedef struct
 922:dev/CMSIS/Include/core_cm7.h **** {
 923:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:dev/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:dev/CMSIS/Include/core_cm7.h **** 
 928:dev/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:dev/CMSIS/Include/core_cm7.h **** 
 932:dev/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 934:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 935:dev/CMSIS/Include/core_cm7.h **** 
 936:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 937:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 938:dev/CMSIS/Include/core_cm7.h **** 
 939:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 940:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 941:dev/CMSIS/Include/core_cm7.h **** 
 942:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 943:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 944:dev/CMSIS/Include/core_cm7.h **** 
 945:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 946:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 947:dev/CMSIS/Include/core_cm7.h **** 
 948:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 949:dev/CMSIS/Include/core_cm7.h **** 
 950:dev/CMSIS/Include/core_cm7.h **** 
 951:dev/CMSIS/Include/core_cm7.h **** /**
 952:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 953:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 954:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 21


 955:dev/CMSIS/Include/core_cm7.h ****   @{
 956:dev/CMSIS/Include/core_cm7.h ****  */
 957:dev/CMSIS/Include/core_cm7.h **** 
 958:dev/CMSIS/Include/core_cm7.h **** /**
 959:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 960:dev/CMSIS/Include/core_cm7.h ****  */
 961:dev/CMSIS/Include/core_cm7.h **** typedef struct
 962:dev/CMSIS/Include/core_cm7.h **** {
 963:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 964:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 965:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 966:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 967:dev/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 968:dev/CMSIS/Include/core_cm7.h **** 
 969:dev/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 970:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 971:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 972:dev/CMSIS/Include/core_cm7.h **** 
 973:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 974:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 975:dev/CMSIS/Include/core_cm7.h **** 
 976:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 977:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 978:dev/CMSIS/Include/core_cm7.h **** 
 979:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 980:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 981:dev/CMSIS/Include/core_cm7.h **** 
 982:dev/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 983:dev/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 984:dev/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 985:dev/CMSIS/Include/core_cm7.h **** 
 986:dev/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 987:dev/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 988:dev/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 989:dev/CMSIS/Include/core_cm7.h **** 
 990:dev/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 991:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 992:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 993:dev/CMSIS/Include/core_cm7.h **** 
 994:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 995:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 996:dev/CMSIS/Include/core_cm7.h **** 
 997:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 998:dev/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 999:dev/CMSIS/Include/core_cm7.h **** 
1000:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1001:dev/CMSIS/Include/core_cm7.h **** 
1002:dev/CMSIS/Include/core_cm7.h **** 
1003:dev/CMSIS/Include/core_cm7.h **** /**
1004:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1005:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1006:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1007:dev/CMSIS/Include/core_cm7.h ****   @{
1008:dev/CMSIS/Include/core_cm7.h ****  */
1009:dev/CMSIS/Include/core_cm7.h **** 
1010:dev/CMSIS/Include/core_cm7.h **** /**
1011:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 22


1012:dev/CMSIS/Include/core_cm7.h ****  */
1013:dev/CMSIS/Include/core_cm7.h **** typedef struct
1014:dev/CMSIS/Include/core_cm7.h **** {
1015:dev/CMSIS/Include/core_cm7.h ****   __OM  union
1016:dev/CMSIS/Include/core_cm7.h ****   {
1017:dev/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1018:dev/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1019:dev/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1020:dev/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1021:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1022:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1023:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1024:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1025:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1026:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1027:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1028:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1029:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1030:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1031:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1032:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1033:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1034:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1035:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1036:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1037:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1038:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1039:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1040:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1041:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1042:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1043:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1044:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1045:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1046:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1047:dev/CMSIS/Include/core_cm7.h **** } ITM_Type;
1048:dev/CMSIS/Include/core_cm7.h **** 
1049:dev/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1050:dev/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1051:dev/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1052:dev/CMSIS/Include/core_cm7.h **** 
1053:dev/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1054:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1055:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1056:dev/CMSIS/Include/core_cm7.h **** 
1057:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1058:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1059:dev/CMSIS/Include/core_cm7.h **** 
1060:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1061:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1062:dev/CMSIS/Include/core_cm7.h **** 
1063:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1064:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1065:dev/CMSIS/Include/core_cm7.h **** 
1066:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1067:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1068:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 23


1069:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1070:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1071:dev/CMSIS/Include/core_cm7.h **** 
1072:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1073:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1074:dev/CMSIS/Include/core_cm7.h **** 
1075:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1076:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1077:dev/CMSIS/Include/core_cm7.h **** 
1078:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1079:dev/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1080:dev/CMSIS/Include/core_cm7.h **** 
1081:dev/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1082:dev/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1083:dev/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1084:dev/CMSIS/Include/core_cm7.h **** 
1085:dev/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1086:dev/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1087:dev/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1088:dev/CMSIS/Include/core_cm7.h **** 
1089:dev/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1090:dev/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1091:dev/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1092:dev/CMSIS/Include/core_cm7.h **** 
1093:dev/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1094:dev/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1095:dev/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1096:dev/CMSIS/Include/core_cm7.h **** 
1097:dev/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1098:dev/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1099:dev/CMSIS/Include/core_cm7.h **** 
1100:dev/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1101:dev/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1102:dev/CMSIS/Include/core_cm7.h **** 
1103:dev/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1104:dev/CMSIS/Include/core_cm7.h **** 
1105:dev/CMSIS/Include/core_cm7.h **** 
1106:dev/CMSIS/Include/core_cm7.h **** /**
1107:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1108:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1109:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1110:dev/CMSIS/Include/core_cm7.h ****   @{
1111:dev/CMSIS/Include/core_cm7.h ****  */
1112:dev/CMSIS/Include/core_cm7.h **** 
1113:dev/CMSIS/Include/core_cm7.h **** /**
1114:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1115:dev/CMSIS/Include/core_cm7.h ****  */
1116:dev/CMSIS/Include/core_cm7.h **** typedef struct
1117:dev/CMSIS/Include/core_cm7.h **** {
1118:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1119:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1120:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1121:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1122:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1123:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1124:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1125:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 24


1126:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1127:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1128:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1129:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1130:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1131:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1132:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1133:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1134:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1135:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1136:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1137:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1138:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1139:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1140:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1141:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1142:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1143:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1144:dev/CMSIS/Include/core_cm7.h **** } DWT_Type;
1145:dev/CMSIS/Include/core_cm7.h **** 
1146:dev/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1147:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1148:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1149:dev/CMSIS/Include/core_cm7.h **** 
1150:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1151:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1152:dev/CMSIS/Include/core_cm7.h **** 
1153:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1154:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1155:dev/CMSIS/Include/core_cm7.h **** 
1156:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1157:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1158:dev/CMSIS/Include/core_cm7.h **** 
1159:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1160:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1161:dev/CMSIS/Include/core_cm7.h **** 
1162:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1163:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1164:dev/CMSIS/Include/core_cm7.h **** 
1165:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1166:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1167:dev/CMSIS/Include/core_cm7.h **** 
1168:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1169:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1170:dev/CMSIS/Include/core_cm7.h **** 
1171:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1172:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1173:dev/CMSIS/Include/core_cm7.h **** 
1174:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1175:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1176:dev/CMSIS/Include/core_cm7.h **** 
1177:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1178:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1179:dev/CMSIS/Include/core_cm7.h **** 
1180:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1181:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1182:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 25


1183:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1184:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1185:dev/CMSIS/Include/core_cm7.h **** 
1186:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1187:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1188:dev/CMSIS/Include/core_cm7.h **** 
1189:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1190:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1191:dev/CMSIS/Include/core_cm7.h **** 
1192:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1193:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1194:dev/CMSIS/Include/core_cm7.h **** 
1195:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1196:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1197:dev/CMSIS/Include/core_cm7.h **** 
1198:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1199:dev/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1200:dev/CMSIS/Include/core_cm7.h **** 
1201:dev/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1202:dev/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1203:dev/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1204:dev/CMSIS/Include/core_cm7.h **** 
1205:dev/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1206:dev/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1207:dev/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1208:dev/CMSIS/Include/core_cm7.h **** 
1209:dev/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1210:dev/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1211:dev/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1212:dev/CMSIS/Include/core_cm7.h **** 
1213:dev/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1214:dev/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1215:dev/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1216:dev/CMSIS/Include/core_cm7.h **** 
1217:dev/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1218:dev/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1219:dev/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1220:dev/CMSIS/Include/core_cm7.h **** 
1221:dev/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1222:dev/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1223:dev/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1224:dev/CMSIS/Include/core_cm7.h **** 
1225:dev/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1226:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1227:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1228:dev/CMSIS/Include/core_cm7.h **** 
1229:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1230:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1231:dev/CMSIS/Include/core_cm7.h **** 
1232:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1233:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1234:dev/CMSIS/Include/core_cm7.h **** 
1235:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1236:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1237:dev/CMSIS/Include/core_cm7.h **** 
1238:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1239:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 26


1240:dev/CMSIS/Include/core_cm7.h **** 
1241:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1242:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1243:dev/CMSIS/Include/core_cm7.h **** 
1244:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1245:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1246:dev/CMSIS/Include/core_cm7.h **** 
1247:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1248:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1249:dev/CMSIS/Include/core_cm7.h **** 
1250:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1251:dev/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1252:dev/CMSIS/Include/core_cm7.h **** 
1253:dev/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1254:dev/CMSIS/Include/core_cm7.h **** 
1255:dev/CMSIS/Include/core_cm7.h **** 
1256:dev/CMSIS/Include/core_cm7.h **** /**
1257:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1258:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1259:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1260:dev/CMSIS/Include/core_cm7.h ****   @{
1261:dev/CMSIS/Include/core_cm7.h ****  */
1262:dev/CMSIS/Include/core_cm7.h **** 
1263:dev/CMSIS/Include/core_cm7.h **** /**
1264:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1265:dev/CMSIS/Include/core_cm7.h ****  */
1266:dev/CMSIS/Include/core_cm7.h **** typedef struct
1267:dev/CMSIS/Include/core_cm7.h **** {
1268:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1269:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1270:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1271:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1272:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1273:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1274:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1275:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1276:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1277:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1278:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1279:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1280:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1281:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1282:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1283:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1284:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1285:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1286:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1287:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1288:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1289:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1290:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1291:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1292:dev/CMSIS/Include/core_cm7.h **** } TPI_Type;
1293:dev/CMSIS/Include/core_cm7.h **** 
1294:dev/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1295:dev/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1296:dev/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 27


1297:dev/CMSIS/Include/core_cm7.h **** 
1298:dev/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1299:dev/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1300:dev/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1301:dev/CMSIS/Include/core_cm7.h **** 
1302:dev/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1303:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1304:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1305:dev/CMSIS/Include/core_cm7.h **** 
1306:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1307:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1308:dev/CMSIS/Include/core_cm7.h **** 
1309:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1310:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1311:dev/CMSIS/Include/core_cm7.h **** 
1312:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1313:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1314:dev/CMSIS/Include/core_cm7.h **** 
1315:dev/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1316:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1317:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1318:dev/CMSIS/Include/core_cm7.h **** 
1319:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1320:dev/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1321:dev/CMSIS/Include/core_cm7.h **** 
1322:dev/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1323:dev/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1324:dev/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1325:dev/CMSIS/Include/core_cm7.h **** 
1326:dev/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1327:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1328:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1329:dev/CMSIS/Include/core_cm7.h **** 
1330:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1331:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1332:dev/CMSIS/Include/core_cm7.h **** 
1333:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1334:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1335:dev/CMSIS/Include/core_cm7.h **** 
1336:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1337:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1338:dev/CMSIS/Include/core_cm7.h **** 
1339:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1340:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1341:dev/CMSIS/Include/core_cm7.h **** 
1342:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1343:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1344:dev/CMSIS/Include/core_cm7.h **** 
1345:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1346:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1347:dev/CMSIS/Include/core_cm7.h **** 
1348:dev/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1349:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1350:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1351:dev/CMSIS/Include/core_cm7.h **** 
1352:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1353:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 28


1354:dev/CMSIS/Include/core_cm7.h **** 
1355:dev/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1356:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1357:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1358:dev/CMSIS/Include/core_cm7.h **** 
1359:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1360:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1361:dev/CMSIS/Include/core_cm7.h **** 
1362:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1363:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1364:dev/CMSIS/Include/core_cm7.h **** 
1365:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1366:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1367:dev/CMSIS/Include/core_cm7.h **** 
1368:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1369:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1370:dev/CMSIS/Include/core_cm7.h **** 
1371:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1372:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1373:dev/CMSIS/Include/core_cm7.h **** 
1374:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1375:dev/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1376:dev/CMSIS/Include/core_cm7.h **** 
1377:dev/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1378:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1379:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1380:dev/CMSIS/Include/core_cm7.h **** 
1381:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1382:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1383:dev/CMSIS/Include/core_cm7.h **** 
1384:dev/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1385:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1386:dev/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1387:dev/CMSIS/Include/core_cm7.h **** 
1388:dev/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1389:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1390:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1391:dev/CMSIS/Include/core_cm7.h **** 
1392:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1393:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1394:dev/CMSIS/Include/core_cm7.h **** 
1395:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1396:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1397:dev/CMSIS/Include/core_cm7.h **** 
1398:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1399:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1400:dev/CMSIS/Include/core_cm7.h **** 
1401:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1402:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1403:dev/CMSIS/Include/core_cm7.h **** 
1404:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1405:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1406:dev/CMSIS/Include/core_cm7.h **** 
1407:dev/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1408:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1409:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1410:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 29


1411:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1412:dev/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1413:dev/CMSIS/Include/core_cm7.h **** 
1414:dev/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1415:dev/CMSIS/Include/core_cm7.h **** 
1416:dev/CMSIS/Include/core_cm7.h **** 
1417:dev/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1418:dev/CMSIS/Include/core_cm7.h **** /**
1419:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1420:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1421:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1422:dev/CMSIS/Include/core_cm7.h ****   @{
1423:dev/CMSIS/Include/core_cm7.h ****  */
1424:dev/CMSIS/Include/core_cm7.h **** 
1425:dev/CMSIS/Include/core_cm7.h **** /**
1426:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1427:dev/CMSIS/Include/core_cm7.h ****  */
1428:dev/CMSIS/Include/core_cm7.h **** typedef struct
1429:dev/CMSIS/Include/core_cm7.h **** {
1430:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1431:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1432:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1433:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1434:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1435:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1436:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1437:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1438:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1439:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1440:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1441:dev/CMSIS/Include/core_cm7.h **** } MPU_Type;
1442:dev/CMSIS/Include/core_cm7.h **** 
1443:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1444:dev/CMSIS/Include/core_cm7.h **** 
1445:dev/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1446:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1447:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1448:dev/CMSIS/Include/core_cm7.h **** 
1449:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1450:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1451:dev/CMSIS/Include/core_cm7.h **** 
1452:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1453:dev/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1454:dev/CMSIS/Include/core_cm7.h **** 
1455:dev/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1456:dev/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1457:dev/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1458:dev/CMSIS/Include/core_cm7.h **** 
1459:dev/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1460:dev/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1461:dev/CMSIS/Include/core_cm7.h **** 
1462:dev/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1463:dev/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1464:dev/CMSIS/Include/core_cm7.h **** 
1465:dev/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1466:dev/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1467:dev/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 30


1468:dev/CMSIS/Include/core_cm7.h **** 
1469:dev/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1470:dev/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1471:dev/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1472:dev/CMSIS/Include/core_cm7.h **** 
1473:dev/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1474:dev/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1475:dev/CMSIS/Include/core_cm7.h **** 
1476:dev/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1477:dev/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1478:dev/CMSIS/Include/core_cm7.h **** 
1479:dev/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1480:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1481:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1482:dev/CMSIS/Include/core_cm7.h **** 
1483:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1484:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1485:dev/CMSIS/Include/core_cm7.h **** 
1486:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1487:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1488:dev/CMSIS/Include/core_cm7.h **** 
1489:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1490:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1491:dev/CMSIS/Include/core_cm7.h **** 
1492:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1493:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1494:dev/CMSIS/Include/core_cm7.h **** 
1495:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1496:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1497:dev/CMSIS/Include/core_cm7.h **** 
1498:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1499:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1500:dev/CMSIS/Include/core_cm7.h **** 
1501:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1502:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1503:dev/CMSIS/Include/core_cm7.h **** 
1504:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1505:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1506:dev/CMSIS/Include/core_cm7.h **** 
1507:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1508:dev/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1509:dev/CMSIS/Include/core_cm7.h **** 
1510:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1511:dev/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1512:dev/CMSIS/Include/core_cm7.h **** 
1513:dev/CMSIS/Include/core_cm7.h **** 
1514:dev/CMSIS/Include/core_cm7.h **** /**
1515:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1516:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1517:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1518:dev/CMSIS/Include/core_cm7.h ****   @{
1519:dev/CMSIS/Include/core_cm7.h ****  */
1520:dev/CMSIS/Include/core_cm7.h **** 
1521:dev/CMSIS/Include/core_cm7.h **** /**
1522:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1523:dev/CMSIS/Include/core_cm7.h ****  */
1524:dev/CMSIS/Include/core_cm7.h **** typedef struct
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 31


1525:dev/CMSIS/Include/core_cm7.h **** {
1526:dev/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1527:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1528:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1529:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1530:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1531:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1532:dev/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1533:dev/CMSIS/Include/core_cm7.h **** } FPU_Type;
1534:dev/CMSIS/Include/core_cm7.h **** 
1535:dev/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1536:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1537:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1538:dev/CMSIS/Include/core_cm7.h **** 
1539:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1540:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1541:dev/CMSIS/Include/core_cm7.h **** 
1542:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1543:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1544:dev/CMSIS/Include/core_cm7.h **** 
1545:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1546:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1547:dev/CMSIS/Include/core_cm7.h **** 
1548:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1549:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1550:dev/CMSIS/Include/core_cm7.h **** 
1551:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1552:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1553:dev/CMSIS/Include/core_cm7.h **** 
1554:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1555:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1556:dev/CMSIS/Include/core_cm7.h **** 
1557:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1558:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1559:dev/CMSIS/Include/core_cm7.h **** 
1560:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1561:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1562:dev/CMSIS/Include/core_cm7.h **** 
1563:dev/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1564:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1565:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1566:dev/CMSIS/Include/core_cm7.h **** 
1567:dev/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1568:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1569:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1570:dev/CMSIS/Include/core_cm7.h **** 
1571:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1572:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1573:dev/CMSIS/Include/core_cm7.h **** 
1574:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1575:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1576:dev/CMSIS/Include/core_cm7.h **** 
1577:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1578:dev/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1579:dev/CMSIS/Include/core_cm7.h **** 
1580:dev/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1581:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 32


1582:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1583:dev/CMSIS/Include/core_cm7.h **** 
1584:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1585:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1586:dev/CMSIS/Include/core_cm7.h **** 
1587:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1588:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1589:dev/CMSIS/Include/core_cm7.h **** 
1590:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1591:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1592:dev/CMSIS/Include/core_cm7.h **** 
1593:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1594:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1595:dev/CMSIS/Include/core_cm7.h **** 
1596:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1597:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1598:dev/CMSIS/Include/core_cm7.h **** 
1599:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1600:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1601:dev/CMSIS/Include/core_cm7.h **** 
1602:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1603:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1604:dev/CMSIS/Include/core_cm7.h **** 
1605:dev/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1606:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1607:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1608:dev/CMSIS/Include/core_cm7.h **** 
1609:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1610:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1611:dev/CMSIS/Include/core_cm7.h **** 
1612:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1613:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1614:dev/CMSIS/Include/core_cm7.h **** 
1615:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1616:dev/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1617:dev/CMSIS/Include/core_cm7.h **** 
1618:dev/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1619:dev/CMSIS/Include/core_cm7.h **** 
1620:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1621:dev/CMSIS/Include/core_cm7.h **** 
1622:dev/CMSIS/Include/core_cm7.h **** 
1623:dev/CMSIS/Include/core_cm7.h **** /**
1624:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1625:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1626:dev/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1627:dev/CMSIS/Include/core_cm7.h ****   @{
1628:dev/CMSIS/Include/core_cm7.h ****  */
1629:dev/CMSIS/Include/core_cm7.h **** 
1630:dev/CMSIS/Include/core_cm7.h **** /**
1631:dev/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1632:dev/CMSIS/Include/core_cm7.h ****  */
1633:dev/CMSIS/Include/core_cm7.h **** typedef struct
1634:dev/CMSIS/Include/core_cm7.h **** {
1635:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1636:dev/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1637:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1638:dev/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 33


1639:dev/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1640:dev/CMSIS/Include/core_cm7.h **** 
1641:dev/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1642:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1643:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1644:dev/CMSIS/Include/core_cm7.h **** 
1645:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1646:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1647:dev/CMSIS/Include/core_cm7.h **** 
1648:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1649:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1650:dev/CMSIS/Include/core_cm7.h **** 
1651:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1652:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1653:dev/CMSIS/Include/core_cm7.h **** 
1654:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1655:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1656:dev/CMSIS/Include/core_cm7.h **** 
1657:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1658:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1659:dev/CMSIS/Include/core_cm7.h **** 
1660:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1661:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1662:dev/CMSIS/Include/core_cm7.h **** 
1663:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1664:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1665:dev/CMSIS/Include/core_cm7.h **** 
1666:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1667:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1668:dev/CMSIS/Include/core_cm7.h **** 
1669:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1670:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1671:dev/CMSIS/Include/core_cm7.h **** 
1672:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1673:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1674:dev/CMSIS/Include/core_cm7.h **** 
1675:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1676:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1677:dev/CMSIS/Include/core_cm7.h **** 
1678:dev/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1679:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1680:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1681:dev/CMSIS/Include/core_cm7.h **** 
1682:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1683:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1684:dev/CMSIS/Include/core_cm7.h **** 
1685:dev/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1686:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1687:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1688:dev/CMSIS/Include/core_cm7.h **** 
1689:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1690:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1691:dev/CMSIS/Include/core_cm7.h **** 
1692:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1693:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1694:dev/CMSIS/Include/core_cm7.h **** 
1695:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 34


1696:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1697:dev/CMSIS/Include/core_cm7.h **** 
1698:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1699:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1700:dev/CMSIS/Include/core_cm7.h **** 
1701:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1702:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1703:dev/CMSIS/Include/core_cm7.h **** 
1704:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1705:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1706:dev/CMSIS/Include/core_cm7.h **** 
1707:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1708:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1709:dev/CMSIS/Include/core_cm7.h **** 
1710:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1711:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1712:dev/CMSIS/Include/core_cm7.h **** 
1713:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1714:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1715:dev/CMSIS/Include/core_cm7.h **** 
1716:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1717:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1718:dev/CMSIS/Include/core_cm7.h **** 
1719:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1720:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1721:dev/CMSIS/Include/core_cm7.h **** 
1722:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1723:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1724:dev/CMSIS/Include/core_cm7.h **** 
1725:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1726:dev/CMSIS/Include/core_cm7.h **** 
1727:dev/CMSIS/Include/core_cm7.h **** 
1728:dev/CMSIS/Include/core_cm7.h **** /**
1729:dev/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1730:dev/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1731:dev/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1732:dev/CMSIS/Include/core_cm7.h ****   @{
1733:dev/CMSIS/Include/core_cm7.h ****  */
1734:dev/CMSIS/Include/core_cm7.h **** 
1735:dev/CMSIS/Include/core_cm7.h **** /**
1736:dev/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1737:dev/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1738:dev/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1739:dev/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1740:dev/CMSIS/Include/core_cm7.h **** */
1741:dev/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1742:dev/CMSIS/Include/core_cm7.h **** 
1743:dev/CMSIS/Include/core_cm7.h **** /**
1744:dev/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1745:dev/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1746:dev/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1747:dev/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1748:dev/CMSIS/Include/core_cm7.h **** */
1749:dev/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1750:dev/CMSIS/Include/core_cm7.h **** 
1751:dev/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1752:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 35


1753:dev/CMSIS/Include/core_cm7.h **** 
1754:dev/CMSIS/Include/core_cm7.h **** /**
1755:dev/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1756:dev/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1757:dev/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1758:dev/CMSIS/Include/core_cm7.h ****   @{
1759:dev/CMSIS/Include/core_cm7.h ****  */
1760:dev/CMSIS/Include/core_cm7.h **** 
1761:dev/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1762:dev/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1763:dev/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1764:dev/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1765:dev/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1766:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1767:dev/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1768:dev/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1769:dev/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1770:dev/CMSIS/Include/core_cm7.h **** 
1771:dev/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1772:dev/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1773:dev/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1774:dev/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1775:dev/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1776:dev/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1777:dev/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1778:dev/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1779:dev/CMSIS/Include/core_cm7.h **** 
1780:dev/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1781:dev/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1782:dev/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1783:dev/CMSIS/Include/core_cm7.h **** #endif
1784:dev/CMSIS/Include/core_cm7.h **** 
1785:dev/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1786:dev/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1787:dev/CMSIS/Include/core_cm7.h **** 
1788:dev/CMSIS/Include/core_cm7.h **** /*@} */
1789:dev/CMSIS/Include/core_cm7.h **** 
1790:dev/CMSIS/Include/core_cm7.h **** 
1791:dev/CMSIS/Include/core_cm7.h **** 
1792:dev/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1793:dev/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1794:dev/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1795:dev/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1796:dev/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1797:dev/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1798:dev/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1799:dev/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1800:dev/CMSIS/Include/core_cm7.h **** /**
1801:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1802:dev/CMSIS/Include/core_cm7.h **** */
1803:dev/CMSIS/Include/core_cm7.h **** 
1804:dev/CMSIS/Include/core_cm7.h **** 
1805:dev/CMSIS/Include/core_cm7.h **** 
1806:dev/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1807:dev/CMSIS/Include/core_cm7.h **** /**
1808:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1809:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 36


1810:dev/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1811:dev/CMSIS/Include/core_cm7.h ****   @{
1812:dev/CMSIS/Include/core_cm7.h ****  */
1813:dev/CMSIS/Include/core_cm7.h **** 
1814:dev/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1815:dev/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1816:dev/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1817:dev/CMSIS/Include/core_cm7.h ****   #endif
1818:dev/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1819:dev/CMSIS/Include/core_cm7.h **** #else
1820:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1821:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1822:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1823:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1824:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1825:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1826:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1827:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1828:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1829:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1830:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1831:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1832:dev/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1833:dev/CMSIS/Include/core_cm7.h **** 
1834:dev/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1835:dev/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1836:dev/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1837:dev/CMSIS/Include/core_cm7.h ****   #endif
1838:dev/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1839:dev/CMSIS/Include/core_cm7.h **** #else
1840:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1841:dev/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1842:dev/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1843:dev/CMSIS/Include/core_cm7.h **** 
1844:dev/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1845:dev/CMSIS/Include/core_cm7.h **** 
1846:dev/CMSIS/Include/core_cm7.h **** 
1847:dev/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1848:dev/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1849:dev/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1850:dev/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1851:dev/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1852:dev/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1853:dev/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1854:dev/CMSIS/Include/core_cm7.h **** 
1855:dev/CMSIS/Include/core_cm7.h **** 
1856:dev/CMSIS/Include/core_cm7.h **** /**
1857:dev/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1858:dev/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1859:dev/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1860:dev/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1861:dev/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1862:dev/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1863:dev/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1864:dev/CMSIS/Include/core_cm7.h ****  */
1865:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  39              		.loc 2 1865 22 view .LVU3
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 37


  40              	.LBB53:
1866:dev/CMSIS/Include/core_cm7.h **** {
1867:dev/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
  41              		.loc 2 1867 3 view .LVU4
1868:dev/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  42              		.loc 2 1868 3 view .LVU5
1869:dev/CMSIS/Include/core_cm7.h **** 
1870:dev/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  43              		.loc 2 1870 3 view .LVU6
  44              		.loc 2 1870 14 is_stmt 0 view .LVU7
  45 0000 0649     		ldr	r1, .L2
  46 0002 CB68     		ldr	r3, [r1, #12]
  47              	.LVL1:
1871:dev/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  48              		.loc 2 1871 3 is_stmt 1 view .LVU8
  49              		.loc 2 1871 13 is_stmt 0 view .LVU9
  50 0004 23F4E063 		bic	r3, r3, #1792
  51              	.LVL2:
  52              		.loc 2 1871 13 view .LVU10
  53 0008 1B04     		lsls	r3, r3, #16
  54 000a 1B0C     		lsrs	r3, r3, #16
  55              	.LVL3:
1872:dev/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
  56              		.loc 2 1872 3 is_stmt 1 view .LVU11
1873:dev/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1874:dev/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  57              		.loc 2 1874 35 is_stmt 0 view .LVU12
  58 000c 0002     		lsls	r0, r0, #8
  59              	.LVL4:
  60              		.loc 2 1874 35 view .LVU13
  61 000e 00F4E060 		and	r0, r0, #1792
1873:dev/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  62              		.loc 2 1873 62 view .LVU14
  63 0012 0343     		orrs	r3, r3, r0
  64              	.LVL5:
1872:dev/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
  65              		.loc 2 1872 14 view .LVU15
  66 0014 024A     		ldr	r2, .L2+4
  67 0016 1A43     		orrs	r2, r2, r3
  68              	.LVL6:
1875:dev/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
  69              		.loc 2 1875 3 is_stmt 1 view .LVU16
  70              		.loc 2 1875 14 is_stmt 0 view .LVU17
  71 0018 CA60     		str	r2, [r1, #12]
  72              	.LVL7:
  73              		.loc 2 1875 14 view .LVU18
  74              	.LBE53:
  75              	.LBE52:
 150:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
  76              		.loc 1 150 1 view .LVU19
  77 001a 7047     		bx	lr
  78              	.L3:
  79              		.align	2
  80              	.L2:
  81 001c 00ED00E0 		.word	-536810240
  82 0020 0000FA05 		.word	100270080
  83              		.cfi_endproc
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 38


  84              	.LFE141:
  86              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  87              		.align	1
  88              		.global	HAL_NVIC_SetPriority
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv5-d16
  94              	HAL_NVIC_SetPriority:
  95              	.LVL8:
  96              	.LFB142:
 151:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 152:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 153:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 154:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 155:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 156:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 157:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 158:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 159:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 160:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 161:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 162:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 163:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 164:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 165:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 166:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** { 
  97              		.loc 1 166 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              		.loc 1 166 1 is_stmt 0 view .LVU21
 103 0000 30B4     		push	{r4, r5}
 104              	.LCFI0:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 5, -4
 167:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 108              		.loc 1 167 3 is_stmt 1 view .LVU22
 109              	.LVL9:
 168:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 169:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 170:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 110              		.loc 1 170 3 view .LVU23
 171:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 111              		.loc 1 171 3 view .LVU24
 172:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 173:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 112              		.loc 1 173 3 view .LVU25
 113              	.LBB54:
 114              	.LBI54:
1876:dev/CMSIS/Include/core_cm7.h **** }
1877:dev/CMSIS/Include/core_cm7.h **** 
1878:dev/CMSIS/Include/core_cm7.h **** 
1879:dev/CMSIS/Include/core_cm7.h **** /**
1880:dev/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 39


1881:dev/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1882:dev/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1883:dev/CMSIS/Include/core_cm7.h ****  */
1884:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 115              		.loc 2 1884 26 view .LVU26
 116              	.LBB55:
1885:dev/CMSIS/Include/core_cm7.h **** {
1886:dev/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 117              		.loc 2 1886 3 view .LVU27
 118              		.loc 2 1886 26 is_stmt 0 view .LVU28
 119 0002 154B     		ldr	r3, .L10
 120 0004 DB68     		ldr	r3, [r3, #12]
 121              		.loc 2 1886 11 view .LVU29
 122 0006 C3F30223 		ubfx	r3, r3, #8, #3
 123              	.LVL10:
 124              		.loc 2 1886 11 view .LVU30
 125              	.LBE55:
 126              	.LBE54:
 174:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 175:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 127              		.loc 1 175 3 is_stmt 1 view .LVU31
 128              	.LBB56:
 129              	.LBI56:
1887:dev/CMSIS/Include/core_cm7.h **** }
1888:dev/CMSIS/Include/core_cm7.h **** 
1889:dev/CMSIS/Include/core_cm7.h **** 
1890:dev/CMSIS/Include/core_cm7.h **** /**
1891:dev/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1892:dev/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1893:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1894:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1895:dev/CMSIS/Include/core_cm7.h ****  */
1896:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1897:dev/CMSIS/Include/core_cm7.h **** {
1898:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1899:dev/CMSIS/Include/core_cm7.h ****   {
1900:dev/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1901:dev/CMSIS/Include/core_cm7.h ****   }
1902:dev/CMSIS/Include/core_cm7.h **** }
1903:dev/CMSIS/Include/core_cm7.h **** 
1904:dev/CMSIS/Include/core_cm7.h **** 
1905:dev/CMSIS/Include/core_cm7.h **** /**
1906:dev/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1907:dev/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1908:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1909:dev/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1910:dev/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1911:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1912:dev/CMSIS/Include/core_cm7.h ****  */
1913:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1914:dev/CMSIS/Include/core_cm7.h **** {
1915:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1916:dev/CMSIS/Include/core_cm7.h ****   {
1917:dev/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1918:dev/CMSIS/Include/core_cm7.h ****   }
1919:dev/CMSIS/Include/core_cm7.h ****   else
1920:dev/CMSIS/Include/core_cm7.h ****   {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 40


1921:dev/CMSIS/Include/core_cm7.h ****     return(0U);
1922:dev/CMSIS/Include/core_cm7.h ****   }
1923:dev/CMSIS/Include/core_cm7.h **** }
1924:dev/CMSIS/Include/core_cm7.h **** 
1925:dev/CMSIS/Include/core_cm7.h **** 
1926:dev/CMSIS/Include/core_cm7.h **** /**
1927:dev/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1928:dev/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1929:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1930:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1931:dev/CMSIS/Include/core_cm7.h ****  */
1932:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1933:dev/CMSIS/Include/core_cm7.h **** {
1934:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1935:dev/CMSIS/Include/core_cm7.h ****   {
1936:dev/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1937:dev/CMSIS/Include/core_cm7.h ****     __DSB();
1938:dev/CMSIS/Include/core_cm7.h ****     __ISB();
1939:dev/CMSIS/Include/core_cm7.h ****   }
1940:dev/CMSIS/Include/core_cm7.h **** }
1941:dev/CMSIS/Include/core_cm7.h **** 
1942:dev/CMSIS/Include/core_cm7.h **** 
1943:dev/CMSIS/Include/core_cm7.h **** /**
1944:dev/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1945:dev/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1946:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1947:dev/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1948:dev/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1949:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1950:dev/CMSIS/Include/core_cm7.h ****  */
1951:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1952:dev/CMSIS/Include/core_cm7.h **** {
1953:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1954:dev/CMSIS/Include/core_cm7.h ****   {
1955:dev/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1956:dev/CMSIS/Include/core_cm7.h ****   }
1957:dev/CMSIS/Include/core_cm7.h ****   else
1958:dev/CMSIS/Include/core_cm7.h ****   {
1959:dev/CMSIS/Include/core_cm7.h ****     return(0U);
1960:dev/CMSIS/Include/core_cm7.h ****   }
1961:dev/CMSIS/Include/core_cm7.h **** }
1962:dev/CMSIS/Include/core_cm7.h **** 
1963:dev/CMSIS/Include/core_cm7.h **** 
1964:dev/CMSIS/Include/core_cm7.h **** /**
1965:dev/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1966:dev/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1967:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1968:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1969:dev/CMSIS/Include/core_cm7.h ****  */
1970:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1971:dev/CMSIS/Include/core_cm7.h **** {
1972:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1973:dev/CMSIS/Include/core_cm7.h ****   {
1974:dev/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1975:dev/CMSIS/Include/core_cm7.h ****   }
1976:dev/CMSIS/Include/core_cm7.h **** }
1977:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 41


1978:dev/CMSIS/Include/core_cm7.h **** 
1979:dev/CMSIS/Include/core_cm7.h **** /**
1980:dev/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1981:dev/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1982:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1983:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1984:dev/CMSIS/Include/core_cm7.h ****  */
1985:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1986:dev/CMSIS/Include/core_cm7.h **** {
1987:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1988:dev/CMSIS/Include/core_cm7.h ****   {
1989:dev/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1990:dev/CMSIS/Include/core_cm7.h ****   }
1991:dev/CMSIS/Include/core_cm7.h **** }
1992:dev/CMSIS/Include/core_cm7.h **** 
1993:dev/CMSIS/Include/core_cm7.h **** 
1994:dev/CMSIS/Include/core_cm7.h **** /**
1995:dev/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1996:dev/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1997:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1998:dev/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1999:dev/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2000:dev/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2001:dev/CMSIS/Include/core_cm7.h ****  */
2002:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2003:dev/CMSIS/Include/core_cm7.h **** {
2004:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2005:dev/CMSIS/Include/core_cm7.h ****   {
2006:dev/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2007:dev/CMSIS/Include/core_cm7.h ****   }
2008:dev/CMSIS/Include/core_cm7.h ****   else
2009:dev/CMSIS/Include/core_cm7.h ****   {
2010:dev/CMSIS/Include/core_cm7.h ****     return(0U);
2011:dev/CMSIS/Include/core_cm7.h ****   }
2012:dev/CMSIS/Include/core_cm7.h **** }
2013:dev/CMSIS/Include/core_cm7.h **** 
2014:dev/CMSIS/Include/core_cm7.h **** 
2015:dev/CMSIS/Include/core_cm7.h **** /**
2016:dev/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2017:dev/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2018:dev/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2019:dev/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2020:dev/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2021:dev/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2022:dev/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2023:dev/CMSIS/Include/core_cm7.h ****  */
2024:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2025:dev/CMSIS/Include/core_cm7.h **** {
2026:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2027:dev/CMSIS/Include/core_cm7.h ****   {
2028:dev/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2029:dev/CMSIS/Include/core_cm7.h ****   }
2030:dev/CMSIS/Include/core_cm7.h ****   else
2031:dev/CMSIS/Include/core_cm7.h ****   {
2032:dev/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2033:dev/CMSIS/Include/core_cm7.h ****   }
2034:dev/CMSIS/Include/core_cm7.h **** }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 42


2035:dev/CMSIS/Include/core_cm7.h **** 
2036:dev/CMSIS/Include/core_cm7.h **** 
2037:dev/CMSIS/Include/core_cm7.h **** /**
2038:dev/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2039:dev/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2040:dev/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2041:dev/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2042:dev/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2043:dev/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2044:dev/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2045:dev/CMSIS/Include/core_cm7.h ****  */
2046:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2047:dev/CMSIS/Include/core_cm7.h **** {
2048:dev/CMSIS/Include/core_cm7.h **** 
2049:dev/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2050:dev/CMSIS/Include/core_cm7.h ****   {
2051:dev/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2052:dev/CMSIS/Include/core_cm7.h ****   }
2053:dev/CMSIS/Include/core_cm7.h ****   else
2054:dev/CMSIS/Include/core_cm7.h ****   {
2055:dev/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2056:dev/CMSIS/Include/core_cm7.h ****   }
2057:dev/CMSIS/Include/core_cm7.h **** }
2058:dev/CMSIS/Include/core_cm7.h **** 
2059:dev/CMSIS/Include/core_cm7.h **** 
2060:dev/CMSIS/Include/core_cm7.h **** /**
2061:dev/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2062:dev/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2063:dev/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2064:dev/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2065:dev/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2066:dev/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2067:dev/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2068:dev/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2069:dev/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2070:dev/CMSIS/Include/core_cm7.h ****  */
2071:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 130              		.loc 2 2071 26 view .LVU32
 131              	.LBB57:
2072:dev/CMSIS/Include/core_cm7.h **** {
2073:dev/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 132              		.loc 2 2073 3 view .LVU33
2074:dev/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
 133              		.loc 2 2074 3 view .LVU34
2075:dev/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
 134              		.loc 2 2075 3 view .LVU35
2076:dev/CMSIS/Include/core_cm7.h **** 
2077:dev/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 135              		.loc 2 2077 3 view .LVU36
 136              		.loc 2 2077 31 is_stmt 0 view .LVU37
 137 000a C3F10704 		rsb	r4, r3, #7
 138              		.loc 2 2077 23 view .LVU38
 139 000e 042C     		cmp	r4, #4
 140 0010 28BF     		it	cs
 141 0012 0424     		movcs	r4, #4
 142              	.LVL11:
2078:dev/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 43


 143              		.loc 2 2078 3 is_stmt 1 view .LVU39
 144              		.loc 2 2078 44 is_stmt 0 view .LVU40
 145 0014 1D1D     		adds	r5, r3, #4
 146              		.loc 2 2078 109 view .LVU41
 147 0016 062D     		cmp	r5, #6
 148 0018 14D9     		bls	.L8
 149 001a 033B     		subs	r3, r3, #3
 150              	.LVL12:
 151              	.L5:
2079:dev/CMSIS/Include/core_cm7.h **** 
2080:dev/CMSIS/Include/core_cm7.h ****   return (
 152              		.loc 2 2080 3 is_stmt 1 view .LVU42
2081:dev/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 153              		.loc 2 2081 30 is_stmt 0 view .LVU43
 154 001c 4FF0FF35 		mov	r5, #-1
 155              	.LVL13:
 156              		.loc 2 2081 30 view .LVU44
 157 0020 05FA04F4 		lsl	r4, r5, r4
 158              	.LVL14:
 159              		.loc 2 2081 30 view .LVU45
 160 0024 21EA0401 		bic	r1, r1, r4
 161              	.LVL15:
 162              		.loc 2 2081 82 view .LVU46
 163 0028 9940     		lsls	r1, r1, r3
2082:dev/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 164              		.loc 2 2082 30 view .LVU47
 165 002a 05FA03F3 		lsl	r3, r5, r3
 166              	.LVL16:
 167              		.loc 2 2082 30 view .LVU48
 168 002e 22EA0303 		bic	r3, r2, r3
2081:dev/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 169              		.loc 2 2081 102 view .LVU49
 170 0032 1943     		orrs	r1, r1, r3
 171              	.LVL17:
2081:dev/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 172              		.loc 2 2081 102 view .LVU50
 173              	.LBE57:
 174              	.LBE56:
 175              	.LBB59:
 176              	.LBI59:
2024:dev/CMSIS/Include/core_cm7.h **** {
 177              		.loc 2 2024 22 is_stmt 1 view .LVU51
 178              	.LBB60:
2026:dev/CMSIS/Include/core_cm7.h ****   {
 179              		.loc 2 2026 3 view .LVU52
2026:dev/CMSIS/Include/core_cm7.h ****   {
 180              		.loc 2 2026 6 is_stmt 0 view .LVU53
 181 0034 0028     		cmp	r0, #0
 182 0036 07DB     		blt	.L6
2028:dev/CMSIS/Include/core_cm7.h ****   }
 183              		.loc 2 2028 5 is_stmt 1 view .LVU54
2028:dev/CMSIS/Include/core_cm7.h ****   }
 184              		.loc 2 2028 49 is_stmt 0 view .LVU55
 185 0038 0901     		lsls	r1, r1, #4
 186              	.LVL18:
2028:dev/CMSIS/Include/core_cm7.h ****   }
 187              		.loc 2 2028 49 view .LVU56
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 44


 188 003a C9B2     		uxtb	r1, r1
2028:dev/CMSIS/Include/core_cm7.h ****   }
 189              		.loc 2 2028 47 view .LVU57
 190 003c 074B     		ldr	r3, .L10+4
 191 003e 1954     		strb	r1, [r3, r0]
 192              	.LVL19:
 193              	.L4:
2028:dev/CMSIS/Include/core_cm7.h ****   }
 194              		.loc 2 2028 47 view .LVU58
 195              	.LBE60:
 196              	.LBE59:
 176:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 197              		.loc 1 176 1 view .LVU59
 198 0040 30BC     		pop	{r4, r5}
 199              	.LCFI1:
 200              		.cfi_remember_state
 201              		.cfi_restore 5
 202              		.cfi_restore 4
 203              		.cfi_def_cfa_offset 0
 204 0042 7047     		bx	lr
 205              	.LVL20:
 206              	.L8:
 207              	.LCFI2:
 208              		.cfi_restore_state
 209              	.LBB62:
 210              	.LBB58:
2078:dev/CMSIS/Include/core_cm7.h **** 
 211              		.loc 2 2078 109 view .LVU60
 212 0044 0023     		movs	r3, #0
 213              	.LVL21:
2078:dev/CMSIS/Include/core_cm7.h **** 
 214              		.loc 2 2078 109 view .LVU61
 215 0046 E9E7     		b	.L5
 216              	.LVL22:
 217              	.L6:
2078:dev/CMSIS/Include/core_cm7.h **** 
 218              		.loc 2 2078 109 view .LVU62
 219              	.LBE58:
 220              	.LBE62:
 221              	.LBB63:
 222              	.LBB61:
2032:dev/CMSIS/Include/core_cm7.h ****   }
 223              		.loc 2 2032 5 is_stmt 1 view .LVU63
2032:dev/CMSIS/Include/core_cm7.h ****   }
 224              		.loc 2 2032 33 is_stmt 0 view .LVU64
 225 0048 00F00F00 		and	r0, r0, #15
 226              	.LVL23:
2032:dev/CMSIS/Include/core_cm7.h ****   }
 227              		.loc 2 2032 49 view .LVU65
 228 004c 0901     		lsls	r1, r1, #4
 229              	.LVL24:
2032:dev/CMSIS/Include/core_cm7.h ****   }
 230              		.loc 2 2032 49 view .LVU66
 231 004e C9B2     		uxtb	r1, r1
2032:dev/CMSIS/Include/core_cm7.h ****   }
 232              		.loc 2 2032 47 view .LVU67
 233 0050 034B     		ldr	r3, .L10+8
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 45


 234 0052 1954     		strb	r1, [r3, r0]
 235              	.LVL25:
2032:dev/CMSIS/Include/core_cm7.h ****   }
 236              		.loc 2 2032 47 view .LVU68
 237              	.LBE61:
 238              	.LBE63:
 239              		.loc 1 176 1 view .LVU69
 240 0054 F4E7     		b	.L4
 241              	.L11:
 242 0056 00BF     		.align	2
 243              	.L10:
 244 0058 00ED00E0 		.word	-536810240
 245 005c 00E400E0 		.word	-536812544
 246 0060 14ED00E0 		.word	-536810220
 247              		.cfi_endproc
 248              	.LFE142:
 250              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 251              		.align	1
 252              		.global	HAL_NVIC_EnableIRQ
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv5-d16
 258              	HAL_NVIC_EnableIRQ:
 259              	.LVL26:
 260              	.LFB143:
 177:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 178:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 179:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 180:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 181:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         function should be called before. 
 182:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 183:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 184:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 185:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 186:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 187:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 188:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 261              		.loc 1 188 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 189:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 190:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 266              		.loc 1 190 3 view .LVU71
 191:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 192:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable interrupt */
 193:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 267              		.loc 1 193 3 view .LVU72
 268              	.LBB64:
 269              	.LBI64:
1896:dev/CMSIS/Include/core_cm7.h **** {
 270              		.loc 2 1896 22 view .LVU73
 271              	.LBB65:
1898:dev/CMSIS/Include/core_cm7.h ****   {
 272              		.loc 2 1898 3 view .LVU74
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 46


1898:dev/CMSIS/Include/core_cm7.h ****   {
 273              		.loc 2 1898 6 is_stmt 0 view .LVU75
 274 0000 0028     		cmp	r0, #0
 275              	.LVL27:
1898:dev/CMSIS/Include/core_cm7.h ****   {
 276              		.loc 2 1898 6 view .LVU76
 277 0002 07DB     		blt	.L12
1900:dev/CMSIS/Include/core_cm7.h ****   }
 278              		.loc 2 1900 5 is_stmt 1 view .LVU77
1900:dev/CMSIS/Include/core_cm7.h ****   }
 279              		.loc 2 1900 81 is_stmt 0 view .LVU78
 280 0004 00F01F02 		and	r2, r0, #31
1900:dev/CMSIS/Include/core_cm7.h ****   }
 281              		.loc 2 1900 34 view .LVU79
 282 0008 4009     		lsrs	r0, r0, #5
1900:dev/CMSIS/Include/core_cm7.h ****   }
 283              		.loc 2 1900 45 view .LVU80
 284 000a 0123     		movs	r3, #1
 285 000c 9340     		lsls	r3, r3, r2
1900:dev/CMSIS/Include/core_cm7.h ****   }
 286              		.loc 2 1900 43 view .LVU81
 287 000e 024A     		ldr	r2, .L14
 288 0010 42F82030 		str	r3, [r2, r0, lsl #2]
 289              	.LVL28:
 290              	.L12:
1900:dev/CMSIS/Include/core_cm7.h ****   }
 291              		.loc 2 1900 43 view .LVU82
 292              	.LBE65:
 293              	.LBE64:
 194:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 294              		.loc 1 194 1 view .LVU83
 295 0014 7047     		bx	lr
 296              	.L15:
 297 0016 00BF     		.align	2
 298              	.L14:
 299 0018 00E100E0 		.word	-536813312
 300              		.cfi_endproc
 301              	.LFE143:
 303              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 304              		.align	1
 305              		.global	HAL_NVIC_DisableIRQ
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	HAL_NVIC_DisableIRQ:
 312              	.LVL29:
 313              	.LFB144:
 195:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 196:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 197:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 198:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 199:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 200:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 201:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 202:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 203:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 47


 204:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 314              		.loc 1 204 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 205:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 206:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 319              		.loc 1 206 3 view .LVU85
 207:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 208:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable interrupt */
 209:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 320              		.loc 1 209 3 view .LVU86
 321              	.LBB66:
 322              	.LBI66:
1932:dev/CMSIS/Include/core_cm7.h **** {
 323              		.loc 2 1932 22 view .LVU87
 324              	.LBB67:
1934:dev/CMSIS/Include/core_cm7.h ****   {
 325              		.loc 2 1934 3 view .LVU88
1934:dev/CMSIS/Include/core_cm7.h ****   {
 326              		.loc 2 1934 6 is_stmt 0 view .LVU89
 327 0000 0028     		cmp	r0, #0
 328              	.LVL30:
1934:dev/CMSIS/Include/core_cm7.h ****   {
 329              		.loc 2 1934 6 view .LVU90
 330 0002 0CDB     		blt	.L16
1936:dev/CMSIS/Include/core_cm7.h ****     __DSB();
 331              		.loc 2 1936 5 is_stmt 1 view .LVU91
1936:dev/CMSIS/Include/core_cm7.h ****     __DSB();
 332              		.loc 2 1936 81 is_stmt 0 view .LVU92
 333 0004 00F01F02 		and	r2, r0, #31
1936:dev/CMSIS/Include/core_cm7.h ****     __DSB();
 334              		.loc 2 1936 34 view .LVU93
 335 0008 4009     		lsrs	r0, r0, #5
1936:dev/CMSIS/Include/core_cm7.h ****     __DSB();
 336              		.loc 2 1936 45 view .LVU94
 337 000a 0123     		movs	r3, #1
 338 000c 9340     		lsls	r3, r3, r2
1936:dev/CMSIS/Include/core_cm7.h ****     __DSB();
 339              		.loc 2 1936 43 view .LVU95
 340 000e 2030     		adds	r0, r0, #32
 341 0010 034A     		ldr	r2, .L18
 342 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1937:dev/CMSIS/Include/core_cm7.h ****     __ISB();
 343              		.loc 2 1937 5 is_stmt 1 view .LVU96
 344              	.LBB68:
 345              	.LBI68:
 346              		.file 3 "dev/CMSIS/Include/cmsis_gcc.h"
   1:dev/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:dev/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:dev/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:dev/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:dev/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:dev/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:dev/CMSIS/Include/cmsis_gcc.h **** /*
   8:dev/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 48


   9:dev/CMSIS/Include/cmsis_gcc.h ****  *
  10:dev/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:dev/CMSIS/Include/cmsis_gcc.h ****  *
  12:dev/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:dev/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:dev/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:dev/CMSIS/Include/cmsis_gcc.h ****  *
  16:dev/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:dev/CMSIS/Include/cmsis_gcc.h ****  *
  18:dev/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:dev/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:dev/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:dev/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:dev/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:dev/CMSIS/Include/cmsis_gcc.h ****  */
  24:dev/CMSIS/Include/cmsis_gcc.h **** 
  25:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:dev/CMSIS/Include/cmsis_gcc.h **** 
  28:dev/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:dev/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:dev/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:dev/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:dev/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:dev/CMSIS/Include/cmsis_gcc.h **** 
  34:dev/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:dev/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  38:dev/CMSIS/Include/cmsis_gcc.h **** 
  39:dev/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:dev/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  43:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:dev/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  46:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:dev/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  49:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:dev/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:dev/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:dev/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  55:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:dev/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  58:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:dev/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  61:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:dev/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  64:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:dev/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 49


  66:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  67:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:dev/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  70:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:dev/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:dev/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  78:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:dev/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:dev/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  86:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:dev/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:dev/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:dev/CMSIS/Include/cmsis_gcc.h **** #endif
  94:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:dev/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:dev/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 102:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:dev/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:dev/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:dev/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 110:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:dev/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 113:dev/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:dev/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 116:dev/CMSIS/Include/cmsis_gcc.h **** 
 117:dev/CMSIS/Include/cmsis_gcc.h **** 
 118:dev/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:dev/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:dev/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:dev/CMSIS/Include/cmsis_gcc.h ****   @{
 122:dev/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 50


 123:dev/CMSIS/Include/cmsis_gcc.h **** 
 124:dev/CMSIS/Include/cmsis_gcc.h **** /**
 125:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:dev/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:dev/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:dev/CMSIS/Include/cmsis_gcc.h ****  */
 129:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:dev/CMSIS/Include/cmsis_gcc.h **** {
 131:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:dev/CMSIS/Include/cmsis_gcc.h **** }
 133:dev/CMSIS/Include/cmsis_gcc.h **** 
 134:dev/CMSIS/Include/cmsis_gcc.h **** 
 135:dev/CMSIS/Include/cmsis_gcc.h **** /**
 136:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:dev/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:dev/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:dev/CMSIS/Include/cmsis_gcc.h ****  */
 140:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:dev/CMSIS/Include/cmsis_gcc.h **** {
 142:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:dev/CMSIS/Include/cmsis_gcc.h **** }
 144:dev/CMSIS/Include/cmsis_gcc.h **** 
 145:dev/CMSIS/Include/cmsis_gcc.h **** 
 146:dev/CMSIS/Include/cmsis_gcc.h **** /**
 147:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:dev/CMSIS/Include/cmsis_gcc.h ****  */
 151:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:dev/CMSIS/Include/cmsis_gcc.h **** {
 153:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:dev/CMSIS/Include/cmsis_gcc.h **** 
 155:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:dev/CMSIS/Include/cmsis_gcc.h **** }
 158:dev/CMSIS/Include/cmsis_gcc.h **** 
 159:dev/CMSIS/Include/cmsis_gcc.h **** 
 160:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:dev/CMSIS/Include/cmsis_gcc.h **** /**
 162:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:dev/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:dev/CMSIS/Include/cmsis_gcc.h ****  */
 166:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:dev/CMSIS/Include/cmsis_gcc.h **** {
 168:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:dev/CMSIS/Include/cmsis_gcc.h **** 
 170:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:dev/CMSIS/Include/cmsis_gcc.h **** }
 173:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 174:dev/CMSIS/Include/cmsis_gcc.h **** 
 175:dev/CMSIS/Include/cmsis_gcc.h **** 
 176:dev/CMSIS/Include/cmsis_gcc.h **** /**
 177:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:dev/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 51


 180:dev/CMSIS/Include/cmsis_gcc.h ****  */
 181:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:dev/CMSIS/Include/cmsis_gcc.h **** {
 183:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:dev/CMSIS/Include/cmsis_gcc.h **** }
 185:dev/CMSIS/Include/cmsis_gcc.h **** 
 186:dev/CMSIS/Include/cmsis_gcc.h **** 
 187:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:dev/CMSIS/Include/cmsis_gcc.h **** /**
 189:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:dev/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:dev/CMSIS/Include/cmsis_gcc.h ****  */
 193:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:dev/CMSIS/Include/cmsis_gcc.h **** {
 195:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:dev/CMSIS/Include/cmsis_gcc.h **** }
 197:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 198:dev/CMSIS/Include/cmsis_gcc.h **** 
 199:dev/CMSIS/Include/cmsis_gcc.h **** 
 200:dev/CMSIS/Include/cmsis_gcc.h **** /**
 201:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:dev/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:dev/CMSIS/Include/cmsis_gcc.h ****  */
 205:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:dev/CMSIS/Include/cmsis_gcc.h **** {
 207:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:dev/CMSIS/Include/cmsis_gcc.h **** 
 209:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:dev/CMSIS/Include/cmsis_gcc.h **** }
 212:dev/CMSIS/Include/cmsis_gcc.h **** 
 213:dev/CMSIS/Include/cmsis_gcc.h **** 
 214:dev/CMSIS/Include/cmsis_gcc.h **** /**
 215:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:dev/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:dev/CMSIS/Include/cmsis_gcc.h ****  */
 219:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:dev/CMSIS/Include/cmsis_gcc.h **** {
 221:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:dev/CMSIS/Include/cmsis_gcc.h **** 
 223:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:dev/CMSIS/Include/cmsis_gcc.h **** }
 226:dev/CMSIS/Include/cmsis_gcc.h **** 
 227:dev/CMSIS/Include/cmsis_gcc.h **** 
 228:dev/CMSIS/Include/cmsis_gcc.h **** /**
 229:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:dev/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:dev/CMSIS/Include/cmsis_gcc.h ****  */
 233:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:dev/CMSIS/Include/cmsis_gcc.h **** {
 235:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:dev/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 52


 237:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:dev/CMSIS/Include/cmsis_gcc.h **** }
 240:dev/CMSIS/Include/cmsis_gcc.h **** 
 241:dev/CMSIS/Include/cmsis_gcc.h **** 
 242:dev/CMSIS/Include/cmsis_gcc.h **** /**
 243:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:dev/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:dev/CMSIS/Include/cmsis_gcc.h ****  */
 247:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:dev/CMSIS/Include/cmsis_gcc.h **** {
 249:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:dev/CMSIS/Include/cmsis_gcc.h **** 
 251:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:dev/CMSIS/Include/cmsis_gcc.h **** }
 254:dev/CMSIS/Include/cmsis_gcc.h **** 
 255:dev/CMSIS/Include/cmsis_gcc.h **** 
 256:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:dev/CMSIS/Include/cmsis_gcc.h **** /**
 258:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:dev/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:dev/CMSIS/Include/cmsis_gcc.h ****  */
 262:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:dev/CMSIS/Include/cmsis_gcc.h **** {
 264:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:dev/CMSIS/Include/cmsis_gcc.h **** 
 266:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:dev/CMSIS/Include/cmsis_gcc.h **** }
 269:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 270:dev/CMSIS/Include/cmsis_gcc.h **** 
 271:dev/CMSIS/Include/cmsis_gcc.h **** 
 272:dev/CMSIS/Include/cmsis_gcc.h **** /**
 273:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:dev/CMSIS/Include/cmsis_gcc.h ****  */
 277:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:dev/CMSIS/Include/cmsis_gcc.h **** {
 279:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:dev/CMSIS/Include/cmsis_gcc.h **** }
 281:dev/CMSIS/Include/cmsis_gcc.h **** 
 282:dev/CMSIS/Include/cmsis_gcc.h **** 
 283:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:dev/CMSIS/Include/cmsis_gcc.h **** /**
 285:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:dev/CMSIS/Include/cmsis_gcc.h ****  */
 289:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:dev/CMSIS/Include/cmsis_gcc.h **** {
 291:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:dev/CMSIS/Include/cmsis_gcc.h **** }
 293:dev/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 53


 294:dev/CMSIS/Include/cmsis_gcc.h **** 
 295:dev/CMSIS/Include/cmsis_gcc.h **** 
 296:dev/CMSIS/Include/cmsis_gcc.h **** /**
 297:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:dev/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:dev/CMSIS/Include/cmsis_gcc.h ****  */
 301:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:dev/CMSIS/Include/cmsis_gcc.h **** {
 303:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:dev/CMSIS/Include/cmsis_gcc.h **** 
 305:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:dev/CMSIS/Include/cmsis_gcc.h **** }
 308:dev/CMSIS/Include/cmsis_gcc.h **** 
 309:dev/CMSIS/Include/cmsis_gcc.h **** 
 310:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:dev/CMSIS/Include/cmsis_gcc.h **** /**
 312:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:dev/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:dev/CMSIS/Include/cmsis_gcc.h ****  */
 316:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:dev/CMSIS/Include/cmsis_gcc.h **** {
 318:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:dev/CMSIS/Include/cmsis_gcc.h **** 
 320:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:dev/CMSIS/Include/cmsis_gcc.h **** }
 323:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 324:dev/CMSIS/Include/cmsis_gcc.h **** 
 325:dev/CMSIS/Include/cmsis_gcc.h **** 
 326:dev/CMSIS/Include/cmsis_gcc.h **** /**
 327:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:dev/CMSIS/Include/cmsis_gcc.h ****  */
 331:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:dev/CMSIS/Include/cmsis_gcc.h **** {
 333:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:dev/CMSIS/Include/cmsis_gcc.h **** }
 335:dev/CMSIS/Include/cmsis_gcc.h **** 
 336:dev/CMSIS/Include/cmsis_gcc.h **** 
 337:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:dev/CMSIS/Include/cmsis_gcc.h **** /**
 339:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:dev/CMSIS/Include/cmsis_gcc.h ****  */
 343:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:dev/CMSIS/Include/cmsis_gcc.h **** {
 345:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:dev/CMSIS/Include/cmsis_gcc.h **** }
 347:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 348:dev/CMSIS/Include/cmsis_gcc.h **** 
 349:dev/CMSIS/Include/cmsis_gcc.h **** 
 350:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 54


 351:dev/CMSIS/Include/cmsis_gcc.h **** /**
 352:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:dev/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:dev/CMSIS/Include/cmsis_gcc.h ****  */
 356:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:dev/CMSIS/Include/cmsis_gcc.h **** {
 358:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:dev/CMSIS/Include/cmsis_gcc.h **** 
 360:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:dev/CMSIS/Include/cmsis_gcc.h **** }
 363:dev/CMSIS/Include/cmsis_gcc.h **** 
 364:dev/CMSIS/Include/cmsis_gcc.h **** 
 365:dev/CMSIS/Include/cmsis_gcc.h **** /**
 366:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:dev/CMSIS/Include/cmsis_gcc.h ****  */
 370:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:dev/CMSIS/Include/cmsis_gcc.h **** {
 372:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:dev/CMSIS/Include/cmsis_gcc.h **** }
 374:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 375:dev/CMSIS/Include/cmsis_gcc.h **** 
 376:dev/CMSIS/Include/cmsis_gcc.h **** 
 377:dev/CMSIS/Include/cmsis_gcc.h **** /**
 378:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:dev/CMSIS/Include/cmsis_gcc.h ****  */
 382:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:dev/CMSIS/Include/cmsis_gcc.h **** {
 384:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:dev/CMSIS/Include/cmsis_gcc.h **** 
 386:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:dev/CMSIS/Include/cmsis_gcc.h **** }
 389:dev/CMSIS/Include/cmsis_gcc.h **** 
 390:dev/CMSIS/Include/cmsis_gcc.h **** 
 391:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:dev/CMSIS/Include/cmsis_gcc.h **** /**
 393:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:dev/CMSIS/Include/cmsis_gcc.h ****  */
 397:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:dev/CMSIS/Include/cmsis_gcc.h **** {
 399:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:dev/CMSIS/Include/cmsis_gcc.h **** 
 401:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:dev/CMSIS/Include/cmsis_gcc.h **** }
 404:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 405:dev/CMSIS/Include/cmsis_gcc.h **** 
 406:dev/CMSIS/Include/cmsis_gcc.h **** 
 407:dev/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 55


 408:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:dev/CMSIS/Include/cmsis_gcc.h ****  */
 412:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:dev/CMSIS/Include/cmsis_gcc.h **** {
 414:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:dev/CMSIS/Include/cmsis_gcc.h **** }
 416:dev/CMSIS/Include/cmsis_gcc.h **** 
 417:dev/CMSIS/Include/cmsis_gcc.h **** 
 418:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:dev/CMSIS/Include/cmsis_gcc.h **** /**
 420:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:dev/CMSIS/Include/cmsis_gcc.h ****  */
 424:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:dev/CMSIS/Include/cmsis_gcc.h **** {
 426:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:dev/CMSIS/Include/cmsis_gcc.h **** }
 428:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 429:dev/CMSIS/Include/cmsis_gcc.h **** 
 430:dev/CMSIS/Include/cmsis_gcc.h **** 
 431:dev/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:dev/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:dev/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:dev/CMSIS/Include/cmsis_gcc.h **** /**
 435:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:dev/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:dev/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:dev/CMSIS/Include/cmsis_gcc.h ****  */
 439:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:dev/CMSIS/Include/cmsis_gcc.h **** {
 441:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:dev/CMSIS/Include/cmsis_gcc.h **** }
 443:dev/CMSIS/Include/cmsis_gcc.h **** 
 444:dev/CMSIS/Include/cmsis_gcc.h **** 
 445:dev/CMSIS/Include/cmsis_gcc.h **** /**
 446:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:dev/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:dev/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:dev/CMSIS/Include/cmsis_gcc.h ****  */
 450:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:dev/CMSIS/Include/cmsis_gcc.h **** {
 452:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:dev/CMSIS/Include/cmsis_gcc.h **** }
 454:dev/CMSIS/Include/cmsis_gcc.h **** 
 455:dev/CMSIS/Include/cmsis_gcc.h **** 
 456:dev/CMSIS/Include/cmsis_gcc.h **** /**
 457:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:dev/CMSIS/Include/cmsis_gcc.h ****  */
 461:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:dev/CMSIS/Include/cmsis_gcc.h **** {
 463:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:dev/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 56


 465:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:dev/CMSIS/Include/cmsis_gcc.h **** }
 468:dev/CMSIS/Include/cmsis_gcc.h **** 
 469:dev/CMSIS/Include/cmsis_gcc.h **** 
 470:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:dev/CMSIS/Include/cmsis_gcc.h **** /**
 472:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:dev/CMSIS/Include/cmsis_gcc.h ****  */
 476:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:dev/CMSIS/Include/cmsis_gcc.h **** {
 478:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:dev/CMSIS/Include/cmsis_gcc.h **** 
 480:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:dev/CMSIS/Include/cmsis_gcc.h **** }
 483:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 484:dev/CMSIS/Include/cmsis_gcc.h **** 
 485:dev/CMSIS/Include/cmsis_gcc.h **** 
 486:dev/CMSIS/Include/cmsis_gcc.h **** /**
 487:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:dev/CMSIS/Include/cmsis_gcc.h ****  */
 491:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:dev/CMSIS/Include/cmsis_gcc.h **** {
 493:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:dev/CMSIS/Include/cmsis_gcc.h **** }
 495:dev/CMSIS/Include/cmsis_gcc.h **** 
 496:dev/CMSIS/Include/cmsis_gcc.h **** 
 497:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:dev/CMSIS/Include/cmsis_gcc.h **** /**
 499:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:dev/CMSIS/Include/cmsis_gcc.h ****  */
 503:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:dev/CMSIS/Include/cmsis_gcc.h **** {
 505:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:dev/CMSIS/Include/cmsis_gcc.h **** }
 507:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 508:dev/CMSIS/Include/cmsis_gcc.h **** 
 509:dev/CMSIS/Include/cmsis_gcc.h **** 
 510:dev/CMSIS/Include/cmsis_gcc.h **** /**
 511:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:dev/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:dev/CMSIS/Include/cmsis_gcc.h ****  */
 516:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:dev/CMSIS/Include/cmsis_gcc.h **** {
 518:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:dev/CMSIS/Include/cmsis_gcc.h **** }
 520:dev/CMSIS/Include/cmsis_gcc.h **** 
 521:dev/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 57


 522:dev/CMSIS/Include/cmsis_gcc.h **** /**
 523:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:dev/CMSIS/Include/cmsis_gcc.h ****  */
 527:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:dev/CMSIS/Include/cmsis_gcc.h **** {
 529:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:dev/CMSIS/Include/cmsis_gcc.h **** 
 531:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:dev/CMSIS/Include/cmsis_gcc.h **** }
 534:dev/CMSIS/Include/cmsis_gcc.h **** 
 535:dev/CMSIS/Include/cmsis_gcc.h **** 
 536:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:dev/CMSIS/Include/cmsis_gcc.h **** /**
 538:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:dev/CMSIS/Include/cmsis_gcc.h ****  */
 542:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:dev/CMSIS/Include/cmsis_gcc.h **** {
 544:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:dev/CMSIS/Include/cmsis_gcc.h **** 
 546:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:dev/CMSIS/Include/cmsis_gcc.h **** }
 549:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 550:dev/CMSIS/Include/cmsis_gcc.h **** 
 551:dev/CMSIS/Include/cmsis_gcc.h **** 
 552:dev/CMSIS/Include/cmsis_gcc.h **** /**
 553:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:dev/CMSIS/Include/cmsis_gcc.h ****  */
 557:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:dev/CMSIS/Include/cmsis_gcc.h **** {
 559:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:dev/CMSIS/Include/cmsis_gcc.h **** }
 561:dev/CMSIS/Include/cmsis_gcc.h **** 
 562:dev/CMSIS/Include/cmsis_gcc.h **** 
 563:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:dev/CMSIS/Include/cmsis_gcc.h **** /**
 565:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:dev/CMSIS/Include/cmsis_gcc.h ****  */
 569:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:dev/CMSIS/Include/cmsis_gcc.h **** {
 571:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:dev/CMSIS/Include/cmsis_gcc.h **** }
 573:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 574:dev/CMSIS/Include/cmsis_gcc.h **** 
 575:dev/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:dev/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:dev/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:dev/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 58


 579:dev/CMSIS/Include/cmsis_gcc.h **** 
 580:dev/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:dev/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:dev/CMSIS/Include/cmsis_gcc.h **** 
 583:dev/CMSIS/Include/cmsis_gcc.h **** /**
 584:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:dev/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:dev/CMSIS/Include/cmsis_gcc.h ****   
 589:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:dev/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:dev/CMSIS/Include/cmsis_gcc.h ****  */
 592:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:dev/CMSIS/Include/cmsis_gcc.h **** {
 594:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:dev/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:dev/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:dev/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:dev/CMSIS/Include/cmsis_gcc.h **** #else
 599:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:dev/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 603:dev/CMSIS/Include/cmsis_gcc.h **** }
 604:dev/CMSIS/Include/cmsis_gcc.h **** 
 605:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:dev/CMSIS/Include/cmsis_gcc.h **** /**
 607:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:dev/CMSIS/Include/cmsis_gcc.h **** 
 611:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:dev/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:dev/CMSIS/Include/cmsis_gcc.h ****  */
 614:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:dev/CMSIS/Include/cmsis_gcc.h **** {
 616:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:dev/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:dev/CMSIS/Include/cmsis_gcc.h **** #else
 620:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:dev/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 624:dev/CMSIS/Include/cmsis_gcc.h **** }
 625:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 626:dev/CMSIS/Include/cmsis_gcc.h **** 
 627:dev/CMSIS/Include/cmsis_gcc.h **** 
 628:dev/CMSIS/Include/cmsis_gcc.h **** /**
 629:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:dev/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:dev/CMSIS/Include/cmsis_gcc.h ****   
 634:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 59


 636:dev/CMSIS/Include/cmsis_gcc.h ****  */
 637:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:dev/CMSIS/Include/cmsis_gcc.h **** {
 639:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:dev/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:dev/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:dev/CMSIS/Include/cmsis_gcc.h **** #else
 644:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 646:dev/CMSIS/Include/cmsis_gcc.h **** }
 647:dev/CMSIS/Include/cmsis_gcc.h **** 
 648:dev/CMSIS/Include/cmsis_gcc.h **** 
 649:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:dev/CMSIS/Include/cmsis_gcc.h **** /**
 651:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:dev/CMSIS/Include/cmsis_gcc.h **** 
 655:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:dev/CMSIS/Include/cmsis_gcc.h ****  */
 658:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:dev/CMSIS/Include/cmsis_gcc.h **** {
 660:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:dev/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:dev/CMSIS/Include/cmsis_gcc.h **** #else
 664:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 666:dev/CMSIS/Include/cmsis_gcc.h **** }
 667:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 668:dev/CMSIS/Include/cmsis_gcc.h **** 
 669:dev/CMSIS/Include/cmsis_gcc.h **** 
 670:dev/CMSIS/Include/cmsis_gcc.h **** /**
 671:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:dev/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:dev/CMSIS/Include/cmsis_gcc.h **** 
 676:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:dev/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:dev/CMSIS/Include/cmsis_gcc.h ****  */
 679:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:dev/CMSIS/Include/cmsis_gcc.h **** {
 681:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:dev/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:dev/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:dev/CMSIS/Include/cmsis_gcc.h **** #else
 686:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:dev/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 690:dev/CMSIS/Include/cmsis_gcc.h **** }
 691:dev/CMSIS/Include/cmsis_gcc.h **** 
 692:dev/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 60


 693:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:dev/CMSIS/Include/cmsis_gcc.h **** /**
 695:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:dev/CMSIS/Include/cmsis_gcc.h **** 
 699:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:dev/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:dev/CMSIS/Include/cmsis_gcc.h ****  */
 702:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:dev/CMSIS/Include/cmsis_gcc.h **** {
 704:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:dev/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:dev/CMSIS/Include/cmsis_gcc.h **** #else
 708:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:dev/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 712:dev/CMSIS/Include/cmsis_gcc.h **** }
 713:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 714:dev/CMSIS/Include/cmsis_gcc.h **** 
 715:dev/CMSIS/Include/cmsis_gcc.h **** 
 716:dev/CMSIS/Include/cmsis_gcc.h **** /**
 717:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:dev/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:dev/CMSIS/Include/cmsis_gcc.h **** 
 722:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:dev/CMSIS/Include/cmsis_gcc.h ****  */
 725:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:dev/CMSIS/Include/cmsis_gcc.h **** {
 727:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:dev/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:dev/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:dev/CMSIS/Include/cmsis_gcc.h **** #else
 732:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 734:dev/CMSIS/Include/cmsis_gcc.h **** }
 735:dev/CMSIS/Include/cmsis_gcc.h **** 
 736:dev/CMSIS/Include/cmsis_gcc.h **** 
 737:dev/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:dev/CMSIS/Include/cmsis_gcc.h **** /**
 739:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:dev/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:dev/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:dev/CMSIS/Include/cmsis_gcc.h **** 
 743:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:dev/CMSIS/Include/cmsis_gcc.h ****  */
 746:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:dev/CMSIS/Include/cmsis_gcc.h **** {
 748:dev/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:dev/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 61


 750:dev/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:dev/CMSIS/Include/cmsis_gcc.h **** #else
 752:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 754:dev/CMSIS/Include/cmsis_gcc.h **** }
 755:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 756:dev/CMSIS/Include/cmsis_gcc.h **** 
 757:dev/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:dev/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:dev/CMSIS/Include/cmsis_gcc.h **** 
 760:dev/CMSIS/Include/cmsis_gcc.h **** 
 761:dev/CMSIS/Include/cmsis_gcc.h **** /**
 762:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:dev/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:dev/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:dev/CMSIS/Include/cmsis_gcc.h ****  */
 766:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:dev/CMSIS/Include/cmsis_gcc.h **** {
 768:dev/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:dev/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:dev/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:dev/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:dev/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:dev/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:dev/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:dev/CMSIS/Include/cmsis_gcc.h **** #else
 776:dev/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:dev/CMSIS/Include/cmsis_gcc.h **** 
 778:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:dev/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 781:dev/CMSIS/Include/cmsis_gcc.h **** #else
 782:dev/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 784:dev/CMSIS/Include/cmsis_gcc.h **** }
 785:dev/CMSIS/Include/cmsis_gcc.h **** 
 786:dev/CMSIS/Include/cmsis_gcc.h **** 
 787:dev/CMSIS/Include/cmsis_gcc.h **** /**
 788:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:dev/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:dev/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:dev/CMSIS/Include/cmsis_gcc.h ****  */
 792:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:dev/CMSIS/Include/cmsis_gcc.h **** {
 794:dev/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:dev/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:dev/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:dev/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:dev/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:dev/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:dev/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:dev/CMSIS/Include/cmsis_gcc.h **** #else
 802:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 804:dev/CMSIS/Include/cmsis_gcc.h **** #else
 805:dev/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:dev/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 62


 807:dev/CMSIS/Include/cmsis_gcc.h **** }
 808:dev/CMSIS/Include/cmsis_gcc.h **** 
 809:dev/CMSIS/Include/cmsis_gcc.h **** 
 810:dev/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:dev/CMSIS/Include/cmsis_gcc.h **** 
 812:dev/CMSIS/Include/cmsis_gcc.h **** 
 813:dev/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:dev/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:dev/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:dev/CMSIS/Include/cmsis_gcc.h ****   @{
 817:dev/CMSIS/Include/cmsis_gcc.h **** */
 818:dev/CMSIS/Include/cmsis_gcc.h **** 
 819:dev/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:dev/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:dev/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:dev/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:dev/CMSIS/Include/cmsis_gcc.h **** #else
 827:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:dev/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:dev/CMSIS/Include/cmsis_gcc.h **** #endif
 831:dev/CMSIS/Include/cmsis_gcc.h **** 
 832:dev/CMSIS/Include/cmsis_gcc.h **** /**
 833:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:dev/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:dev/CMSIS/Include/cmsis_gcc.h ****  */
 836:dev/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:dev/CMSIS/Include/cmsis_gcc.h **** 
 838:dev/CMSIS/Include/cmsis_gcc.h **** /**
 839:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:dev/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:dev/CMSIS/Include/cmsis_gcc.h ****  */
 842:dev/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:dev/CMSIS/Include/cmsis_gcc.h **** 
 844:dev/CMSIS/Include/cmsis_gcc.h **** 
 845:dev/CMSIS/Include/cmsis_gcc.h **** /**
 846:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:dev/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:dev/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:dev/CMSIS/Include/cmsis_gcc.h ****  */
 850:dev/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:dev/CMSIS/Include/cmsis_gcc.h **** 
 852:dev/CMSIS/Include/cmsis_gcc.h **** 
 853:dev/CMSIS/Include/cmsis_gcc.h **** /**
 854:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:dev/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:dev/CMSIS/Include/cmsis_gcc.h ****  */
 857:dev/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:dev/CMSIS/Include/cmsis_gcc.h **** 
 859:dev/CMSIS/Include/cmsis_gcc.h **** 
 860:dev/CMSIS/Include/cmsis_gcc.h **** /**
 861:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:dev/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:dev/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 63


 864:dev/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:dev/CMSIS/Include/cmsis_gcc.h ****  */
 866:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:dev/CMSIS/Include/cmsis_gcc.h **** {
 868:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:dev/CMSIS/Include/cmsis_gcc.h **** }
 870:dev/CMSIS/Include/cmsis_gcc.h **** 
 871:dev/CMSIS/Include/cmsis_gcc.h **** 
 872:dev/CMSIS/Include/cmsis_gcc.h **** /**
 873:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:dev/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:dev/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:dev/CMSIS/Include/cmsis_gcc.h ****  */
 877:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 347              		.loc 3 877 27 view .LVU97
 348              	.LBB69:
 878:dev/CMSIS/Include/cmsis_gcc.h **** {
 879:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 349              		.loc 3 879 3 view .LVU98
 350              		.syntax unified
 351              	@ 879 "dev/CMSIS/Include/cmsis_gcc.h" 1
 352 0016 BFF34F8F 		dsb 0xF
 353              	@ 0 "" 2
 354              		.thumb
 355              		.syntax unified
 356              	.LBE69:
 357              	.LBE68:
1938:dev/CMSIS/Include/core_cm7.h ****   }
 358              		.loc 2 1938 5 view .LVU99
 359              	.LBB70:
 360              	.LBI70:
 866:dev/CMSIS/Include/cmsis_gcc.h **** {
 361              		.loc 3 866 27 view .LVU100
 362              	.LBB71:
 868:dev/CMSIS/Include/cmsis_gcc.h **** }
 363              		.loc 3 868 3 view .LVU101
 364              		.syntax unified
 365              	@ 868 "dev/CMSIS/Include/cmsis_gcc.h" 1
 366 001a BFF36F8F 		isb 0xF
 367              	@ 0 "" 2
 368              	.LVL31:
 369              		.thumb
 370              		.syntax unified
 371              	.L16:
 868:dev/CMSIS/Include/cmsis_gcc.h **** }
 372              		.loc 3 868 3 is_stmt 0 view .LVU102
 373              	.LBE71:
 374              	.LBE70:
 375              	.LBE67:
 376              	.LBE66:
 210:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 377              		.loc 1 210 1 view .LVU103
 378 001e 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0020 00E100E0 		.word	-536813312
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 64


 383              		.cfi_endproc
 384              	.LFE144:
 386              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 387              		.align	1
 388              		.global	HAL_NVIC_SystemReset
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv5-d16
 394              	HAL_NVIC_SystemReset:
 395              	.LFB145:
 211:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 212:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 213:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 214:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 215:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 216:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 217:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 396              		.loc 1 217 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ Volatile: function does not return.
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 218:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* System Reset */
 219:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SystemReset();
 402              		.loc 1 219 3 view .LVU105
 403              	.LBB78:
 404              	.LBI78:
2083:dev/CMSIS/Include/core_cm7.h ****          );
2084:dev/CMSIS/Include/core_cm7.h **** }
2085:dev/CMSIS/Include/core_cm7.h **** 
2086:dev/CMSIS/Include/core_cm7.h **** 
2087:dev/CMSIS/Include/core_cm7.h **** /**
2088:dev/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2089:dev/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2090:dev/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2091:dev/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2092:dev/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2093:dev/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2094:dev/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2095:dev/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2096:dev/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2097:dev/CMSIS/Include/core_cm7.h ****  */
2098:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2099:dev/CMSIS/Include/core_cm7.h **** {
2100:dev/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2101:dev/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2102:dev/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2103:dev/CMSIS/Include/core_cm7.h **** 
2104:dev/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2105:dev/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2106:dev/CMSIS/Include/core_cm7.h **** 
2107:dev/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2108:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2109:dev/CMSIS/Include/core_cm7.h **** }
2110:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 65


2111:dev/CMSIS/Include/core_cm7.h **** 
2112:dev/CMSIS/Include/core_cm7.h **** /**
2113:dev/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2114:dev/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2115:dev/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2116:dev/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2117:dev/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2118:dev/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2119:dev/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2120:dev/CMSIS/Include/core_cm7.h ****  */
2121:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2122:dev/CMSIS/Include/core_cm7.h **** {
2123:dev/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2124:dev/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2125:dev/CMSIS/Include/core_cm7.h **** }
2126:dev/CMSIS/Include/core_cm7.h **** 
2127:dev/CMSIS/Include/core_cm7.h **** 
2128:dev/CMSIS/Include/core_cm7.h **** /**
2129:dev/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2130:dev/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2131:dev/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2132:dev/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2133:dev/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2134:dev/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2135:dev/CMSIS/Include/core_cm7.h ****  */
2136:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2137:dev/CMSIS/Include/core_cm7.h **** {
2138:dev/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2139:dev/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2140:dev/CMSIS/Include/core_cm7.h **** }
2141:dev/CMSIS/Include/core_cm7.h **** 
2142:dev/CMSIS/Include/core_cm7.h **** 
2143:dev/CMSIS/Include/core_cm7.h **** /**
2144:dev/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2145:dev/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2146:dev/CMSIS/Include/core_cm7.h ****  */
2147:dev/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 405              		.loc 2 2147 34 view .LVU106
 406              	.LBB79:
2148:dev/CMSIS/Include/core_cm7.h **** {
2149:dev/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
 407              		.loc 2 2149 3 view .LVU107
 408              	.LBB80:
 409              	.LBI80:
 877:dev/CMSIS/Include/cmsis_gcc.h **** {
 410              		.loc 3 877 27 view .LVU108
 411              	.LBB81:
 412              		.loc 3 879 3 view .LVU109
 413              		.syntax unified
 414              	@ 879 "dev/CMSIS/Include/cmsis_gcc.h" 1
 415 0000 BFF34F8F 		dsb 0xF
 416              	@ 0 "" 2
 417              		.thumb
 418              		.syntax unified
 419              	.LBE81:
 420              	.LBE80:
2150:dev/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 66


2151:dev/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 421              		.loc 2 2151 3 view .LVU110
2152:dev/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 422              		.loc 2 2152 32 is_stmt 0 view .LVU111
 423 0004 0549     		ldr	r1, .L22
 424 0006 CA68     		ldr	r2, [r1, #12]
 425              		.loc 2 2152 40 view .LVU112
 426 0008 02F4E062 		and	r2, r2, #1792
2151:dev/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 427              		.loc 2 2151 17 view .LVU113
 428 000c 044B     		ldr	r3, .L22+4
 429 000e 1343     		orrs	r3, r3, r2
2151:dev/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 430              		.loc 2 2151 15 view .LVU114
 431 0010 CB60     		str	r3, [r1, #12]
2153:dev/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2154:dev/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
 432              		.loc 2 2154 3 is_stmt 1 view .LVU115
 433              	.LBB82:
 434              	.LBI82:
 877:dev/CMSIS/Include/cmsis_gcc.h **** {
 435              		.loc 3 877 27 view .LVU116
 436              	.LBB83:
 437              		.loc 3 879 3 view .LVU117
 438              		.syntax unified
 439              	@ 879 "dev/CMSIS/Include/cmsis_gcc.h" 1
 440 0012 BFF34F8F 		dsb 0xF
 441              	@ 0 "" 2
 442              		.thumb
 443              		.syntax unified
 444              	.L21:
 445              	.LBE83:
 446              	.LBE82:
2155:dev/CMSIS/Include/core_cm7.h **** 
2156:dev/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
 447              		.loc 2 2156 3 view .LVU118
2157:dev/CMSIS/Include/core_cm7.h ****   {
2158:dev/CMSIS/Include/core_cm7.h ****     __NOP();
 448              		.loc 2 2158 5 view .LVU119
 449              		.syntax unified
 450              	@ 2158 "dev/CMSIS/Include/core_cm7.h" 1
 451 0016 00BF     		nop
 452              	@ 0 "" 2
2156:dev/CMSIS/Include/core_cm7.h ****   {
 453              		.loc 2 2156 8 view .LVU120
 454              		.thumb
 455              		.syntax unified
 456 0018 FDE7     		b	.L21
 457              	.L23:
 458 001a 00BF     		.align	2
 459              	.L22:
 460 001c 00ED00E0 		.word	-536810240
 461 0020 0400FA05 		.word	100270084
 462              	.LBE79:
 463              	.LBE78:
 464              		.cfi_endproc
 465              	.LFE145:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 67


 467              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 468              		.align	1
 469              		.global	HAL_SYSTICK_Config
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv5-d16
 475              	HAL_SYSTICK_Config:
 476              	.LVL32:
 477              	.LFB146:
 220:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 221:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 222:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 223:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 224:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 225:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 226:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 227:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                  - 1  Function failed.
 228:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 229:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 230:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 478              		.loc 1 230 1 view -0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 231:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 483              		.loc 1 231 4 view .LVU122
 484              	.LBB84:
 485              	.LBI84:
2159:dev/CMSIS/Include/core_cm7.h ****   }
2160:dev/CMSIS/Include/core_cm7.h **** }
2161:dev/CMSIS/Include/core_cm7.h **** 
2162:dev/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2163:dev/CMSIS/Include/core_cm7.h **** 
2164:dev/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2165:dev/CMSIS/Include/core_cm7.h **** 
2166:dev/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2167:dev/CMSIS/Include/core_cm7.h **** 
2168:dev/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2169:dev/CMSIS/Include/core_cm7.h **** 
2170:dev/CMSIS/Include/core_cm7.h **** #endif
2171:dev/CMSIS/Include/core_cm7.h **** 
2172:dev/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2173:dev/CMSIS/Include/core_cm7.h **** /**
2174:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2175:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2176:dev/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2177:dev/CMSIS/Include/core_cm7.h ****   @{
2178:dev/CMSIS/Include/core_cm7.h ****  */
2179:dev/CMSIS/Include/core_cm7.h **** 
2180:dev/CMSIS/Include/core_cm7.h **** /**
2181:dev/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2182:dev/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2183:dev/CMSIS/Include/core_cm7.h ****   \returns
2184:dev/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2185:dev/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 68


2186:dev/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2187:dev/CMSIS/Include/core_cm7.h ****  */
2188:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2189:dev/CMSIS/Include/core_cm7.h **** {
2190:dev/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2191:dev/CMSIS/Include/core_cm7.h **** 
2192:dev/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2193:dev/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2194:dev/CMSIS/Include/core_cm7.h ****   {
2195:dev/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2196:dev/CMSIS/Include/core_cm7.h ****   }
2197:dev/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2198:dev/CMSIS/Include/core_cm7.h ****   {
2199:dev/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2200:dev/CMSIS/Include/core_cm7.h ****   }
2201:dev/CMSIS/Include/core_cm7.h ****   else
2202:dev/CMSIS/Include/core_cm7.h ****   {
2203:dev/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2204:dev/CMSIS/Include/core_cm7.h ****   }
2205:dev/CMSIS/Include/core_cm7.h **** }
2206:dev/CMSIS/Include/core_cm7.h **** 
2207:dev/CMSIS/Include/core_cm7.h **** 
2208:dev/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2209:dev/CMSIS/Include/core_cm7.h **** 
2210:dev/CMSIS/Include/core_cm7.h **** 
2211:dev/CMSIS/Include/core_cm7.h **** 
2212:dev/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2213:dev/CMSIS/Include/core_cm7.h **** /**
2214:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2215:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2216:dev/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2217:dev/CMSIS/Include/core_cm7.h ****   @{
2218:dev/CMSIS/Include/core_cm7.h ****  */
2219:dev/CMSIS/Include/core_cm7.h **** 
2220:dev/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2221:dev/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2222:dev/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2223:dev/CMSIS/Include/core_cm7.h **** 
2224:dev/CMSIS/Include/core_cm7.h **** 
2225:dev/CMSIS/Include/core_cm7.h **** /**
2226:dev/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2227:dev/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2228:dev/CMSIS/Include/core_cm7.h ****   */
2229:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2230:dev/CMSIS/Include/core_cm7.h **** {
2231:dev/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2233:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2234:dev/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2235:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2236:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2237:dev/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2238:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2239:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2240:dev/CMSIS/Include/core_cm7.h ****   #endif
2241:dev/CMSIS/Include/core_cm7.h **** }
2242:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 69


2243:dev/CMSIS/Include/core_cm7.h **** 
2244:dev/CMSIS/Include/core_cm7.h **** /**
2245:dev/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2246:dev/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2247:dev/CMSIS/Include/core_cm7.h ****   */
2248:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2249:dev/CMSIS/Include/core_cm7.h **** {
2250:dev/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2251:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2252:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2253:dev/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2254:dev/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2255:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2256:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2257:dev/CMSIS/Include/core_cm7.h ****   #endif
2258:dev/CMSIS/Include/core_cm7.h **** }
2259:dev/CMSIS/Include/core_cm7.h **** 
2260:dev/CMSIS/Include/core_cm7.h **** 
2261:dev/CMSIS/Include/core_cm7.h **** /**
2262:dev/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2263:dev/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2264:dev/CMSIS/Include/core_cm7.h ****   */
2265:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2266:dev/CMSIS/Include/core_cm7.h **** {
2267:dev/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2268:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2269:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2270:dev/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2271:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2272:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2273:dev/CMSIS/Include/core_cm7.h ****   #endif
2274:dev/CMSIS/Include/core_cm7.h **** }
2275:dev/CMSIS/Include/core_cm7.h **** 
2276:dev/CMSIS/Include/core_cm7.h **** 
2277:dev/CMSIS/Include/core_cm7.h **** /**
2278:dev/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2279:dev/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2280:dev/CMSIS/Include/core_cm7.h ****   */
2281:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2282:dev/CMSIS/Include/core_cm7.h **** {
2283:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2284:dev/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2285:dev/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2286:dev/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2287:dev/CMSIS/Include/core_cm7.h **** 
2288:dev/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2289:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2290:dev/CMSIS/Include/core_cm7.h **** 
2291:dev/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2292:dev/CMSIS/Include/core_cm7.h **** 
2293:dev/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2294:dev/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2295:dev/CMSIS/Include/core_cm7.h ****     do {
2296:dev/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2297:dev/CMSIS/Include/core_cm7.h ****       do {
2298:dev/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2299:dev/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 70


2300:dev/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2301:dev/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2302:dev/CMSIS/Include/core_cm7.h ****         #endif
2303:dev/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2304:dev/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2305:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2306:dev/CMSIS/Include/core_cm7.h **** 
2307:dev/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2308:dev/CMSIS/Include/core_cm7.h **** 
2309:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2310:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2311:dev/CMSIS/Include/core_cm7.h ****   #endif
2312:dev/CMSIS/Include/core_cm7.h **** }
2313:dev/CMSIS/Include/core_cm7.h **** 
2314:dev/CMSIS/Include/core_cm7.h **** 
2315:dev/CMSIS/Include/core_cm7.h **** /**
2316:dev/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2317:dev/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2318:dev/CMSIS/Include/core_cm7.h ****   */
2319:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2320:dev/CMSIS/Include/core_cm7.h **** {
2321:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2322:dev/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2323:dev/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2324:dev/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2325:dev/CMSIS/Include/core_cm7.h **** 
2326:dev/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2327:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2328:dev/CMSIS/Include/core_cm7.h **** 
2329:dev/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2330:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2331:dev/CMSIS/Include/core_cm7.h **** 
2332:dev/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2333:dev/CMSIS/Include/core_cm7.h **** 
2334:dev/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2335:dev/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2336:dev/CMSIS/Include/core_cm7.h ****     do {
2337:dev/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2338:dev/CMSIS/Include/core_cm7.h ****       do {
2339:dev/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2340:dev/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2341:dev/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2342:dev/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2343:dev/CMSIS/Include/core_cm7.h ****         #endif
2344:dev/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2345:dev/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2346:dev/CMSIS/Include/core_cm7.h **** 
2347:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2348:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2349:dev/CMSIS/Include/core_cm7.h ****   #endif
2350:dev/CMSIS/Include/core_cm7.h **** }
2351:dev/CMSIS/Include/core_cm7.h **** 
2352:dev/CMSIS/Include/core_cm7.h **** 
2353:dev/CMSIS/Include/core_cm7.h **** /**
2354:dev/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2355:dev/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2356:dev/CMSIS/Include/core_cm7.h ****   */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 71


2357:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2358:dev/CMSIS/Include/core_cm7.h **** {
2359:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2360:dev/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2361:dev/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2362:dev/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2363:dev/CMSIS/Include/core_cm7.h **** 
2364:dev/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2365:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2366:dev/CMSIS/Include/core_cm7.h **** 
2367:dev/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2368:dev/CMSIS/Include/core_cm7.h **** 
2369:dev/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2370:dev/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2371:dev/CMSIS/Include/core_cm7.h ****     do {
2372:dev/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2373:dev/CMSIS/Include/core_cm7.h ****       do {
2374:dev/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2375:dev/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2376:dev/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2377:dev/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2378:dev/CMSIS/Include/core_cm7.h ****         #endif
2379:dev/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2380:dev/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2381:dev/CMSIS/Include/core_cm7.h **** 
2382:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2383:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2384:dev/CMSIS/Include/core_cm7.h ****   #endif
2385:dev/CMSIS/Include/core_cm7.h **** }
2386:dev/CMSIS/Include/core_cm7.h **** 
2387:dev/CMSIS/Include/core_cm7.h **** 
2388:dev/CMSIS/Include/core_cm7.h **** /**
2389:dev/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2390:dev/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2391:dev/CMSIS/Include/core_cm7.h ****   */
2392:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2393:dev/CMSIS/Include/core_cm7.h **** {
2394:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2395:dev/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2396:dev/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2397:dev/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2398:dev/CMSIS/Include/core_cm7.h **** 
2399:dev/CMSIS/Include/core_cm7.h ****      SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2400:dev/CMSIS/Include/core_cm7.h ****    __DSB();
2401:dev/CMSIS/Include/core_cm7.h **** 
2402:dev/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2403:dev/CMSIS/Include/core_cm7.h **** 
2404:dev/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2405:dev/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2406:dev/CMSIS/Include/core_cm7.h ****     do {
2407:dev/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2408:dev/CMSIS/Include/core_cm7.h ****       do {
2409:dev/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2410:dev/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2411:dev/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2412:dev/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2413:dev/CMSIS/Include/core_cm7.h ****         #endif
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 72


2414:dev/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2415:dev/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2416:dev/CMSIS/Include/core_cm7.h **** 
2417:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2418:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2419:dev/CMSIS/Include/core_cm7.h ****   #endif
2420:dev/CMSIS/Include/core_cm7.h **** }
2421:dev/CMSIS/Include/core_cm7.h **** 
2422:dev/CMSIS/Include/core_cm7.h **** 
2423:dev/CMSIS/Include/core_cm7.h **** /**
2424:dev/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2425:dev/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2426:dev/CMSIS/Include/core_cm7.h ****   */
2427:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2428:dev/CMSIS/Include/core_cm7.h **** {
2429:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2430:dev/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2431:dev/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2432:dev/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2433:dev/CMSIS/Include/core_cm7.h **** 
2434:dev/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2435:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2436:dev/CMSIS/Include/core_cm7.h **** 
2437:dev/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2438:dev/CMSIS/Include/core_cm7.h **** 
2439:dev/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2440:dev/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2441:dev/CMSIS/Include/core_cm7.h ****     do {
2442:dev/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2443:dev/CMSIS/Include/core_cm7.h ****       do {
2444:dev/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2445:dev/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2446:dev/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2447:dev/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2448:dev/CMSIS/Include/core_cm7.h ****         #endif
2449:dev/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2450:dev/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2451:dev/CMSIS/Include/core_cm7.h **** 
2452:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2453:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2454:dev/CMSIS/Include/core_cm7.h ****   #endif
2455:dev/CMSIS/Include/core_cm7.h **** }
2456:dev/CMSIS/Include/core_cm7.h **** 
2457:dev/CMSIS/Include/core_cm7.h **** 
2458:dev/CMSIS/Include/core_cm7.h **** /**
2459:dev/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2460:dev/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
2461:dev/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2462:dev/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2463:dev/CMSIS/Include/core_cm7.h **** */
2464:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2465:dev/CMSIS/Include/core_cm7.h **** {
2466:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2467:dev/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2468:dev/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2469:dev/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2470:dev/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 73


2471:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2472:dev/CMSIS/Include/core_cm7.h **** 
2473:dev/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2474:dev/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2475:dev/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2476:dev/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2477:dev/CMSIS/Include/core_cm7.h ****     }
2478:dev/CMSIS/Include/core_cm7.h **** 
2479:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2480:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2481:dev/CMSIS/Include/core_cm7.h ****   #endif
2482:dev/CMSIS/Include/core_cm7.h **** }
2483:dev/CMSIS/Include/core_cm7.h **** 
2484:dev/CMSIS/Include/core_cm7.h **** 
2485:dev/CMSIS/Include/core_cm7.h **** /**
2486:dev/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2487:dev/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2488:dev/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2489:dev/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2490:dev/CMSIS/Include/core_cm7.h **** */
2491:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2492:dev/CMSIS/Include/core_cm7.h **** {
2493:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2494:dev/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2495:dev/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2496:dev/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2497:dev/CMSIS/Include/core_cm7.h **** 
2498:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2499:dev/CMSIS/Include/core_cm7.h **** 
2500:dev/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2501:dev/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2502:dev/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2503:dev/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2504:dev/CMSIS/Include/core_cm7.h ****     }
2505:dev/CMSIS/Include/core_cm7.h **** 
2506:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2507:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2508:dev/CMSIS/Include/core_cm7.h ****   #endif
2509:dev/CMSIS/Include/core_cm7.h **** }
2510:dev/CMSIS/Include/core_cm7.h **** 
2511:dev/CMSIS/Include/core_cm7.h **** 
2512:dev/CMSIS/Include/core_cm7.h **** /**
2513:dev/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2514:dev/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2515:dev/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2516:dev/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2517:dev/CMSIS/Include/core_cm7.h **** */
2518:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2519:dev/CMSIS/Include/core_cm7.h **** {
2520:dev/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2521:dev/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2522:dev/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2523:dev/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2524:dev/CMSIS/Include/core_cm7.h **** 
2525:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2526:dev/CMSIS/Include/core_cm7.h **** 
2527:dev/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 74


2528:dev/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2529:dev/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2530:dev/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2531:dev/CMSIS/Include/core_cm7.h ****     }
2532:dev/CMSIS/Include/core_cm7.h **** 
2533:dev/CMSIS/Include/core_cm7.h ****     __DSB();
2534:dev/CMSIS/Include/core_cm7.h ****     __ISB();
2535:dev/CMSIS/Include/core_cm7.h ****   #endif
2536:dev/CMSIS/Include/core_cm7.h **** }
2537:dev/CMSIS/Include/core_cm7.h **** 
2538:dev/CMSIS/Include/core_cm7.h **** 
2539:dev/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2540:dev/CMSIS/Include/core_cm7.h **** 
2541:dev/CMSIS/Include/core_cm7.h **** 
2542:dev/CMSIS/Include/core_cm7.h **** 
2543:dev/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2544:dev/CMSIS/Include/core_cm7.h **** /**
2545:dev/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2546:dev/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2547:dev/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2548:dev/CMSIS/Include/core_cm7.h ****   @{
2549:dev/CMSIS/Include/core_cm7.h ****  */
2550:dev/CMSIS/Include/core_cm7.h **** 
2551:dev/CMSIS/Include/core_cm7.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2552:dev/CMSIS/Include/core_cm7.h **** 
2553:dev/CMSIS/Include/core_cm7.h **** /**
2554:dev/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2555:dev/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2556:dev/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2557:dev/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2558:dev/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2559:dev/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2560:dev/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2561:dev/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2562:dev/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2563:dev/CMSIS/Include/core_cm7.h ****  */
2564:dev/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 486              		.loc 2 2564 26 view .LVU123
 487              	.LBB85:
2565:dev/CMSIS/Include/core_cm7.h **** {
2566:dev/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 488              		.loc 2 2566 3 view .LVU124
 489              		.loc 2 2566 14 is_stmt 0 view .LVU125
 490 0000 0138     		subs	r0, r0, #1
 491              	.LVL33:
 492              		.loc 2 2566 6 view .LVU126
 493 0002 B0F1807F 		cmp	r0, #16777216
 494 0006 0AD2     		bcs	.L26
2567:dev/CMSIS/Include/core_cm7.h ****   {
2568:dev/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
2569:dev/CMSIS/Include/core_cm7.h ****   }
2570:dev/CMSIS/Include/core_cm7.h **** 
2571:dev/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 495              		.loc 2 2571 3 is_stmt 1 view .LVU127
 496              		.loc 2 2571 18 is_stmt 0 view .LVU128
 497 0008 064B     		ldr	r3, .L27
 498 000a 5860     		str	r0, [r3, #4]
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 75


2572:dev/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 499              		.loc 2 2572 3 is_stmt 1 view .LVU129
 500              	.LVL34:
 501              	.LBB86:
 502              	.LBI86:
2024:dev/CMSIS/Include/core_cm7.h **** {
 503              		.loc 2 2024 22 view .LVU130
 504              	.LBB87:
2026:dev/CMSIS/Include/core_cm7.h ****   {
 505              		.loc 2 2026 3 view .LVU131
2032:dev/CMSIS/Include/core_cm7.h ****   }
 506              		.loc 2 2032 5 view .LVU132
2032:dev/CMSIS/Include/core_cm7.h ****   }
 507              		.loc 2 2032 47 is_stmt 0 view .LVU133
 508 000c 064A     		ldr	r2, .L27+4
 509 000e F021     		movs	r1, #240
 510 0010 82F82310 		strb	r1, [r2, #35]
 511              	.LVL35:
2032:dev/CMSIS/Include/core_cm7.h ****   }
 512              		.loc 2 2032 47 view .LVU134
 513              	.LBE87:
 514              	.LBE86:
2573:dev/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 515              		.loc 2 2573 3 is_stmt 1 view .LVU135
 516              		.loc 2 2573 18 is_stmt 0 view .LVU136
 517 0014 0020     		movs	r0, #0
 518              	.LVL36:
 519              		.loc 2 2573 18 view .LVU137
 520 0016 9860     		str	r0, [r3, #8]
2574:dev/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 521              		.loc 2 2574 3 is_stmt 1 view .LVU138
 522              		.loc 2 2574 18 is_stmt 0 view .LVU139
 523 0018 0722     		movs	r2, #7
 524 001a 1A60     		str	r2, [r3]
2575:dev/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_TICKINT_Msk   |
2576:dev/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2577:dev/CMSIS/Include/core_cm7.h ****   return (0UL);                                                     /* Function successful */
 525              		.loc 2 2577 3 is_stmt 1 view .LVU140
 526              		.loc 2 2577 10 is_stmt 0 view .LVU141
 527 001c 7047     		bx	lr
 528              	.L26:
2568:dev/CMSIS/Include/core_cm7.h ****   }
 529              		.loc 2 2568 12 view .LVU142
 530 001e 0120     		movs	r0, #1
 531              	.LVL37:
2568:dev/CMSIS/Include/core_cm7.h ****   }
 532              		.loc 2 2568 12 view .LVU143
 533              	.LBE85:
 534              	.LBE84:
 232:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 535              		.loc 1 232 1 view .LVU144
 536 0020 7047     		bx	lr
 537              	.L28:
 538 0022 00BF     		.align	2
 539              	.L27:
 540 0024 10E000E0 		.word	-536813552
 541 0028 00ED00E0 		.word	-536810240
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 76


 542              		.cfi_endproc
 543              	.LFE146:
 545              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 546              		.align	1
 547              		.global	HAL_MPU_Disable
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv5-d16
 553              	HAL_MPU_Disable:
 554              	.LFB147:
 233:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 234:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @}
 235:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 236:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 237:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 238:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 239:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 240:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim   
 241:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 242:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 243:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================  
 244:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 245:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 246:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 247:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
 248:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
 249:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 250:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 251:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 252:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 253:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 254:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 255:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables the MPU
 256:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 257:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 258:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 259:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 555              		.loc 1 259 1 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 260:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 261:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DMB();
 560              		.loc 1 261 3 view .LVU146
 561              	.LBB88:
 562              	.LBI88:
 880:dev/CMSIS/Include/cmsis_gcc.h **** }
 881:dev/CMSIS/Include/cmsis_gcc.h **** 
 882:dev/CMSIS/Include/cmsis_gcc.h **** 
 883:dev/CMSIS/Include/cmsis_gcc.h **** /**
 884:dev/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:dev/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:dev/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:dev/CMSIS/Include/cmsis_gcc.h ****  */
 888:dev/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 77


 563              		.loc 3 888 27 view .LVU147
 564              	.LBB89:
 889:dev/CMSIS/Include/cmsis_gcc.h **** {
 890:dev/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 565              		.loc 3 890 3 view .LVU148
 566              		.syntax unified
 567              	@ 890 "dev/CMSIS/Include/cmsis_gcc.h" 1
 568 0000 BFF35F8F 		dmb 0xF
 569              	@ 0 "" 2
 570              		.thumb
 571              		.syntax unified
 572              	.LBE89:
 573              	.LBE88:
 262:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 263:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable fault exceptions */
 264:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 574              		.loc 1 264 3 view .LVU149
 575              		.loc 1 264 14 is_stmt 0 view .LVU150
 576 0004 044A     		ldr	r2, .L30
 577 0006 536A     		ldr	r3, [r2, #36]
 578 0008 23F48033 		bic	r3, r3, #65536
 579 000c 5362     		str	r3, [r2, #36]
 265:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 266:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 267:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = 0;
 580              		.loc 1 267 3 is_stmt 1 view .LVU151
 581              		.loc 1 267 13 is_stmt 0 view .LVU152
 582 000e 034B     		ldr	r3, .L30+4
 583 0010 0022     		movs	r2, #0
 584 0012 5A60     		str	r2, [r3, #4]
 268:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 585              		.loc 1 268 1 view .LVU153
 586 0014 7047     		bx	lr
 587              	.L31:
 588 0016 00BF     		.align	2
 589              	.L30:
 590 0018 00ED00E0 		.word	-536810240
 591 001c 90ED00E0 		.word	-536810096
 592              		.cfi_endproc
 593              	.LFE147:
 595              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_MPU_Enable
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv5-d16
 603              	HAL_MPU_Enable:
 604              	.LVL38:
 605              	.LFB148:
 269:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 270:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 271:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables the MPU
 272:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault, 
 273:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 274:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 275:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 78


 276:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 277:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 278:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 279:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 280:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 281:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 282:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 606              		.loc 1 282 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 283:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable the MPU */
 284:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 611              		.loc 1 284 3 view .LVU155
 612              		.loc 1 284 27 is_stmt 0 view .LVU156
 613 0000 40F00100 		orr	r0, r0, #1
 614              	.LVL39:
 615              		.loc 1 284 13 view .LVU157
 616 0004 054B     		ldr	r3, .L33
 617 0006 5860     		str	r0, [r3, #4]
 285:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 286:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable fault exceptions */
 287:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 618              		.loc 1 287 3 is_stmt 1 view .LVU158
 619              		.loc 1 287 14 is_stmt 0 view .LVU159
 620 0008 054A     		ldr	r2, .L33+4
 621 000a 536A     		ldr	r3, [r2, #36]
 622 000c 43F48033 		orr	r3, r3, #65536
 623 0010 5362     		str	r3, [r2, #36]
 288:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 289:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 290:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DSB();
 624              		.loc 1 290 3 is_stmt 1 view .LVU160
 625              	.LBB90:
 626              	.LBI90:
 877:dev/CMSIS/Include/cmsis_gcc.h **** {
 627              		.loc 3 877 27 view .LVU161
 628              	.LBB91:
 879:dev/CMSIS/Include/cmsis_gcc.h **** }
 629              		.loc 3 879 3 view .LVU162
 630              		.syntax unified
 631              	@ 879 "dev/CMSIS/Include/cmsis_gcc.h" 1
 632 0012 BFF34F8F 		dsb 0xF
 633              	@ 0 "" 2
 634              		.thumb
 635              		.syntax unified
 636              	.LBE91:
 637              	.LBE90:
 291:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __ISB();
 638              		.loc 1 291 3 view .LVU163
 639              	.LBB92:
 640              	.LBI92:
 866:dev/CMSIS/Include/cmsis_gcc.h **** {
 641              		.loc 3 866 27 view .LVU164
 642              	.LBB93:
 868:dev/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 79


 643              		.loc 3 868 3 view .LVU165
 644              		.syntax unified
 645              	@ 868 "dev/CMSIS/Include/cmsis_gcc.h" 1
 646 0016 BFF36F8F 		isb 0xF
 647              	@ 0 "" 2
 648              		.thumb
 649              		.syntax unified
 650              	.LBE93:
 651              	.LBE92:
 292:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 652              		.loc 1 292 1 is_stmt 0 view .LVU166
 653 001a 7047     		bx	lr
 654              	.L34:
 655              		.align	2
 656              	.L33:
 657 001c 90ED00E0 		.word	-536810096
 658 0020 00ED00E0 		.word	-536810240
 659              		.cfi_endproc
 660              	.LFE148:
 662              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 663              		.align	1
 664              		.global	HAL_MPU_ConfigRegion
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-d16
 670              	HAL_MPU_ConfigRegion:
 671              	.LVL40:
 672              	.LFB149:
 293:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 294:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 295:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 296:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 297:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                the initialization and configuration information.
 298:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 299:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 300:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 301:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 673              		.loc 1 301 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 302:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 303:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 678              		.loc 1 303 3 view .LVU168
 304:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 679              		.loc 1 304 3 view .LVU169
 305:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 306:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the Region number */
 307:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 680              		.loc 1 307 3 view .LVU170
 681              		.loc 1 307 22 is_stmt 0 view .LVU171
 682 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 683              		.loc 1 307 12 view .LVU172
 684 0002 134B     		ldr	r3, .L38
 685 0004 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 80


 308:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 309:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 686              		.loc 1 309 3 is_stmt 1 view .LVU173
 687              		.loc 1 309 16 is_stmt 0 view .LVU174
 688 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 689              		.loc 1 309 6 view .LVU175
 690 0008 EBB1     		cbz	r3, .L36
 310:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 311:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     /* Check the parameters */
 312:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 691              		.loc 1 312 5 is_stmt 1 view .LVU176
 313:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 692              		.loc 1 313 5 view .LVU177
 314:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 693              		.loc 1 314 5 view .LVU178
 315:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 694              		.loc 1 315 5 view .LVU179
 316:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 695              		.loc 1 316 5 view .LVU180
 317:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 696              		.loc 1 317 5 view .LVU181
 318:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 697              		.loc 1 318 5 view .LVU182
 319:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 698              		.loc 1 319 5 view .LVU183
 320:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
 321:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 699              		.loc 1 321 5 view .LVU184
 700              		.loc 1 321 25 is_stmt 0 view .LVU185
 701 000a 4368     		ldr	r3, [r0, #4]
 702              		.loc 1 321 15 view .LVU186
 703 000c 104A     		ldr	r2, .L38
 704 000e D360     		str	r3, [r2, #12]
 322:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 705              		.loc 1 322 5 is_stmt 1 view .LVU187
 706              		.loc 1 322 36 is_stmt 0 view .LVU188
 707 0010 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 323:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 708              		.loc 1 323 36 view .LVU189
 709 0012 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 710              		.loc 1 323 62 view .LVU190
 711 0014 1B06     		lsls	r3, r3, #24
 322:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 712              		.loc 1 322 84 view .LVU191
 713 0016 43EA0173 		orr	r3, r3, r1, lsl #28
 324:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 714              		.loc 1 324 36 view .LVU192
 715 001a 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 323:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 716              		.loc 1 323 84 view .LVU193
 717 001c 43EAC143 		orr	r3, r3, r1, lsl #19
 325:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 718              		.loc 1 325 36 view .LVU194
 719 0020 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 324:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 720              		.loc 1 324 84 view .LVU195
 721 0022 43EA8143 		orr	r3, r3, r1, lsl #18
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 81


 326:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 722              		.loc 1 326 36 view .LVU196
 723 0026 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 325:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 724              		.loc 1 325 84 view .LVU197
 725 0028 43EA4143 		orr	r3, r3, r1, lsl #17
 327:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 726              		.loc 1 327 36 view .LVU198
 727 002c C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 326:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 728              		.loc 1 326 84 view .LVU199
 729 002e 43EA0143 		orr	r3, r3, r1, lsl #16
 328:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 730              		.loc 1 328 36 view .LVU200
 731 0032 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 327:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 732              		.loc 1 327 84 view .LVU201
 733 0034 43EA0123 		orr	r3, r3, r1, lsl #8
 329:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 734              		.loc 1 329 36 view .LVU202
 735 0038 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 328:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 736              		.loc 1 328 84 view .LVU203
 737 003a 43EA4103 		orr	r3, r3, r1, lsl #1
 330:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 738              		.loc 1 330 36 view .LVU204
 739 003e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 329:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 740              		.loc 1 329 84 view .LVU205
 741 0040 0B43     		orrs	r3, r3, r1
 322:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 742              		.loc 1 322 15 view .LVU206
 743 0042 1361     		str	r3, [r2, #16]
 744 0044 7047     		bx	lr
 745              	.L36:
 331:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 332:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 333:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 334:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 746              		.loc 1 334 5 is_stmt 1 view .LVU207
 747              		.loc 1 334 15 is_stmt 0 view .LVU208
 748 0046 024B     		ldr	r3, .L38
 749 0048 0022     		movs	r2, #0
 750 004a DA60     		str	r2, [r3, #12]
 335:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 751              		.loc 1 335 5 is_stmt 1 view .LVU209
 752              		.loc 1 335 15 is_stmt 0 view .LVU210
 753 004c 1A61     		str	r2, [r3, #16]
 336:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 337:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 754              		.loc 1 337 1 view .LVU211
 755 004e 7047     		bx	lr
 756              	.L39:
 757              		.align	2
 758              	.L38:
 759 0050 90ED00E0 		.word	-536810096
 760              		.cfi_endproc
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 82


 761              	.LFE149:
 763              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 764              		.align	1
 765              		.global	HAL_NVIC_GetPriorityGrouping
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu fpv5-d16
 771              	HAL_NVIC_GetPriorityGrouping:
 772              	.LFB150:
 338:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 339:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 340:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 341:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 342:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 343:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 344:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 345:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 773              		.loc 1 345 1 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 346:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 347:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 778              		.loc 1 347 3 view .LVU213
 779              	.LBB94:
 780              	.LBI94:
1884:dev/CMSIS/Include/core_cm7.h **** {
 781              		.loc 2 1884 26 view .LVU214
 782              	.LBB95:
1886:dev/CMSIS/Include/core_cm7.h **** }
 783              		.loc 2 1886 3 view .LVU215
1886:dev/CMSIS/Include/core_cm7.h **** }
 784              		.loc 2 1886 26 is_stmt 0 view .LVU216
 785 0000 024B     		ldr	r3, .L41
 786 0002 D868     		ldr	r0, [r3, #12]
 787              	.LBE95:
 788              	.LBE94:
 348:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 789              		.loc 1 348 1 view .LVU217
 790 0004 C0F30220 		ubfx	r0, r0, #8, #3
 791 0008 7047     		bx	lr
 792              	.L42:
 793 000a 00BF     		.align	2
 794              	.L41:
 795 000c 00ED00E0 		.word	-536810240
 796              		.cfi_endproc
 797              	.LFE150:
 799              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 800              		.align	1
 801              		.global	HAL_NVIC_GetPriority
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv5-d16
 807              	HAL_NVIC_GetPriority:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 83


 808              	.LVL41:
 809              	.LFB151:
 349:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 350:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 351:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 352:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 353:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 354:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 355:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 356:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 357:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 358:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 359:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 360:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      3 bits for subpriority
 361:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 362:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 363:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 364:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 365:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 366:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 367:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 368:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 369:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 370:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 371:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 372:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 810              		.loc 1 372 1 is_stmt 1 view -0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815              		.loc 1 372 1 is_stmt 0 view .LVU219
 816 0000 70B4     		push	{r4, r5, r6}
 817              	.LCFI3:
 818              		.cfi_def_cfa_offset 12
 819              		.cfi_offset 4, -12
 820              		.cfi_offset 5, -8
 821              		.cfi_offset 6, -4
 373:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 374:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 822              		.loc 1 374 3 is_stmt 1 view .LVU220
 375:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 376:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 823              		.loc 1 376 3 view .LVU221
 824              	.LVL42:
 825              	.LBB96:
 826              	.LBI96:
2046:dev/CMSIS/Include/core_cm7.h **** {
 827              		.loc 2 2046 26 view .LVU222
 828              	.LBB97:
2049:dev/CMSIS/Include/core_cm7.h ****   {
 829              		.loc 2 2049 3 view .LVU223
2049:dev/CMSIS/Include/core_cm7.h ****   {
 830              		.loc 2 2049 6 is_stmt 0 view .LVU224
 831 0002 0028     		cmp	r0, #0
 832              	.LVL43:
2049:dev/CMSIS/Include/core_cm7.h ****   {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 84


 833              		.loc 2 2049 6 view .LVU225
 834 0004 1DDB     		blt	.L44
2051:dev/CMSIS/Include/core_cm7.h ****   }
 835              		.loc 2 2051 5 is_stmt 1 view .LVU226
2051:dev/CMSIS/Include/core_cm7.h ****   }
 836              		.loc 2 2051 31 is_stmt 0 view .LVU227
 837 0006 134C     		ldr	r4, .L49
 838 0008 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
2051:dev/CMSIS/Include/core_cm7.h ****   }
 839              		.loc 2 2051 65 view .LVU228
 840 000a 0009     		lsrs	r0, r0, #4
 841              	.L45:
 842              	.LVL44:
2051:dev/CMSIS/Include/core_cm7.h ****   }
 843              		.loc 2 2051 65 view .LVU229
 844              	.LBE97:
 845              	.LBE96:
 846              	.LBB99:
 847              	.LBI99:
2098:dev/CMSIS/Include/core_cm7.h **** {
 848              		.loc 2 2098 22 is_stmt 1 view .LVU230
 849              	.LBB100:
2100:dev/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
 850              		.loc 2 2100 3 view .LVU231
2100:dev/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
 851              		.loc 2 2100 12 is_stmt 0 view .LVU232
 852 000c 01F00701 		and	r1, r1, #7
 853              	.LVL45:
2101:dev/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
 854              		.loc 2 2101 3 is_stmt 1 view .LVU233
2102:dev/CMSIS/Include/core_cm7.h **** 
 855              		.loc 2 2102 3 view .LVU234
2104:dev/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 856              		.loc 2 2104 3 view .LVU235
2104:dev/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 857              		.loc 2 2104 31 is_stmt 0 view .LVU236
 858 0010 C1F10704 		rsb	r4, r1, #7
2104:dev/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 859              		.loc 2 2104 23 view .LVU237
 860 0014 042C     		cmp	r4, #4
 861 0016 28BF     		it	cs
 862 0018 0424     		movcs	r4, #4
 863              	.LVL46:
2105:dev/CMSIS/Include/core_cm7.h **** 
 864              		.loc 2 2105 3 is_stmt 1 view .LVU238
2105:dev/CMSIS/Include/core_cm7.h **** 
 865              		.loc 2 2105 44 is_stmt 0 view .LVU239
 866 001a 0D1D     		adds	r5, r1, #4
2105:dev/CMSIS/Include/core_cm7.h **** 
 867              		.loc 2 2105 109 view .LVU240
 868 001c 062D     		cmp	r5, #6
 869 001e 16D9     		bls	.L47
 870 0020 0339     		subs	r1, r1, #3
 871              	.LVL47:
 872              	.L46:
2107:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 873              		.loc 2 2107 3 is_stmt 1 view .LVU241
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 85


2107:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 874              		.loc 2 2107 33 is_stmt 0 view .LVU242
 875 0022 20FA01F6 		lsr	r6, r0, r1
2107:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 876              		.loc 2 2107 53 view .LVU243
 877 0026 4FF0FF35 		mov	r5, #-1
 878              	.LVL48:
2107:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 879              		.loc 2 2107 53 view .LVU244
 880 002a 05FA04F4 		lsl	r4, r5, r4
 881              	.LVL49:
2107:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 882              		.loc 2 2107 53 view .LVU245
 883 002e 26EA0404 		bic	r4, r6, r4
2107:dev/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 884              		.loc 2 2107 21 view .LVU246
 885 0032 1460     		str	r4, [r2]
2108:dev/CMSIS/Include/core_cm7.h **** }
 886              		.loc 2 2108 3 is_stmt 1 view .LVU247
2108:dev/CMSIS/Include/core_cm7.h **** }
 887              		.loc 2 2108 53 is_stmt 0 view .LVU248
 888 0034 05FA01F1 		lsl	r1, r5, r1
 889              	.LVL50:
2108:dev/CMSIS/Include/core_cm7.h **** }
 890              		.loc 2 2108 53 view .LVU249
 891 0038 20EA0100 		bic	r0, r0, r1
 892              	.LVL51:
2108:dev/CMSIS/Include/core_cm7.h **** }
 893              		.loc 2 2108 21 view .LVU250
 894 003c 1860     		str	r0, [r3]
 895              	.LVL52:
2108:dev/CMSIS/Include/core_cm7.h **** }
 896              		.loc 2 2108 21 view .LVU251
 897              	.LBE100:
 898              	.LBE99:
 377:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 899              		.loc 1 377 1 view .LVU252
 900 003e 70BC     		pop	{r4, r5, r6}
 901              	.LCFI4:
 902              		.cfi_remember_state
 903              		.cfi_restore 6
 904              		.cfi_restore 5
 905              		.cfi_restore 4
 906              		.cfi_def_cfa_offset 0
 907 0040 7047     		bx	lr
 908              	.LVL53:
 909              	.L44:
 910              	.LCFI5:
 911              		.cfi_restore_state
 912              	.LBB102:
 913              	.LBB98:
2055:dev/CMSIS/Include/core_cm7.h ****   }
 914              		.loc 2 2055 5 is_stmt 1 view .LVU253
2055:dev/CMSIS/Include/core_cm7.h ****   }
 915              		.loc 2 2055 51 is_stmt 0 view .LVU254
 916 0042 00F00F00 		and	r0, r0, #15
2055:dev/CMSIS/Include/core_cm7.h ****   }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 86


 917              		.loc 2 2055 32 view .LVU255
 918 0046 044C     		ldr	r4, .L49+4
 919 0048 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
2055:dev/CMSIS/Include/core_cm7.h ****   }
 920              		.loc 2 2055 65 view .LVU256
 921 004a 0009     		lsrs	r0, r0, #4
 922 004c DEE7     		b	.L45
 923              	.LVL54:
 924              	.L47:
2055:dev/CMSIS/Include/core_cm7.h ****   }
 925              		.loc 2 2055 65 view .LVU257
 926              	.LBE98:
 927              	.LBE102:
 928              	.LBB103:
 929              	.LBB101:
2105:dev/CMSIS/Include/core_cm7.h **** 
 930              		.loc 2 2105 109 view .LVU258
 931 004e 0021     		movs	r1, #0
 932              	.LVL55:
2105:dev/CMSIS/Include/core_cm7.h **** 
 933              		.loc 2 2105 109 view .LVU259
 934 0050 E7E7     		b	.L46
 935              	.L50:
 936 0052 00BF     		.align	2
 937              	.L49:
 938 0054 00E400E0 		.word	-536812544
 939 0058 14ED00E0 		.word	-536810220
 940              	.LBE101:
 941              	.LBE103:
 942              		.cfi_endproc
 943              	.LFE151:
 945              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 946              		.align	1
 947              		.global	HAL_NVIC_SetPendingIRQ
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 951              		.fpu fpv5-d16
 953              	HAL_NVIC_SetPendingIRQ:
 954              	.LVL56:
 955              	.LFB152:
 378:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 379:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 380:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 381:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 382:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 383:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 384:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 385:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 386:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 387:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 956              		.loc 1 387 1 is_stmt 1 view -0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              		@ link register save eliminated.
 388:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 87


 389:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 961              		.loc 1 389 3 view .LVU261
 390:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 391:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set interrupt pending */
 392:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 962              		.loc 1 392 3 view .LVU262
 963              	.LBB104:
 964              	.LBI104:
1970:dev/CMSIS/Include/core_cm7.h **** {
 965              		.loc 2 1970 22 view .LVU263
 966              	.LBB105:
1972:dev/CMSIS/Include/core_cm7.h ****   {
 967              		.loc 2 1972 3 view .LVU264
1972:dev/CMSIS/Include/core_cm7.h ****   {
 968              		.loc 2 1972 6 is_stmt 0 view .LVU265
 969 0000 0028     		cmp	r0, #0
 970              	.LVL57:
1972:dev/CMSIS/Include/core_cm7.h ****   {
 971              		.loc 2 1972 6 view .LVU266
 972 0002 08DB     		blt	.L51
1974:dev/CMSIS/Include/core_cm7.h ****   }
 973              		.loc 2 1974 5 is_stmt 1 view .LVU267
1974:dev/CMSIS/Include/core_cm7.h ****   }
 974              		.loc 2 1974 81 is_stmt 0 view .LVU268
 975 0004 00F01F02 		and	r2, r0, #31
1974:dev/CMSIS/Include/core_cm7.h ****   }
 976              		.loc 2 1974 34 view .LVU269
 977 0008 4009     		lsrs	r0, r0, #5
1974:dev/CMSIS/Include/core_cm7.h ****   }
 978              		.loc 2 1974 45 view .LVU270
 979 000a 0123     		movs	r3, #1
 980 000c 9340     		lsls	r3, r3, r2
1974:dev/CMSIS/Include/core_cm7.h ****   }
 981              		.loc 2 1974 43 view .LVU271
 982 000e 4030     		adds	r0, r0, #64
 983 0010 014A     		ldr	r2, .L53
 984 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 985              	.LVL58:
 986              	.L51:
1974:dev/CMSIS/Include/core_cm7.h ****   }
 987              		.loc 2 1974 43 view .LVU272
 988              	.LBE105:
 989              	.LBE104:
 393:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 990              		.loc 1 393 1 view .LVU273
 991 0016 7047     		bx	lr
 992              	.L54:
 993              		.align	2
 994              	.L53:
 995 0018 00E100E0 		.word	-536813312
 996              		.cfi_endproc
 997              	.LFE152:
 999              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1000              		.align	1
 1001              		.global	HAL_NVIC_GetPendingIRQ
 1002              		.syntax unified
 1003              		.thumb
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 88


 1004              		.thumb_func
 1005              		.fpu fpv5-d16
 1007              	HAL_NVIC_GetPendingIRQ:
 1008              	.LVL59:
 1009              	.LFB153:
 394:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 395:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 396:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 397:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 398:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 399:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 400:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 401:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 402:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 403:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 404:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 405:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1010              		.loc 1 405 1 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              		@ link register save eliminated.
 406:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 407:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1015              		.loc 1 407 3 view .LVU275
 408:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 409:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 410:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1016              		.loc 1 410 3 view .LVU276
 1017              	.LBB106:
 1018              	.LBI106:
1951:dev/CMSIS/Include/core_cm7.h **** {
 1019              		.loc 2 1951 26 view .LVU277
 1020              	.LBB107:
1953:dev/CMSIS/Include/core_cm7.h ****   {
 1021              		.loc 2 1953 3 view .LVU278
1953:dev/CMSIS/Include/core_cm7.h ****   {
 1022              		.loc 2 1953 6 is_stmt 0 view .LVU279
 1023 0000 0028     		cmp	r0, #0
 1024              	.LVL60:
1953:dev/CMSIS/Include/core_cm7.h ****   {
 1025              		.loc 2 1953 6 view .LVU280
 1026 0002 0BDB     		blt	.L57
1955:dev/CMSIS/Include/core_cm7.h ****   }
 1027              		.loc 2 1955 5 is_stmt 1 view .LVU281
1955:dev/CMSIS/Include/core_cm7.h ****   }
 1028              		.loc 2 1955 54 is_stmt 0 view .LVU282
 1029 0004 4309     		lsrs	r3, r0, #5
1955:dev/CMSIS/Include/core_cm7.h ****   }
 1030              		.loc 2 1955 35 view .LVU283
 1031 0006 4033     		adds	r3, r3, #64
 1032 0008 054A     		ldr	r2, .L58
 1033 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1955:dev/CMSIS/Include/core_cm7.h ****   }
 1034              		.loc 2 1955 91 view .LVU284
 1035 000e 00F01F00 		and	r0, r0, #31
1955:dev/CMSIS/Include/core_cm7.h ****   }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 89


 1036              		.loc 2 1955 103 view .LVU285
 1037 0012 23FA00F0 		lsr	r0, r3, r0
1955:dev/CMSIS/Include/core_cm7.h ****   }
 1038              		.loc 2 1955 12 view .LVU286
 1039 0016 00F00100 		and	r0, r0, #1
 1040 001a 7047     		bx	lr
 1041              	.L57:
1959:dev/CMSIS/Include/core_cm7.h ****   }
 1042              		.loc 2 1959 11 view .LVU287
 1043 001c 0020     		movs	r0, #0
 1044              	.LVL61:
1959:dev/CMSIS/Include/core_cm7.h ****   }
 1045              		.loc 2 1959 11 view .LVU288
 1046              	.LBE107:
 1047              	.LBE106:
 411:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1048              		.loc 1 411 1 view .LVU289
 1049 001e 7047     		bx	lr
 1050              	.L59:
 1051              		.align	2
 1052              	.L58:
 1053 0020 00E100E0 		.word	-536813312
 1054              		.cfi_endproc
 1055              	.LFE153:
 1057              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1058              		.align	1
 1059              		.global	HAL_NVIC_ClearPendingIRQ
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu fpv5-d16
 1065              	HAL_NVIC_ClearPendingIRQ:
 1066              	.LVL62:
 1067              	.LFB154:
 412:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 413:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 414:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 415:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 416:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 417:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 418:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 419:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 420:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 421:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1068              		.loc 1 421 1 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 422:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 423:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1073              		.loc 1 423 3 view .LVU291
 424:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 425:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Clear pending interrupt */
 426:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1074              		.loc 1 426 3 view .LVU292
 1075              	.LBB108:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 90


 1076              	.LBI108:
1985:dev/CMSIS/Include/core_cm7.h **** {
 1077              		.loc 2 1985 22 view .LVU293
 1078              	.LBB109:
1987:dev/CMSIS/Include/core_cm7.h ****   {
 1079              		.loc 2 1987 3 view .LVU294
1987:dev/CMSIS/Include/core_cm7.h ****   {
 1080              		.loc 2 1987 6 is_stmt 0 view .LVU295
 1081 0000 0028     		cmp	r0, #0
 1082              	.LVL63:
1987:dev/CMSIS/Include/core_cm7.h ****   {
 1083              		.loc 2 1987 6 view .LVU296
 1084 0002 08DB     		blt	.L60
1989:dev/CMSIS/Include/core_cm7.h ****   }
 1085              		.loc 2 1989 5 is_stmt 1 view .LVU297
1989:dev/CMSIS/Include/core_cm7.h ****   }
 1086              		.loc 2 1989 81 is_stmt 0 view .LVU298
 1087 0004 00F01F02 		and	r2, r0, #31
1989:dev/CMSIS/Include/core_cm7.h ****   }
 1088              		.loc 2 1989 34 view .LVU299
 1089 0008 4009     		lsrs	r0, r0, #5
1989:dev/CMSIS/Include/core_cm7.h ****   }
 1090              		.loc 2 1989 45 view .LVU300
 1091 000a 0123     		movs	r3, #1
 1092 000c 9340     		lsls	r3, r3, r2
1989:dev/CMSIS/Include/core_cm7.h ****   }
 1093              		.loc 2 1989 43 view .LVU301
 1094 000e 6030     		adds	r0, r0, #96
 1095 0010 014A     		ldr	r2, .L62
 1096 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1097              	.LVL64:
 1098              	.L60:
1989:dev/CMSIS/Include/core_cm7.h ****   }
 1099              		.loc 2 1989 43 view .LVU302
 1100              	.LBE109:
 1101              	.LBE108:
 427:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1102              		.loc 1 427 1 view .LVU303
 1103 0016 7047     		bx	lr
 1104              	.L63:
 1105              		.align	2
 1106              	.L62:
 1107 0018 00E100E0 		.word	-536813312
 1108              		.cfi_endproc
 1109              	.LFE154:
 1111              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1112              		.align	1
 1113              		.global	HAL_NVIC_GetActive
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1117              		.fpu fpv5-d16
 1119              	HAL_NVIC_GetActive:
 1120              	.LVL65:
 1121              	.LFB155:
 428:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 429:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 91


 430:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 431:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 432:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 433:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 434:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 435:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 436:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 437:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 438:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1122              		.loc 1 438 1 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              		@ link register save eliminated.
 439:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 440:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1127              		.loc 1 440 3 view .LVU305
 441:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 442:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 443:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1128              		.loc 1 443 3 view .LVU306
 1129              	.LBB110:
 1130              	.LBI110:
2002:dev/CMSIS/Include/core_cm7.h **** {
 1131              		.loc 2 2002 26 view .LVU307
 1132              	.LBB111:
2004:dev/CMSIS/Include/core_cm7.h ****   {
 1133              		.loc 2 2004 3 view .LVU308
2004:dev/CMSIS/Include/core_cm7.h ****   {
 1134              		.loc 2 2004 6 is_stmt 0 view .LVU309
 1135 0000 0028     		cmp	r0, #0
 1136              	.LVL66:
2004:dev/CMSIS/Include/core_cm7.h ****   {
 1137              		.loc 2 2004 6 view .LVU310
 1138 0002 0BDB     		blt	.L66
2006:dev/CMSIS/Include/core_cm7.h ****   }
 1139              		.loc 2 2006 5 is_stmt 1 view .LVU311
2006:dev/CMSIS/Include/core_cm7.h ****   }
 1140              		.loc 2 2006 54 is_stmt 0 view .LVU312
 1141 0004 4309     		lsrs	r3, r0, #5
2006:dev/CMSIS/Include/core_cm7.h ****   }
 1142              		.loc 2 2006 35 view .LVU313
 1143 0006 8033     		adds	r3, r3, #128
 1144 0008 054A     		ldr	r2, .L67
 1145 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
2006:dev/CMSIS/Include/core_cm7.h ****   }
 1146              		.loc 2 2006 91 view .LVU314
 1147 000e 00F01F00 		and	r0, r0, #31
2006:dev/CMSIS/Include/core_cm7.h ****   }
 1148              		.loc 2 2006 103 view .LVU315
 1149 0012 23FA00F0 		lsr	r0, r3, r0
2006:dev/CMSIS/Include/core_cm7.h ****   }
 1150              		.loc 2 2006 12 view .LVU316
 1151 0016 00F00100 		and	r0, r0, #1
 1152 001a 7047     		bx	lr
 1153              	.L66:
2010:dev/CMSIS/Include/core_cm7.h ****   }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 92


 1154              		.loc 2 2010 11 view .LVU317
 1155 001c 0020     		movs	r0, #0
 1156              	.LVL67:
2010:dev/CMSIS/Include/core_cm7.h ****   }
 1157              		.loc 2 2010 11 view .LVU318
 1158              	.LBE111:
 1159              	.LBE110:
 444:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1160              		.loc 1 444 1 view .LVU319
 1161 001e 7047     		bx	lr
 1162              	.L68:
 1163              		.align	2
 1164              	.L67:
 1165 0020 00E100E0 		.word	-536813312
 1166              		.cfi_endproc
 1167              	.LFE155:
 1169              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1170              		.align	1
 1171              		.global	HAL_SYSTICK_CLKSourceConfig
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1175              		.fpu fpv5-d16
 1177              	HAL_SYSTICK_CLKSourceConfig:
 1178              	.LVL68:
 1179              	.LFB156:
 445:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 446:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 447:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 448:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 449:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 450:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 451:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 452:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 453:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 454:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 455:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1180              		.loc 1 455 1 is_stmt 1 view -0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 456:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 457:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 1185              		.loc 1 457 3 view .LVU321
 458:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1186              		.loc 1 458 3 view .LVU322
 1187              		.loc 1 458 6 is_stmt 0 view .LVU323
 1188 0000 0428     		cmp	r0, #4
 1189 0002 05D0     		beq	.L72
 459:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 460:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 461:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 462:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 463:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 464:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1190              		.loc 1 464 5 is_stmt 1 view .LVU324
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 93


 1191              		.loc 1 464 19 is_stmt 0 view .LVU325
 1192 0004 054A     		ldr	r2, .L73
 1193 0006 1368     		ldr	r3, [r2]
 1194 0008 23F00403 		bic	r3, r3, #4
 1195 000c 1360     		str	r3, [r2]
 465:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 466:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1196              		.loc 1 466 1 view .LVU326
 1197 000e 7047     		bx	lr
 1198              	.L72:
 460:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 1199              		.loc 1 460 5 is_stmt 1 view .LVU327
 460:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 1200              		.loc 1 460 19 is_stmt 0 view .LVU328
 1201 0010 024A     		ldr	r2, .L73
 1202 0012 1368     		ldr	r3, [r2]
 1203 0014 43F00403 		orr	r3, r3, #4
 1204 0018 1360     		str	r3, [r2]
 1205 001a 7047     		bx	lr
 1206              	.L74:
 1207              		.align	2
 1208              	.L73:
 1209 001c 10E000E0 		.word	-536813552
 1210              		.cfi_endproc
 1211              	.LFE156:
 1213              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1214              		.align	1
 1215              		.weak	HAL_SYSTICK_Callback
 1216              		.syntax unified
 1217              		.thumb
 1218              		.thumb_func
 1219              		.fpu fpv5-d16
 1221              	HAL_SYSTICK_Callback:
 1222              	.LFB158:
 467:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 468:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 469:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 470:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 471:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 472:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 473:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 474:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 475:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 476:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 477:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 478:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 479:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 480:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 481:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 482:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1223              		.loc 1 482 1 is_stmt 1 view -0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
 483:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 484:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 94


 485:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    */
 486:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1228              		.loc 1 486 1 view .LVU330
 1229 0000 7047     		bx	lr
 1230              		.cfi_endproc
 1231              	.LFE158:
 1233              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1234              		.align	1
 1235              		.global	HAL_SYSTICK_IRQHandler
 1236              		.syntax unified
 1237              		.thumb
 1238              		.thumb_func
 1239              		.fpu fpv5-d16
 1241              	HAL_SYSTICK_IRQHandler:
 1242              	.LFB157:
 473:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1243              		.loc 1 473 1 view -0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 0
 1246              		@ frame_needed = 0, uses_anonymous_args = 0
 1247 0000 08B5     		push	{r3, lr}
 1248              	.LCFI6:
 1249              		.cfi_def_cfa_offset 8
 1250              		.cfi_offset 3, -8
 1251              		.cfi_offset 14, -4
 474:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1252              		.loc 1 474 3 view .LVU332
 1253 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1254              	.LVL69:
 475:dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 1255              		.loc 1 475 1 is_stmt 0 view .LVU333
 1256 0006 08BD     		pop	{r3, pc}
 1257              		.cfi_endproc
 1258              	.LFE157:
 1260              		.text
 1261              	.Letext0:
 1262              		.file 4 "dev/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1263              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1264              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1265              		.file 7 "dev/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1266              		.file 8 "dev/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1267              		.file 9 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1268              		.file 10 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s 			page 95


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_cortex.c
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:17     .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:25     .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:81     .text.HAL_NVIC_SetPriorityGrouping:0000001c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:87     .text.HAL_NVIC_SetPriority:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:94     .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:244    .text.HAL_NVIC_SetPriority:00000058 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:251    .text.HAL_NVIC_EnableIRQ:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:258    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:299    .text.HAL_NVIC_EnableIRQ:00000018 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:304    .text.HAL_NVIC_DisableIRQ:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:311    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:382    .text.HAL_NVIC_DisableIRQ:00000020 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:387    .text.HAL_NVIC_SystemReset:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:394    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:460    .text.HAL_NVIC_SystemReset:0000001c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:468    .text.HAL_SYSTICK_Config:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:475    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:540    .text.HAL_SYSTICK_Config:00000024 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:546    .text.HAL_MPU_Disable:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:553    .text.HAL_MPU_Disable:00000000 HAL_MPU_Disable
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:590    .text.HAL_MPU_Disable:00000018 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:596    .text.HAL_MPU_Enable:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:603    .text.HAL_MPU_Enable:00000000 HAL_MPU_Enable
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:657    .text.HAL_MPU_Enable:0000001c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:663    .text.HAL_MPU_ConfigRegion:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:670    .text.HAL_MPU_ConfigRegion:00000000 HAL_MPU_ConfigRegion
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:759    .text.HAL_MPU_ConfigRegion:00000050 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:764    .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:771    .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:795    .text.HAL_NVIC_GetPriorityGrouping:0000000c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:800    .text.HAL_NVIC_GetPriority:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:807    .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:938    .text.HAL_NVIC_GetPriority:00000054 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:946    .text.HAL_NVIC_SetPendingIRQ:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:953    .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:995    .text.HAL_NVIC_SetPendingIRQ:00000018 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1000   .text.HAL_NVIC_GetPendingIRQ:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1007   .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1053   .text.HAL_NVIC_GetPendingIRQ:00000020 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1058   .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1065   .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1107   .text.HAL_NVIC_ClearPendingIRQ:00000018 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1112   .text.HAL_NVIC_GetActive:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1119   .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1165   .text.HAL_NVIC_GetActive:00000020 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1170   .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1177   .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1209   .text.HAL_SYSTICK_CLKSourceConfig:0000001c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1214   .text.HAL_SYSTICK_Callback:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1221   .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1234   .text.HAL_SYSTICK_IRQHandler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccFQZxke.s:1241   .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler

NO UNDEFINED SYMBOLS
