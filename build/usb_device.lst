ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"usb_device.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.USBD_HID_GetPos,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	USBD_HID_GetPos:
  25              	.LFB145:
  26              		.file 1 "usb/usb_device.c"
   1:usb/usb_device.c **** /**
   2:usb/usb_device.c ****   ******************************************************************************
   3:usb/usb_device.c ****   * @file           : usb_device.c
   4:usb/usb_device.c ****   * @version        : v1.0_Cube
   5:usb/usb_device.c ****   * @brief          : This file implements the USB Device
   6:usb/usb_device.c ****   ******************************************************************************
   7:usb/usb_device.c ****   * @attention
   8:usb/usb_device.c ****   *
   9:usb/usb_device.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:usb/usb_device.c ****   * All rights reserved.</center></h2>
  11:usb/usb_device.c ****   *
  12:usb/usb_device.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:usb/usb_device.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:usb/usb_device.c ****   * the License. You may obtain a copy of the License at:
  15:usb/usb_device.c ****   *                             www.st.com/SLA0044
  16:usb/usb_device.c ****   *
  17:usb/usb_device.c ****   ******************************************************************************
  18:usb/usb_device.c ****   */
  19:usb/usb_device.c **** 
  20:usb/usb_device.c **** /* Includes ------------------------------------------------------------------*/
  21:usb/usb_device.c **** #include <stdint.h>
  22:usb/usb_device.c **** #include "usb_device.h"
  23:usb/usb_device.c **** #include "usbd_desc.h"
  24:usb/usb_device.c **** #include "usbd_core.h"
  25:usb/usb_device.c **** #include "usbd_hid.h"
  26:usb/usb_device.c **** #include "main.h"
  27:usb/usb_device.c **** /**
  28:usb/usb_device.c ****  * @brief user button's state
  29:usb/usb_device.c ****  *        true: press
  30:usb/usb_device.c ****  *        false: release
  31:usb/usb_device.c ****  * 
  32:usb/usb_device.c ****  */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 2


  33:usb/usb_device.c **** extern int usr_btn_state;
  34:usb/usb_device.c **** 
  35:usb/usb_device.c **** /* Private variables ---------------------------------------------------------*/
  36:usb/usb_device.c **** static uint8_t HID_Buffer [4];
  37:usb/usb_device.c **** static int x=0;
  38:usb/usb_device.c **** static int y=255;
  39:usb/usb_device.c **** /* USER CODE END PV */
  40:usb/usb_device.c **** 
  41:usb/usb_device.c **** /* USER CODE BEGIN PFP */
  42:usb/usb_device.c **** /* Private function prototypes -----------------------------------------------*/
  43:usb/usb_device.c **** 
  44:usb/usb_device.c **** /* USER CODE END PFP */
  45:usb/usb_device.c **** 
  46:usb/usb_device.c **** /* USB Device Core handle declaration. */
  47:usb/usb_device.c **** USBD_HandleTypeDef hUsbDeviceFS;
  48:usb/usb_device.c **** 
  49:usb/usb_device.c **** static uint8_t *USBD_HID_GetPos(void)
  50:usb/usb_device.c **** {
  27              		.loc 1 50 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  51:usb/usb_device.c ****   HID_Buffer[0] = 0;
  32              		.loc 1 51 3 view .LVU1
  33              		.loc 1 51 17 is_stmt 0 view .LVU2
  34 0000 0348     		ldr	r0, .L2
  35 0002 0023     		movs	r3, #0
  36 0004 0370     		strb	r3, [r0]
  52:usb/usb_device.c ****   HID_Buffer[1] = x;
  37              		.loc 1 52 3 is_stmt 1 view .LVU3
  38              		.loc 1 52 17 is_stmt 0 view .LVU4
  39 0006 4370     		strb	r3, [r0, #1]
  53:usb/usb_device.c ****   HID_Buffer[2] = y;
  40              		.loc 1 53 3 is_stmt 1 view .LVU5
  41              		.loc 1 53 17 is_stmt 0 view .LVU6
  42 0008 FF22     		movs	r2, #255
  43 000a 8270     		strb	r2, [r0, #2]
  54:usb/usb_device.c ****   HID_Buffer[3] = 0;
  44              		.loc 1 54 3 is_stmt 1 view .LVU7
  45              		.loc 1 54 17 is_stmt 0 view .LVU8
  46 000c C370     		strb	r3, [r0, #3]
  55:usb/usb_device.c ****   return HID_Buffer;
  47              		.loc 1 55 3 is_stmt 1 view .LVU9
  56:usb/usb_device.c **** }
  48              		.loc 1 56 1 is_stmt 0 view .LVU10
  49 000e 7047     		bx	lr
  50              	.L3:
  51              		.align	2
  52              	.L2:
  53 0010 00000000 		.word	.LANCHOR0
  54              		.cfi_endproc
  55              	.LFE145:
  57              		.section	.rodata.MX_USB_DEVICE_Init.str1.4,"aMS",%progbits,1
  58              		.align	2
  59              	.LC0:
  60 0000 75736264 		.ascii	"usbd init fault\000"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 3


  60      20696E69 
  60      74206661 
  60      756C7400 
  61              		.align	2
  62              	.LC1:
  63 0010 63616E6E 		.ascii	"cannot Register Class\000"
  63      6F742052 
  63      65676973 
  63      74657220 
  63      436C6173 
  64 0026 0000     		.align	2
  65              	.LC2:
  66 0028 63616E6E 		.ascii	"cannot start usbd\000"
  66      6F742073 
  66      74617274 
  66      20757362 
  66      6400
  67              		.section	.text.MX_USB_DEVICE_Init,"ax",%progbits
  68              		.align	1
  69              		.global	MX_USB_DEVICE_Init
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	MX_USB_DEVICE_Init:
  76              	.LFB146:
  57:usb/usb_device.c **** 
  58:usb/usb_device.c **** /**
  59:usb/usb_device.c ****   * Init USB device Library, add supported class and start the library
  60:usb/usb_device.c ****   * @retval None
  61:usb/usb_device.c ****   */
  62:usb/usb_device.c **** void MX_USB_DEVICE_Init(void)
  63:usb/usb_device.c **** {
  77              		.loc 1 63 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 08B5     		push	{r3, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
  64:usb/usb_device.c ****   /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */
  65:usb/usb_device.c **** 
  66:usb/usb_device.c ****   /* USER CODE END USB_DEVICE_Init_PreTreatment */
  67:usb/usb_device.c **** 
  68:usb/usb_device.c ****   /* Init Device Library, add supported class and start the library. */
  69:usb/usb_device.c ****   if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
  86              		.loc 1 69 3 view .LVU12
  87              		.loc 1 69 7 is_stmt 0 view .LVU13
  88 0002 0022     		movs	r2, #0
  89 0004 0D49     		ldr	r1, .L12
  90 0006 0E48     		ldr	r0, .L12+4
  91 0008 FFF7FEFF 		bl	USBD_Init
  92              	.LVL0:
  93              		.loc 1 69 6 view .LVU14
  94 000c 48B9     		cbnz	r0, .L9
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 4


  95              	.L5:
  70:usb/usb_device.c ****   {
  71:usb/usb_device.c ****     Error_Handler("usbd init fault");
  72:usb/usb_device.c ****   }
  73:usb/usb_device.c ****   if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID) != USBD_OK)
  96              		.loc 1 73 3 is_stmt 1 view .LVU15
  97              		.loc 1 73 7 is_stmt 0 view .LVU16
  98 000e 0D49     		ldr	r1, .L12+8
  99 0010 0B48     		ldr	r0, .L12+4
 100 0012 FFF7FEFF 		bl	USBD_RegisterClass
 101              	.LVL1:
 102              		.loc 1 73 6 view .LVU17
 103 0016 40B9     		cbnz	r0, .L10
 104              	.L6:
  74:usb/usb_device.c ****   {
  75:usb/usb_device.c ****     Error_Handler("cannot Register Class");
  76:usb/usb_device.c ****   }
  77:usb/usb_device.c ****   if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 105              		.loc 1 77 3 is_stmt 1 view .LVU18
 106              		.loc 1 77 7 is_stmt 0 view .LVU19
 107 0018 0948     		ldr	r0, .L12+4
 108 001a FFF7FEFF 		bl	USBD_Start
 109              	.LVL2:
 110              		.loc 1 77 6 view .LVU20
 111 001e 40B9     		cbnz	r0, .L11
 112              	.L4:
  78:usb/usb_device.c ****   {
  79:usb/usb_device.c ****     Error_Handler("cannot start usbd");
  80:usb/usb_device.c ****   }
  81:usb/usb_device.c **** 
  82:usb/usb_device.c ****   /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  83:usb/usb_device.c **** 
  84:usb/usb_device.c ****   /* USER CODE END USB_DEVICE_Init_PostTreatment */
  85:usb/usb_device.c **** }
 113              		.loc 1 85 1 view .LVU21
 114 0020 08BD     		pop	{r3, pc}
 115              	.L9:
  71:usb/usb_device.c ****   }
 116              		.loc 1 71 5 is_stmt 1 view .LVU22
 117 0022 0948     		ldr	r0, .L12+12
 118 0024 FFF7FEFF 		bl	Error_Handler
 119              	.LVL3:
 120 0028 F1E7     		b	.L5
 121              	.L10:
  75:usb/usb_device.c ****   }
 122              		.loc 1 75 5 view .LVU23
 123 002a 0848     		ldr	r0, .L12+16
 124 002c FFF7FEFF 		bl	Error_Handler
 125              	.LVL4:
 126 0030 F2E7     		b	.L6
 127              	.L11:
  79:usb/usb_device.c ****   }
 128              		.loc 1 79 5 view .LVU24
 129 0032 0748     		ldr	r0, .L12+20
 130 0034 FFF7FEFF 		bl	Error_Handler
 131              	.LVL5:
 132              		.loc 1 85 1 is_stmt 0 view .LVU25
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 5


 133 0038 F2E7     		b	.L4
 134              	.L13:
 135 003a 00BF     		.align	2
 136              	.L12:
 137 003c 00000000 		.word	FS_Desc
 138 0040 00000000 		.word	hUsbDeviceFS
 139 0044 00000000 		.word	USBD_HID
 140 0048 00000000 		.word	.LC0
 141 004c 10000000 		.word	.LC1
 142 0050 28000000 		.word	.LC2
 143              		.cfi_endproc
 144              	.LFE146:
 146              		.section	.text.USBDeviceReportHandler,"ax",%progbits
 147              		.align	1
 148              		.global	USBDeviceReportHandler
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv5-d16
 154              	USBDeviceReportHandler:
 155              	.LVL6:
 156              	.LFB147:
  86:usb/usb_device.c **** 
  87:usb/usb_device.c **** 
  88:usb/usb_device.c **** /**
  89:usb/usb_device.c ****   * @brief  Function implementing the usb thread.
  90:usb/usb_device.c ****   * @param  argument: Not used
  91:usb/usb_device.c ****   * @retval None
  92:usb/usb_device.c ****   */
  93:usb/usb_device.c **** void USBDeviceReportHandler(void *pvParameters)
  94:usb/usb_device.c **** {
 157              		.loc 1 94 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		.loc 1 94 1 is_stmt 0 view .LVU27
 163 0000 08B5     		push	{r3, lr}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 3, -8
 167              		.cfi_offset 14, -4
  95:usb/usb_device.c ****   /* init code for USB_DEVICE */
  96:usb/usb_device.c ****   MX_USB_DEVICE_Init();
 168              		.loc 1 96 3 is_stmt 1 view .LVU28
 169 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 170              	.LVL7:
 171              	.L15:
  97:usb/usb_device.c **** 
  98:usb/usb_device.c **** 
  99:usb/usb_device.c ****   /* Infinite loop */
 100:usb/usb_device.c ****   while(1)
 172              		.loc 1 100 3 discriminator 1 view .LVU29
 173              	.LBB2:
 101:usb/usb_device.c ****   {
 102:usb/usb_device.c ****     USBD_HID_GetPos();
 174              		.loc 1 102 5 discriminator 1 view .LVU30
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 6


 175 0006 FFF7FEFF 		bl	USBD_HID_GetPos
 176              	.LVL8:
 103:usb/usb_device.c ****     //USBD_HID_SendReport(&hUsbDeviceFS, HID_Buffer, 4);
 104:usb/usb_device.c ****     vTaskDelay(100);
 177              		.loc 1 104 5 discriminator 1 view .LVU31
 178 000a 6420     		movs	r0, #100
 179 000c FFF7FEFF 		bl	vTaskDelay
 180              	.LVL9:
 181              	.LBE2:
 100:usb/usb_device.c ****   {
 182              		.loc 1 100 8 discriminator 1 view .LVU32
 183 0010 F9E7     		b	.L15
 184              		.cfi_endproc
 185              	.LFE147:
 187              		.comm	hUsbDeviceFS,720,4
 188              		.section	.bss.HID_Buffer,"aw",%nobits
 189              		.align	2
 190              		.set	.LANCHOR0,. + 0
 193              	HID_Buffer:
 194 0000 00000000 		.space	4
 195              		.text
 196              	.Letext0:
 197              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 198              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 199              		.file 4 "dev/CMSIS/Include/core_cm7.h"
 200              		.file 5 "dev/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 201              		.file 6 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 202              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 203              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 204              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 205              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 206              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 207              		.file 12 "lib/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 208              		.file 13 "usb/usbd_desc.h"
 209              		.file 14 "lib/STM32_USB_Device_Library/Class/HID/Inc/usbd_hid.h"
 210              		.file 15 "lib/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 211              		.file 16 "user/Inc/main.h"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 usb_device.c
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:17     .text.USBD_HID_GetPos:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:24     .text.USBD_HID_GetPos:00000000 USBD_HID_GetPos
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:53     .text.USBD_HID_GetPos:00000010 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:58     .rodata.MX_USB_DEVICE_Init.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:68     .text.MX_USB_DEVICE_Init:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:75     .text.MX_USB_DEVICE_Init:00000000 MX_USB_DEVICE_Init
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:137    .text.MX_USB_DEVICE_Init:0000003c $d
                            *COM*:000002d0 hUsbDeviceFS
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:147    .text.USBDeviceReportHandler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:154    .text.USBDeviceReportHandler:00000000 USBDeviceReportHandler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:189    .bss.HID_Buffer:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccqFK8F2.s:193    .bss.HID_Buffer:00000000 HID_Buffer

UNDEFINED SYMBOLS
USBD_Init
USBD_RegisterClass
USBD_Start
Error_Handler
FS_Desc
USBD_HID
vTaskDelay
