ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"queue.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LVL0:
  26              	.LFB32:
  27              		.file 1 "os/queue.c"
   1:os/queue.c    **** /*
   2:os/queue.c    ****  * FreeRTOS Kernel V10.4.3
   3:os/queue.c    ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:os/queue.c    ****  *
   5:os/queue.c    ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:os/queue.c    ****  * this software and associated documentation files (the "Software"), to deal in
   7:os/queue.c    ****  * the Software without restriction, including without limitation the rights to
   8:os/queue.c    ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:os/queue.c    ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:os/queue.c    ****  * subject to the following conditions:
  11:os/queue.c    ****  *
  12:os/queue.c    ****  * The above copyright notice and this permission notice shall be included in all
  13:os/queue.c    ****  * copies or substantial portions of the Software.
  14:os/queue.c    ****  *
  15:os/queue.c    ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:os/queue.c    ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:os/queue.c    ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:os/queue.c    ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:os/queue.c    ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:os/queue.c    ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:os/queue.c    ****  *
  22:os/queue.c    ****  * https://www.FreeRTOS.org
  23:os/queue.c    ****  * https://github.com/FreeRTOS
  24:os/queue.c    ****  *
  25:os/queue.c    ****  */
  26:os/queue.c    **** 
  27:os/queue.c    **** #include <stdlib.h>
  28:os/queue.c    **** #include <string.h>
  29:os/queue.c    **** 
  30:os/queue.c    **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:os/queue.c    ****  * all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 2


  32:os/queue.c    ****  * task.h is included from an application file. */
  33:os/queue.c    **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:os/queue.c    **** 
  35:os/queue.c    **** #include "FreeRTOS.h"
  36:os/queue.c    **** #include "task.h"
  37:os/queue.c    **** #include "queue.h"
  38:os/queue.c    **** 
  39:os/queue.c    **** #if ( configUSE_CO_ROUTINES == 1 )
  40:os/queue.c    ****     #include "croutine.h"
  41:os/queue.c    **** #endif
  42:os/queue.c    **** 
  43:os/queue.c    **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:os/queue.c    ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:os/queue.c    ****  * for the header files above, but not in this file, in order to generate the
  46:os/queue.c    ****  * correct privileged Vs unprivileged linkage and placement. */
  47:os/queue.c    **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:os/queue.c    **** 
  49:os/queue.c    **** 
  50:os/queue.c    **** /* Constants used with the cRxLock and cTxLock structure members. */
  51:os/queue.c    **** #define queueUNLOCKED             ( ( int8_t ) -1 )
  52:os/queue.c    **** #define queueLOCKED_UNMODIFIED    ( ( int8_t ) 0 )
  53:os/queue.c    **** #define queueINT8_MAX             ( ( int8_t ) 127 )
  54:os/queue.c    **** 
  55:os/queue.c    **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:os/queue.c    ****  * pcTail members are used as pointers into the queue storage area.  When the
  57:os/queue.c    ****  * Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:os/queue.c    ****  * not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:os/queue.c    ****  * structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:os/queue.c    ****  * names to the pcHead and structure member to ensure the readability of the code
  61:os/queue.c    ****  * is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:os/queue.c    ****  * a union as their usage is mutually exclusive dependent on what the queue is
  63:os/queue.c    ****  * being used for. */
  64:os/queue.c    **** #define uxQueueType               pcHead
  65:os/queue.c    **** #define queueQUEUE_IS_MUTEX       NULL
  66:os/queue.c    **** 
  67:os/queue.c    **** typedef struct QueuePointers
  68:os/queue.c    **** {
  69:os/queue.c    ****     int8_t * pcTail;     /*< Points to the byte at the end of the queue storage area.  Once more by
  70:os/queue.c    ****     int8_t * pcReadFrom; /*< Points to the last place that a queued item was read from when the str
  71:os/queue.c    **** } QueuePointers_t;
  72:os/queue.c    **** 
  73:os/queue.c    **** typedef struct SemaphoreData
  74:os/queue.c    **** {
  75:os/queue.c    ****     TaskHandle_t xMutexHolder;        /*< The handle of the task that holds the mutex. */
  76:os/queue.c    ****     UBaseType_t uxRecursiveCallCount; /*< Maintains a count of the number of times a recursive mute
  77:os/queue.c    **** } SemaphoreData_t;
  78:os/queue.c    **** 
  79:os/queue.c    **** /* Semaphores do not actually store or copy data, so have an item size of
  80:os/queue.c    ****  * zero. */
  81:os/queue.c    **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH    ( ( UBaseType_t ) 0 )
  82:os/queue.c    **** #define queueMUTEX_GIVE_BLOCK_TIME          ( ( TickType_t ) 0U )
  83:os/queue.c    **** 
  84:os/queue.c    **** #if ( configUSE_PREEMPTION == 0 )
  85:os/queue.c    **** 
  86:os/queue.c    **** /* If the cooperative scheduler is being used then a yield should not be
  87:os/queue.c    ****  * performed just because a higher priority task has been woken. */
  88:os/queue.c    ****     #define queueYIELD_IF_USING_PREEMPTION()
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 3


  89:os/queue.c    **** #else
  90:os/queue.c    ****     #define queueYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  91:os/queue.c    **** #endif
  92:os/queue.c    **** 
  93:os/queue.c    **** /*
  94:os/queue.c    ****  * Definition of the queue used by the scheduler.
  95:os/queue.c    ****  * Items are queued by copy, not reference.  See the following link for the
  96:os/queue.c    ****  * rationale: https://www.FreeRTOS.org/Embedded-RTOS-Queues.html
  97:os/queue.c    ****  */
  98:os/queue.c    **** typedef struct QueueDefinition /* The old naming convention is used to prevent breaking kernel awar
  99:os/queue.c    **** {
 100:os/queue.c    ****     int8_t * pcHead;           /*< Points to the beginning of the queue storage area. */
 101:os/queue.c    ****     int8_t * pcWriteTo;        /*< Points to the free next place in the storage area. */
 102:os/queue.c    **** 
 103:os/queue.c    ****     union
 104:os/queue.c    ****     {
 105:os/queue.c    ****         QueuePointers_t xQueue;     /*< Data required exclusively when this structure is used as a 
 106:os/queue.c    ****         SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a 
 107:os/queue.c    ****     } u;
 108:os/queue.c    **** 
 109:os/queue.c    ****     List_t xTasksWaitingToSend;             /*< List of tasks that are blocked waiting to post onto
 110:os/queue.c    ****     List_t xTasksWaitingToReceive;          /*< List of tasks that are blocked waiting to read from
 111:os/queue.c    **** 
 112:os/queue.c    ****     volatile UBaseType_t uxMessagesWaiting; /*< The number of items currently in the queue. */
 113:os/queue.c    ****     UBaseType_t uxLength;                   /*< The length of the queue defined as the number of it
 114:os/queue.c    ****     UBaseType_t uxItemSize;                 /*< The size of each items that the queue will hold. */
 115:os/queue.c    **** 
 116:os/queue.c    ****     volatile int8_t cRxLock;                /*< Stores the number of items received from the queue 
 117:os/queue.c    ****     volatile int8_t cTxLock;                /*< Stores the number of items transmitted to the queue
 118:os/queue.c    **** 
 119:os/queue.c    ****     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 120:os/queue.c    ****         uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the memory used by the queue was static
 121:os/queue.c    ****     #endif
 122:os/queue.c    **** 
 123:os/queue.c    ****     #if ( configUSE_QUEUE_SETS == 1 )
 124:os/queue.c    ****         struct QueueDefinition * pxQueueSetContainer;
 125:os/queue.c    ****     #endif
 126:os/queue.c    **** 
 127:os/queue.c    ****     #if ( configUSE_TRACE_FACILITY == 1 )
 128:os/queue.c    ****         UBaseType_t uxQueueNumber;
 129:os/queue.c    ****         uint8_t ucQueueType;
 130:os/queue.c    ****     #endif
 131:os/queue.c    **** } xQUEUE;
 132:os/queue.c    **** 
 133:os/queue.c    **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:os/queue.c    ****  * name below to enable the use of older kernel aware debuggers. */
 135:os/queue.c    **** typedef xQUEUE Queue_t;
 136:os/queue.c    **** 
 137:os/queue.c    **** /*-----------------------------------------------------------*/
 138:os/queue.c    **** 
 139:os/queue.c    **** /*
 140:os/queue.c    ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:os/queue.c    ****  * queue structures.  It has no other purpose so is an optional component.
 142:os/queue.c    ****  */
 143:os/queue.c    **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:os/queue.c    **** 
 145:os/queue.c    **** /* The type stored within the queue registry array.  This allows a name
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 4


 146:os/queue.c    ****  * to be assigned to each queue making kernel aware debugging a little
 147:os/queue.c    ****  * more user friendly. */
 148:os/queue.c    ****     typedef struct QUEUE_REGISTRY_ITEM
 149:os/queue.c    ****     {
 150:os/queue.c    ****         const char * pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and s
 151:os/queue.c    ****         QueueHandle_t xHandle;
 152:os/queue.c    ****     } xQueueRegistryItem;
 153:os/queue.c    **** 
 154:os/queue.c    **** /* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:os/queue.c    ****  * new xQueueRegistryItem name below to enable the use of older kernel aware
 156:os/queue.c    ****  * debuggers. */
 157:os/queue.c    ****     typedef xQueueRegistryItem QueueRegistryItem_t;
 158:os/queue.c    **** 
 159:os/queue.c    **** /* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:os/queue.c    ****  * The pcQueueName member of a structure being NULL is indicative of the
 161:os/queue.c    ****  * array position being vacant. */
 162:os/queue.c    ****     PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:os/queue.c    **** 
 164:os/queue.c    **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:os/queue.c    **** 
 166:os/queue.c    **** /*
 167:os/queue.c    ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:os/queue.c    ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:os/queue.c    ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:os/queue.c    ****  * queue is locked it will instead increment the appropriate queue lock count
 171:os/queue.c    ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:os/queue.c    ****  * these lock counts are inspected, and the appropriate action taken.
 173:os/queue.c    ****  */
 174:os/queue.c    **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:os/queue.c    **** 
 176:os/queue.c    **** /*
 177:os/queue.c    ****  * Uses a critical section to determine if there is any data in a queue.
 178:os/queue.c    ****  *
 179:os/queue.c    ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:os/queue.c    ****  */
 181:os/queue.c    **** static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue ) PRIVILEGED_FUNCTION;
 182:os/queue.c    **** 
 183:os/queue.c    **** /*
 184:os/queue.c    ****  * Uses a critical section to determine if there is any space in a queue.
 185:os/queue.c    ****  *
 186:os/queue.c    ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:os/queue.c    ****  */
 188:os/queue.c    **** static BaseType_t prvIsQueueFull( const Queue_t * pxQueue ) PRIVILEGED_FUNCTION;
 189:os/queue.c    **** 
 190:os/queue.c    **** /*
 191:os/queue.c    ****  * Copies an item into the queue, either at the front of the queue or the
 192:os/queue.c    ****  * back of the queue.
 193:os/queue.c    ****  */
 194:os/queue.c    **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
 195:os/queue.c    ****                                       const void * pvItemToQueue,
 196:os/queue.c    ****                                       const BaseType_t xPosition ) PRIVILEGED_FUNCTION;
 197:os/queue.c    **** 
 198:os/queue.c    **** /*
 199:os/queue.c    ****  * Copies an item out of a queue.
 200:os/queue.c    ****  */
 201:os/queue.c    **** static void prvCopyDataFromQueue( Queue_t * const pxQueue,
 202:os/queue.c    ****                                   void * const pvBuffer ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 5


 203:os/queue.c    **** 
 204:os/queue.c    **** #if ( configUSE_QUEUE_SETS == 1 )
 205:os/queue.c    **** 
 206:os/queue.c    **** /*
 207:os/queue.c    ****  * Checks to see if a queue is a member of a queue set, and if so, notifies
 208:os/queue.c    ****  * the queue set that the queue contains data.
 209:os/queue.c    ****  */
 210:os/queue.c    ****     static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTI
 211:os/queue.c    **** #endif
 212:os/queue.c    **** 
 213:os/queue.c    **** /*
 214:os/queue.c    ****  * Called after a Queue_t structure has been allocated either statically or
 215:os/queue.c    ****  * dynamically to fill in the structure's members.
 216:os/queue.c    ****  */
 217:os/queue.c    **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
 218:os/queue.c    ****                                    const UBaseType_t uxItemSize,
 219:os/queue.c    ****                                    uint8_t * pucQueueStorage,
 220:os/queue.c    ****                                    const uint8_t ucQueueType,
 221:os/queue.c    ****                                    Queue_t * pxNewQueue ) PRIVILEGED_FUNCTION;
 222:os/queue.c    **** 
 223:os/queue.c    **** /*
 224:os/queue.c    ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 225:os/queue.c    ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 226:os/queue.c    ****  * as a mutex.
 227:os/queue.c    ****  */
 228:os/queue.c    **** #if ( configUSE_MUTEXES == 1 )
 229:os/queue.c    ****     static void prvInitialiseMutex( Queue_t * pxNewQueue ) PRIVILEGED_FUNCTION;
 230:os/queue.c    **** #endif
 231:os/queue.c    **** 
 232:os/queue.c    **** #if ( configUSE_MUTEXES == 1 )
 233:os/queue.c    **** 
 234:os/queue.c    **** /*
 235:os/queue.c    ****  * If a task waiting for a mutex causes the mutex holder to inherit a
 236:os/queue.c    ****  * priority, but the waiting task times out, then the holder should
 237:os/queue.c    ****  * disinherit the priority - but only down to the highest priority of any
 238:os/queue.c    ****  * other tasks that are waiting for the same mutex.  This function returns
 239:os/queue.c    ****  * that priority.
 240:os/queue.c    ****  */
 241:os/queue.c    ****     static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVIL
 242:os/queue.c    **** #endif
 243:os/queue.c    **** /*-----------------------------------------------------------*/
 244:os/queue.c    **** 
 245:os/queue.c    **** /*
 246:os/queue.c    ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 247:os/queue.c    ****  * accessing the queue event lists.
 248:os/queue.c    ****  */
 249:os/queue.c    **** #define prvLockQueue( pxQueue )                            \
 250:os/queue.c    ****     taskENTER_CRITICAL();                                  \
 251:os/queue.c    ****     {                                                      \
 252:os/queue.c    ****         if( ( pxQueue )->cRxLock == queueUNLOCKED )        \
 253:os/queue.c    ****         {                                                  \
 254:os/queue.c    ****             ( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED; \
 255:os/queue.c    ****         }                                                  \
 256:os/queue.c    ****         if( ( pxQueue )->cTxLock == queueUNLOCKED )        \
 257:os/queue.c    ****         {                                                  \
 258:os/queue.c    ****             ( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED; \
 259:os/queue.c    ****         }                                                  \
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 6


 260:os/queue.c    ****     }                                                      \
 261:os/queue.c    ****     taskEXIT_CRITICAL()
 262:os/queue.c    **** /*-----------------------------------------------------------*/
 263:os/queue.c    **** 
 264:os/queue.c    **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue,
 265:os/queue.c    ****                                BaseType_t xNewQueue )
 266:os/queue.c    **** {
 267:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 268:os/queue.c    **** 
 269:os/queue.c    ****     configASSERT( pxQueue );
 270:os/queue.c    **** 
 271:os/queue.c    ****     taskENTER_CRITICAL();
 272:os/queue.c    ****     {
 273:os/queue.c    ****         pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /
 274:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 275:os/queue.c    ****         pxQueue->pcWriteTo = pxQueue->pcHead;
 276:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->ux
 277:os/queue.c    ****         pxQueue->cRxLock = queueUNLOCKED;
 278:os/queue.c    ****         pxQueue->cTxLock = queueUNLOCKED;
 279:os/queue.c    **** 
 280:os/queue.c    ****         if( xNewQueue == pdFALSE )
 281:os/queue.c    ****         {
 282:os/queue.c    ****             /* If there are tasks blocked waiting to read from the queue, then
 283:os/queue.c    ****              * the tasks will remain blocked as after this function exits the queue
 284:os/queue.c    ****              * will still be empty.  If there are tasks blocked waiting to write to
 285:os/queue.c    ****              * the queue, then one should be unblocked as after this function exits
 286:os/queue.c    ****              * it will be possible to write to it. */
 287:os/queue.c    ****             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 288:os/queue.c    ****             {
 289:os/queue.c    ****                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 290:os/queue.c    ****                 {
 291:os/queue.c    ****                     queueYIELD_IF_USING_PREEMPTION();
 292:os/queue.c    ****                 }
 293:os/queue.c    ****                 else
 294:os/queue.c    ****                 {
 295:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
 296:os/queue.c    ****                 }
 297:os/queue.c    ****             }
 298:os/queue.c    ****             else
 299:os/queue.c    ****             {
 300:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
 301:os/queue.c    ****             }
 302:os/queue.c    ****         }
 303:os/queue.c    ****         else
 304:os/queue.c    ****         {
 305:os/queue.c    ****             /* Ensure the event queues start in the correct state. */
 306:os/queue.c    ****             vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 307:os/queue.c    ****             vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 308:os/queue.c    ****         }
 309:os/queue.c    ****     }
 310:os/queue.c    ****     taskEXIT_CRITICAL();
 311:os/queue.c    **** 
 312:os/queue.c    ****     /* A value is returned for calling semantic consistency with previous
 313:os/queue.c    ****      * versions. */
 314:os/queue.c    ****     return pdPASS;
 315:os/queue.c    **** }
 316:os/queue.c    **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 7


 317:os/queue.c    **** 
 318:os/queue.c    **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 319:os/queue.c    **** 
 320:os/queue.c    ****     QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength,
 321:os/queue.c    ****                                              const UBaseType_t uxItemSize,
 322:os/queue.c    ****                                              uint8_t * pucQueueStorage,
 323:os/queue.c    ****                                              StaticQueue_t * pxStaticQueue,
 324:os/queue.c    ****                                              const uint8_t ucQueueType )
 325:os/queue.c    ****     {
 326:os/queue.c    ****         Queue_t * pxNewQueue;
 327:os/queue.c    **** 
 328:os/queue.c    ****         configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 329:os/queue.c    **** 
 330:os/queue.c    ****         /* The StaticQueue_t structure and the queue storage area must be
 331:os/queue.c    ****          * supplied. */
 332:os/queue.c    ****         configASSERT( pxStaticQueue != NULL );
 333:os/queue.c    **** 
 334:os/queue.c    ****         /* A queue storage area should be provided if the item size is not 0, and
 335:os/queue.c    ****          * should not be provided if the item size is 0. */
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 337:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 338:os/queue.c    **** 
 339:os/queue.c    ****         #if ( configASSERT_DEFINED == 1 )
 340:os/queue.c    ****             {
 341:os/queue.c    ****                 /* Sanity check that the size of the structure used to declare a
 342:os/queue.c    ****                  * variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 343:os/queue.c    ****                  * the real queue and semaphore structures. */
 344:os/queue.c    ****                 volatile size_t xSize = sizeof( StaticQueue_t );
 345:os/queue.c    **** 
 346:os/queue.c    ****                 /* This assertion cannot be branch covered in unit tests */
 347:os/queue.c    ****                 configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 348:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 349:os/queue.c    ****             }
 350:os/queue.c    ****         #endif /* configASSERT_DEFINED */
 351:os/queue.c    **** 
 352:os/queue.c    ****         /* The address of a statically allocated queue was passed in, use it.
 353:os/queue.c    ****          * The address of a statically allocated storage area was also passed in
 354:os/queue.c    ****          * but is already set. */
 355:os/queue.c    ****         pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the str
 356:os/queue.c    **** 
 357:os/queue.c    ****         if( pxNewQueue != NULL )
 358:os/queue.c    ****         {
 359:os/queue.c    ****             #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 360:os/queue.c    ****                 {
 361:os/queue.c    ****                     /* Queues can be allocated wither statically or dynamically, so
 362:os/queue.c    ****                      * note this queue was allocated statically in case the queue is
 363:os/queue.c    ****                      * later deleted. */
 364:os/queue.c    ****                     pxNewQueue->ucStaticallyAllocated = pdTRUE;
 365:os/queue.c    ****                 }
 366:os/queue.c    ****             #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 367:os/queue.c    **** 
 368:os/queue.c    ****             prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQu
 369:os/queue.c    ****         }
 370:os/queue.c    ****         else
 371:os/queue.c    ****         {
 372:os/queue.c    ****             traceQUEUE_CREATE_FAILED( ucQueueType );
 373:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 8


 374:os/queue.c    ****         }
 375:os/queue.c    **** 
 376:os/queue.c    ****         return pxNewQueue;
 377:os/queue.c    ****     }
 378:os/queue.c    **** 
 379:os/queue.c    **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 380:os/queue.c    **** /*-----------------------------------------------------------*/
 381:os/queue.c    **** 
 382:os/queue.c    **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 383:os/queue.c    **** 
 384:os/queue.c    ****     QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength,
 385:os/queue.c    ****                                        const UBaseType_t uxItemSize,
 386:os/queue.c    ****                                        const uint8_t ucQueueType )
 387:os/queue.c    ****     {
 388:os/queue.c    ****         Queue_t * pxNewQueue;
 389:os/queue.c    ****         size_t xQueueSizeInBytes;
 390:os/queue.c    ****         uint8_t * pucQueueStorage;
 391:os/queue.c    **** 
 392:os/queue.c    ****         configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 393:os/queue.c    **** 
 394:os/queue.c    ****         /* Allocate enough space to hold the maximum number of items that
 395:os/queue.c    ****          * can be in the queue at any time.  It is valid for uxItemSize to be
 396:os/queue.c    ****          * zero in the case the queue is used as a semaphore. */
 397:os/queue.c    ****         xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception
 398:os/queue.c    **** 
 399:os/queue.c    ****         /* Check for multiplication overflow. */
 400:os/queue.c    ****         configASSERT( ( uxItemSize == 0 ) || ( uxQueueLength == ( xQueueSizeInBytes / uxItemSize ) 
 401:os/queue.c    **** 
 402:os/queue.c    ****         /* Check for addition overflow. */
 403:os/queue.c    ****         configASSERT( ( sizeof( Queue_t ) + xQueueSizeInBytes ) > xQueueSizeInBytes );
 404:os/queue.c    **** 
 405:os/queue.c    ****         /* Allocate the queue and storage area.  Justification for MISRA
 406:os/queue.c    ****          * deviation as follows:  pvPortMalloc() always ensures returned memory
 407:os/queue.c    ****          * blocks are aligned per the requirements of the MCU stack.  In this case
 408:os/queue.c    ****          * pvPortMalloc() must return a pointer that is guaranteed to meet the
 409:os/queue.c    ****          * alignment requirements of the Queue_t structure - which in this case
 410:os/queue.c    ****          * is an int8_t *.  Therefore, whenever the stack alignment requirements
 411:os/queue.c    ****          * are greater than or equal to the pointer to char requirements the cast
 412:os/queue.c    ****          * is safe.  In other cases alignment requirements are not strict (one or
 413:os/queue.c    ****          * two bytes). */
 414:os/queue.c    ****         pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e
 415:os/queue.c    **** 
 416:os/queue.c    ****         if( pxNewQueue != NULL )
 417:os/queue.c    ****         {
 418:os/queue.c    ****             /* Jump past the queue structure to find the location of the queue
 419:os/queue.c    ****              * storage area. */
 420:os/queue.c    ****             pucQueueStorage = ( uint8_t * ) pxNewQueue;
 421:os/queue.c    ****             pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char 
 422:os/queue.c    **** 
 423:os/queue.c    ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 424:os/queue.c    ****                 {
 425:os/queue.c    ****                     /* Queues can be created either statically or dynamically, so
 426:os/queue.c    ****                      * note this task was created dynamically in case it is later
 427:os/queue.c    ****                      * deleted. */
 428:os/queue.c    ****                     pxNewQueue->ucStaticallyAllocated = pdFALSE;
 429:os/queue.c    ****                 }
 430:os/queue.c    ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 9


 431:os/queue.c    **** 
 432:os/queue.c    ****             prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQu
 433:os/queue.c    ****         }
 434:os/queue.c    ****         else
 435:os/queue.c    ****         {
 436:os/queue.c    ****             traceQUEUE_CREATE_FAILED( ucQueueType );
 437:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
 438:os/queue.c    ****         }
 439:os/queue.c    **** 
 440:os/queue.c    ****         return pxNewQueue;
 441:os/queue.c    ****     }
 442:os/queue.c    **** 
 443:os/queue.c    **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 444:os/queue.c    **** /*-----------------------------------------------------------*/
 445:os/queue.c    **** 
 446:os/queue.c    **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
 447:os/queue.c    ****                                    const UBaseType_t uxItemSize,
 448:os/queue.c    ****                                    uint8_t * pucQueueStorage,
 449:os/queue.c    ****                                    const uint8_t ucQueueType,
 450:os/queue.c    ****                                    Queue_t * pxNewQueue )
 451:os/queue.c    **** {
 452:os/queue.c    ****     /* Remove compiler warnings about unused parameters should
 453:os/queue.c    ****      * configUSE_TRACE_FACILITY not be set to 1. */
 454:os/queue.c    ****     ( void ) ucQueueType;
 455:os/queue.c    **** 
 456:os/queue.c    ****     if( uxItemSize == ( UBaseType_t ) 0 )
 457:os/queue.c    ****     {
 458:os/queue.c    ****         /* No RAM was allocated for the queue storage area, but PC head cannot
 459:os/queue.c    ****          * be set to NULL because NULL is used as a key to say the queue is used as
 460:os/queue.c    ****          * a mutex.  Therefore just set pcHead to point to the queue as a benign
 461:os/queue.c    ****          * value that is known to be within the memory map. */
 462:os/queue.c    ****         pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 463:os/queue.c    ****     }
 464:os/queue.c    ****     else
 465:os/queue.c    ****     {
 466:os/queue.c    ****         /* Set the head to the start of the queue storage area. */
 467:os/queue.c    ****         pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 468:os/queue.c    ****     }
 469:os/queue.c    **** 
 470:os/queue.c    ****     /* Initialise the queue members as described where the queue type is
 471:os/queue.c    ****      * defined. */
 472:os/queue.c    ****     pxNewQueue->uxLength = uxQueueLength;
 473:os/queue.c    ****     pxNewQueue->uxItemSize = uxItemSize;
 474:os/queue.c    ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 475:os/queue.c    **** 
 476:os/queue.c    ****     #if ( configUSE_TRACE_FACILITY == 1 )
 477:os/queue.c    ****         {
 478:os/queue.c    ****             pxNewQueue->ucQueueType = ucQueueType;
 479:os/queue.c    ****         }
 480:os/queue.c    ****     #endif /* configUSE_TRACE_FACILITY */
 481:os/queue.c    **** 
 482:os/queue.c    ****     #if ( configUSE_QUEUE_SETS == 1 )
 483:os/queue.c    ****         {
 484:os/queue.c    ****             pxNewQueue->pxQueueSetContainer = NULL;
 485:os/queue.c    ****         }
 486:os/queue.c    ****     #endif /* configUSE_QUEUE_SETS */
 487:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 10


 488:os/queue.c    ****     traceQUEUE_CREATE( pxNewQueue );
 489:os/queue.c    **** }
 490:os/queue.c    **** /*-----------------------------------------------------------*/
 491:os/queue.c    **** 
 492:os/queue.c    **** #if ( configUSE_MUTEXES == 1 )
 493:os/queue.c    **** 
 494:os/queue.c    ****     static void prvInitialiseMutex( Queue_t * pxNewQueue )
 495:os/queue.c    ****     {
 496:os/queue.c    ****         if( pxNewQueue != NULL )
 497:os/queue.c    ****         {
 498:os/queue.c    ****             /* The queue create function will set all the queue structure members
 499:os/queue.c    ****             * correctly for a generic queue, but this function is creating a
 500:os/queue.c    ****             * mutex.  Overwrite those members that need to be set differently -
 501:os/queue.c    ****             * in particular the information required for priority inheritance. */
 502:os/queue.c    ****             pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 503:os/queue.c    ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 504:os/queue.c    **** 
 505:os/queue.c    ****             /* In case this is a recursive mutex. */
 506:os/queue.c    ****             pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 507:os/queue.c    **** 
 508:os/queue.c    ****             traceCREATE_MUTEX( pxNewQueue );
 509:os/queue.c    **** 
 510:os/queue.c    ****             /* Start with the semaphore in the expected state. */
 511:os/queue.c    ****             ( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 512:os/queue.c    ****         }
 513:os/queue.c    ****         else
 514:os/queue.c    ****         {
 515:os/queue.c    ****             traceCREATE_MUTEX_FAILED();
 516:os/queue.c    ****         }
 517:os/queue.c    ****     }
 518:os/queue.c    **** 
 519:os/queue.c    **** #endif /* configUSE_MUTEXES */
 520:os/queue.c    **** /*-----------------------------------------------------------*/
 521:os/queue.c    **** 
 522:os/queue.c    **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 523:os/queue.c    **** 
 524:os/queue.c    ****     QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 525:os/queue.c    ****     {
 526:os/queue.c    ****         QueueHandle_t xNewQueue;
 527:os/queue.c    ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 528:os/queue.c    **** 
 529:os/queue.c    ****         xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 530:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 531:os/queue.c    **** 
 532:os/queue.c    ****         return xNewQueue;
 533:os/queue.c    ****     }
 534:os/queue.c    **** 
 535:os/queue.c    **** #endif /* configUSE_MUTEXES */
 536:os/queue.c    **** /*-----------------------------------------------------------*/
 537:os/queue.c    **** 
 538:os/queue.c    **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 539:os/queue.c    **** 
 540:os/queue.c    ****     QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType,
 541:os/queue.c    ****                                            StaticQueue_t * pxStaticQueue )
 542:os/queue.c    ****     {
 543:os/queue.c    ****         QueueHandle_t xNewQueue;
 544:os/queue.c    ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 11


 545:os/queue.c    **** 
 546:os/queue.c    ****         /* Prevent compiler warnings about unused parameters if
 547:os/queue.c    ****          * configUSE_TRACE_FACILITY does not equal 1. */
 548:os/queue.c    ****         ( void ) ucQueueType;
 549:os/queue.c    **** 
 550:os/queue.c    ****         xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQ
 551:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 552:os/queue.c    **** 
 553:os/queue.c    ****         return xNewQueue;
 554:os/queue.c    ****     }
 555:os/queue.c    **** 
 556:os/queue.c    **** #endif /* configUSE_MUTEXES */
 557:os/queue.c    **** /*-----------------------------------------------------------*/
 558:os/queue.c    **** 
 559:os/queue.c    **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 560:os/queue.c    **** 
 561:os/queue.c    ****     TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 562:os/queue.c    ****     {
 563:os/queue.c    ****         TaskHandle_t pxReturn;
 564:os/queue.c    ****         Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 565:os/queue.c    **** 
 566:os/queue.c    ****         configASSERT( xSemaphore );
 567:os/queue.c    **** 
 568:os/queue.c    ****         /* This function is called by xSemaphoreGetMutexHolder(), and should not
 569:os/queue.c    ****          * be called directly.  Note:  This is a good way of determining if the
 570:os/queue.c    ****          * calling task is the mutex holder, but not a good way of determining the
 571:os/queue.c    ****          * identity of the mutex holder, as the holder may change between the
 572:os/queue.c    ****          * following critical section exiting and the function returning. */
 573:os/queue.c    ****         taskENTER_CRITICAL();
 574:os/queue.c    ****         {
 575:os/queue.c    ****             if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 576:os/queue.c    ****             {
 577:os/queue.c    ****                 pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 578:os/queue.c    ****             }
 579:os/queue.c    ****             else
 580:os/queue.c    ****             {
 581:os/queue.c    ****                 pxReturn = NULL;
 582:os/queue.c    ****             }
 583:os/queue.c    ****         }
 584:os/queue.c    ****         taskEXIT_CRITICAL();
 585:os/queue.c    **** 
 586:os/queue.c    ****         return pxReturn;
 587:os/queue.c    ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 588:os/queue.c    **** 
 589:os/queue.c    **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) ) */
 590:os/queue.c    **** /*-----------------------------------------------------------*/
 591:os/queue.c    **** 
 592:os/queue.c    **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 593:os/queue.c    **** 
 594:os/queue.c    ****     TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 595:os/queue.c    ****     {
 596:os/queue.c    ****         TaskHandle_t pxReturn;
 597:os/queue.c    **** 
 598:os/queue.c    ****         configASSERT( xSemaphore );
 599:os/queue.c    **** 
 600:os/queue.c    ****         /* Mutexes cannot be used in interrupt service routines, so the mutex
 601:os/queue.c    ****          * holder should not change in an ISR, and therefore a critical section is
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 12


 602:os/queue.c    ****          * not required here. */
 603:os/queue.c    ****         if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 604:os/queue.c    ****         {
 605:os/queue.c    ****             pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 606:os/queue.c    ****         }
 607:os/queue.c    ****         else
 608:os/queue.c    ****         {
 609:os/queue.c    ****             pxReturn = NULL;
 610:os/queue.c    ****         }
 611:os/queue.c    **** 
 612:os/queue.c    ****         return pxReturn;
 613:os/queue.c    ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 614:os/queue.c    **** 
 615:os/queue.c    **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) ) */
 616:os/queue.c    **** /*-----------------------------------------------------------*/
 617:os/queue.c    **** 
 618:os/queue.c    **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 619:os/queue.c    **** 
 620:os/queue.c    ****     BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 621:os/queue.c    ****     {
 622:os/queue.c    ****         BaseType_t xReturn;
 623:os/queue.c    ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 624:os/queue.c    **** 
 625:os/queue.c    ****         configASSERT( pxMutex );
 626:os/queue.c    **** 
 627:os/queue.c    ****         /* If this is the task that holds the mutex then xMutexHolder will not
 628:os/queue.c    ****          * change outside of this task.  If this task does not hold the mutex then
 629:os/queue.c    ****          * pxMutexHolder can never coincidentally equal the tasks handle, and as
 630:os/queue.c    ****          * this is the only condition we are interested in it does not matter if
 631:os/queue.c    ****          * pxMutexHolder is accessed simultaneously by another task.  Therefore no
 632:os/queue.c    ****          * mutual exclusion is required to test the pxMutexHolder variable. */
 633:os/queue.c    ****         if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 634:os/queue.c    ****         {
 635:os/queue.c    ****             traceGIVE_MUTEX_RECURSIVE( pxMutex );
 636:os/queue.c    **** 
 637:os/queue.c    ****             /* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 638:os/queue.c    ****              * the task handle, therefore no underflow check is required.  Also,
 639:os/queue.c    ****              * uxRecursiveCallCount is only modified by the mutex holder, and as
 640:os/queue.c    ****              * there can only be one, no mutual exclusion is required to modify the
 641:os/queue.c    ****              * uxRecursiveCallCount member. */
 642:os/queue.c    ****             ( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 643:os/queue.c    **** 
 644:os/queue.c    ****             /* Has the recursive call count unwound to 0? */
 645:os/queue.c    ****             if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 646:os/queue.c    ****             {
 647:os/queue.c    ****                 /* Return the mutex.  This will automatically unblock any other
 648:os/queue.c    ****                  * task that might be waiting to access the mutex. */
 649:os/queue.c    ****                 ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO
 650:os/queue.c    ****             }
 651:os/queue.c    ****             else
 652:os/queue.c    ****             {
 653:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
 654:os/queue.c    ****             }
 655:os/queue.c    **** 
 656:os/queue.c    ****             xReturn = pdPASS;
 657:os/queue.c    ****         }
 658:os/queue.c    ****         else
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 13


 659:os/queue.c    ****         {
 660:os/queue.c    ****             /* The mutex cannot be given because the calling task is not the
 661:os/queue.c    ****              * holder. */
 662:os/queue.c    ****             xReturn = pdFAIL;
 663:os/queue.c    **** 
 664:os/queue.c    ****             traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 665:os/queue.c    ****         }
 666:os/queue.c    **** 
 667:os/queue.c    ****         return xReturn;
 668:os/queue.c    ****     }
 669:os/queue.c    **** 
 670:os/queue.c    **** #endif /* configUSE_RECURSIVE_MUTEXES */
 671:os/queue.c    **** /*-----------------------------------------------------------*/
 672:os/queue.c    **** 
 673:os/queue.c    **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 674:os/queue.c    **** 
 675:os/queue.c    ****     BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex,
 676:os/queue.c    ****                                          TickType_t xTicksToWait )
 677:os/queue.c    ****     {
 678:os/queue.c    ****         BaseType_t xReturn;
 679:os/queue.c    ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 680:os/queue.c    **** 
 681:os/queue.c    ****         configASSERT( pxMutex );
 682:os/queue.c    **** 
 683:os/queue.c    ****         /* Comments regarding mutual exclusion as per those within
 684:os/queue.c    ****          * xQueueGiveMutexRecursive(). */
 685:os/queue.c    **** 
 686:os/queue.c    ****         traceTAKE_MUTEX_RECURSIVE( pxMutex );
 687:os/queue.c    **** 
 688:os/queue.c    ****         if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 689:os/queue.c    ****         {
 690:os/queue.c    ****             ( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 691:os/queue.c    ****             xReturn = pdPASS;
 692:os/queue.c    ****         }
 693:os/queue.c    ****         else
 694:os/queue.c    ****         {
 695:os/queue.c    ****             xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 696:os/queue.c    **** 
 697:os/queue.c    ****             /* pdPASS will only be returned if the mutex was successfully
 698:os/queue.c    ****              * obtained.  The calling task may have entered the Blocked state
 699:os/queue.c    ****              * before reaching here. */
 700:os/queue.c    ****             if( xReturn != pdFAIL )
 701:os/queue.c    ****             {
 702:os/queue.c    ****                 ( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 703:os/queue.c    ****             }
 704:os/queue.c    ****             else
 705:os/queue.c    ****             {
 706:os/queue.c    ****                 traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 707:os/queue.c    ****             }
 708:os/queue.c    ****         }
 709:os/queue.c    **** 
 710:os/queue.c    ****         return xReturn;
 711:os/queue.c    ****     }
 712:os/queue.c    **** 
 713:os/queue.c    **** #endif /* configUSE_RECURSIVE_MUTEXES */
 714:os/queue.c    **** /*-----------------------------------------------------------*/
 715:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 14


 716:os/queue.c    **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 717:os/queue.c    **** 
 718:os/queue.c    ****     QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount,
 719:os/queue.c    ****                                                        const UBaseType_t uxInitialCount,
 720:os/queue.c    ****                                                        StaticQueue_t * pxStaticQueue )
 721:os/queue.c    ****     {
 722:os/queue.c    ****         QueueHandle_t xHandle;
 723:os/queue.c    **** 
 724:os/queue.c    ****         configASSERT( uxMaxCount != 0 );
 725:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 726:os/queue.c    **** 
 727:os/queue.c    ****         xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, px
 728:os/queue.c    **** 
 729:os/queue.c    ****         if( xHandle != NULL )
 730:os/queue.c    ****         {
 731:os/queue.c    ****             ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 732:os/queue.c    **** 
 733:os/queue.c    ****             traceCREATE_COUNTING_SEMAPHORE();
 734:os/queue.c    ****         }
 735:os/queue.c    ****         else
 736:os/queue.c    ****         {
 737:os/queue.c    ****             traceCREATE_COUNTING_SEMAPHORE_FAILED();
 738:os/queue.c    ****         }
 739:os/queue.c    **** 
 740:os/queue.c    ****         return xHandle;
 741:os/queue.c    ****     }
 742:os/queue.c    **** 
 743:os/queue.c    **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 744:os/queue.c    **** /*-----------------------------------------------------------*/
 745:os/queue.c    **** 
 746:os/queue.c    **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 747:os/queue.c    **** 
 748:os/queue.c    ****     QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount,
 749:os/queue.c    ****                                                  const UBaseType_t uxInitialCount )
 750:os/queue.c    ****     {
 751:os/queue.c    ****         QueueHandle_t xHandle;
 752:os/queue.c    **** 
 753:os/queue.c    ****         configASSERT( uxMaxCount != 0 );
 754:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 755:os/queue.c    **** 
 756:os/queue.c    ****         xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYP
 757:os/queue.c    **** 
 758:os/queue.c    ****         if( xHandle != NULL )
 759:os/queue.c    ****         {
 760:os/queue.c    ****             ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 761:os/queue.c    **** 
 762:os/queue.c    ****             traceCREATE_COUNTING_SEMAPHORE();
 763:os/queue.c    ****         }
 764:os/queue.c    ****         else
 765:os/queue.c    ****         {
 766:os/queue.c    ****             traceCREATE_COUNTING_SEMAPHORE_FAILED();
 767:os/queue.c    ****         }
 768:os/queue.c    **** 
 769:os/queue.c    ****         return xHandle;
 770:os/queue.c    ****     }
 771:os/queue.c    **** 
 772:os/queue.c    **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 15


 773:os/queue.c    **** /*-----------------------------------------------------------*/
 774:os/queue.c    **** 
 775:os/queue.c    **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue,
 776:os/queue.c    ****                               const void * const pvItemToQueue,
 777:os/queue.c    ****                               TickType_t xTicksToWait,
 778:os/queue.c    ****                               const BaseType_t xCopyPosition )
 779:os/queue.c    **** {
 780:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 781:os/queue.c    ****     TimeOut_t xTimeOut;
 782:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 783:os/queue.c    **** 
 784:os/queue.c    ****     configASSERT( pxQueue );
 785:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 786:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 787:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 788:os/queue.c    ****         {
 789:os/queue.c    ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
 790:os/queue.c    ****         }
 791:os/queue.c    ****     #endif
 792:os/queue.c    **** 
 793:os/queue.c    ****     /*lint -save -e904 This function relaxes the coding standard somewhat to
 794:os/queue.c    ****      * allow return statements within the function itself.  This is done in the
 795:os/queue.c    ****      * interest of execution time efficiency. */
 796:os/queue.c    ****     for( ; ; )
 797:os/queue.c    ****     {
 798:os/queue.c    ****         taskENTER_CRITICAL();
 799:os/queue.c    ****         {
 800:os/queue.c    ****             /* Is there room on the queue now?  The running task must be the
 801:os/queue.c    ****              * highest priority task wanting to access the queue.  If the head item
 802:os/queue.c    ****              * in the queue is to be overwritten then it does not matter if the
 803:os/queue.c    ****              * queue is full. */
 804:os/queue.c    ****             if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERW
 805:os/queue.c    ****             {
 806:os/queue.c    ****                 traceQUEUE_SEND( pxQueue );
 807:os/queue.c    **** 
 808:os/queue.c    ****                 #if ( configUSE_QUEUE_SETS == 1 )
 809:os/queue.c    ****                     {
 810:os/queue.c    ****                         const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 811:os/queue.c    **** 
 812:os/queue.c    ****                         xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition 
 813:os/queue.c    **** 
 814:os/queue.c    ****                         if( pxQueue->pxQueueSetContainer != NULL )
 815:os/queue.c    ****                         {
 816:os/queue.c    ****                             if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting 
 817:os/queue.c    ****                             {
 818:os/queue.c    ****                                 /* Do not notify the queue set as an existing item
 819:os/queue.c    ****                                  * was overwritten in the queue so the number of items
 820:os/queue.c    ****                                  * in the queue has not changed. */
 821:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
 822:os/queue.c    ****                             }
 823:os/queue.c    ****                             else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 824:os/queue.c    ****                             {
 825:os/queue.c    ****                                 /* The queue is a member of a queue set, and posting
 826:os/queue.c    ****                                  * to the queue set caused a higher priority task to
 827:os/queue.c    ****                                  * unblock. A context switch is required. */
 828:os/queue.c    ****                                 queueYIELD_IF_USING_PREEMPTION();
 829:os/queue.c    ****                             }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 16


 830:os/queue.c    ****                             else
 831:os/queue.c    ****                             {
 832:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
 833:os/queue.c    ****                             }
 834:os/queue.c    ****                         }
 835:os/queue.c    ****                         else
 836:os/queue.c    ****                         {
 837:os/queue.c    ****                             /* If there was a task waiting for data to arrive on the
 838:os/queue.c    ****                              * queue then unblock it now. */
 839:os/queue.c    ****                             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALS
 840:os/queue.c    ****                             {
 841:os/queue.c    ****                                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) 
 842:os/queue.c    ****                                 {
 843:os/queue.c    ****                                     /* The unblocked task has a priority higher than
 844:os/queue.c    ****                                      * our own so yield immediately.  Yes it is ok to
 845:os/queue.c    ****                                      * do this from within the critical section - the
 846:os/queue.c    ****                                      * kernel takes care of that. */
 847:os/queue.c    ****                                     queueYIELD_IF_USING_PREEMPTION();
 848:os/queue.c    ****                                 }
 849:os/queue.c    ****                                 else
 850:os/queue.c    ****                                 {
 851:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
 852:os/queue.c    ****                                 }
 853:os/queue.c    ****                             }
 854:os/queue.c    ****                             else if( xYieldRequired != pdFALSE )
 855:os/queue.c    ****                             {
 856:os/queue.c    ****                                 /* This path is a special case that will only get
 857:os/queue.c    ****                                  * executed if the task was holding multiple mutexes
 858:os/queue.c    ****                                  * and the mutexes were given back in an order that is
 859:os/queue.c    ****                                  * different to that in which they were taken. */
 860:os/queue.c    ****                                 queueYIELD_IF_USING_PREEMPTION();
 861:os/queue.c    ****                             }
 862:os/queue.c    ****                             else
 863:os/queue.c    ****                             {
 864:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
 865:os/queue.c    ****                             }
 866:os/queue.c    ****                         }
 867:os/queue.c    ****                     }
 868:os/queue.c    ****                 #else /* configUSE_QUEUE_SETS */
 869:os/queue.c    ****                     {
 870:os/queue.c    ****                         xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition 
 871:os/queue.c    **** 
 872:os/queue.c    ****                         /* If there was a task waiting for data to arrive on the
 873:os/queue.c    ****                          * queue then unblock it now. */
 874:os/queue.c    ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 875:os/queue.c    ****                         {
 876:os/queue.c    ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
 877:os/queue.c    ****                             {
 878:os/queue.c    ****                                 /* The unblocked task has a priority higher than
 879:os/queue.c    ****                                  * our own so yield immediately.  Yes it is ok to do
 880:os/queue.c    ****                                  * this from within the critical section - the kernel
 881:os/queue.c    ****                                  * takes care of that. */
 882:os/queue.c    ****                                 queueYIELD_IF_USING_PREEMPTION();
 883:os/queue.c    ****                             }
 884:os/queue.c    ****                             else
 885:os/queue.c    ****                             {
 886:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 17


 887:os/queue.c    ****                             }
 888:os/queue.c    ****                         }
 889:os/queue.c    ****                         else if( xYieldRequired != pdFALSE )
 890:os/queue.c    ****                         {
 891:os/queue.c    ****                             /* This path is a special case that will only get
 892:os/queue.c    ****                              * executed if the task was holding multiple mutexes and
 893:os/queue.c    ****                              * the mutexes were given back in an order that is
 894:os/queue.c    ****                              * different to that in which they were taken. */
 895:os/queue.c    ****                             queueYIELD_IF_USING_PREEMPTION();
 896:os/queue.c    ****                         }
 897:os/queue.c    ****                         else
 898:os/queue.c    ****                         {
 899:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
 900:os/queue.c    ****                         }
 901:os/queue.c    ****                     }
 902:os/queue.c    ****                 #endif /* configUSE_QUEUE_SETS */
 903:os/queue.c    **** 
 904:os/queue.c    ****                 taskEXIT_CRITICAL();
 905:os/queue.c    ****                 return pdPASS;
 906:os/queue.c    ****             }
 907:os/queue.c    ****             else
 908:os/queue.c    ****             {
 909:os/queue.c    ****                 if( xTicksToWait == ( TickType_t ) 0 )
 910:os/queue.c    ****                 {
 911:os/queue.c    ****                     /* The queue was full and no block time is specified (or
 912:os/queue.c    ****                      * the block time has expired) so leave now. */
 913:os/queue.c    ****                     taskEXIT_CRITICAL();
 914:os/queue.c    **** 
 915:os/queue.c    ****                     /* Return to the original privilege level before exiting
 916:os/queue.c    ****                      * the function. */
 917:os/queue.c    ****                     traceQUEUE_SEND_FAILED( pxQueue );
 918:os/queue.c    ****                     return errQUEUE_FULL;
 919:os/queue.c    ****                 }
 920:os/queue.c    ****                 else if( xEntryTimeSet == pdFALSE )
 921:os/queue.c    ****                 {
 922:os/queue.c    ****                     /* The queue was full and a block time was specified so
 923:os/queue.c    ****                      * configure the timeout structure. */
 924:os/queue.c    ****                     vTaskInternalSetTimeOutState( &xTimeOut );
 925:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
 926:os/queue.c    ****                 }
 927:os/queue.c    ****                 else
 928:os/queue.c    ****                 {
 929:os/queue.c    ****                     /* Entry time was already set. */
 930:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
 931:os/queue.c    ****                 }
 932:os/queue.c    ****             }
 933:os/queue.c    ****         }
 934:os/queue.c    ****         taskEXIT_CRITICAL();
 935:os/queue.c    **** 
 936:os/queue.c    ****         /* Interrupts and other tasks can send to and receive from the queue
 937:os/queue.c    ****          * now the critical section has been exited. */
 938:os/queue.c    **** 
 939:os/queue.c    ****         vTaskSuspendAll();
 940:os/queue.c    ****         prvLockQueue( pxQueue );
 941:os/queue.c    **** 
 942:os/queue.c    ****         /* Update the timeout state to see if it has expired yet. */
 943:os/queue.c    ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 18


 944:os/queue.c    ****         {
 945:os/queue.c    ****             if( prvIsQueueFull( pxQueue ) != pdFALSE )
 946:os/queue.c    ****             {
 947:os/queue.c    ****                 traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 948:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 949:os/queue.c    **** 
 950:os/queue.c    ****                 /* Unlocking the queue means queue events can effect the
 951:os/queue.c    ****                  * event list. It is possible that interrupts occurring now
 952:os/queue.c    ****                  * remove this task from the event list again - but as the
 953:os/queue.c    ****                  * scheduler is suspended the task will go onto the pending
 954:os/queue.c    ****                  * ready list instead of the actual ready list. */
 955:os/queue.c    ****                 prvUnlockQueue( pxQueue );
 956:os/queue.c    **** 
 957:os/queue.c    ****                 /* Resuming the scheduler will move tasks from the pending
 958:os/queue.c    ****                  * ready list into the ready list - so it is feasible that this
 959:os/queue.c    ****                  * task is already in the ready list before it yields - in which
 960:os/queue.c    ****                  * case the yield will not cause a context switch unless there
 961:os/queue.c    ****                  * is also a higher priority task in the pending ready list. */
 962:os/queue.c    ****                 if( xTaskResumeAll() == pdFALSE )
 963:os/queue.c    ****                 {
 964:os/queue.c    ****                     portYIELD_WITHIN_API();
 965:os/queue.c    ****                 }
 966:os/queue.c    ****             }
 967:os/queue.c    ****             else
 968:os/queue.c    ****             {
 969:os/queue.c    ****                 /* Try again. */
 970:os/queue.c    ****                 prvUnlockQueue( pxQueue );
 971:os/queue.c    ****                 ( void ) xTaskResumeAll();
 972:os/queue.c    ****             }
 973:os/queue.c    ****         }
 974:os/queue.c    ****         else
 975:os/queue.c    ****         {
 976:os/queue.c    ****             /* The timeout has expired. */
 977:os/queue.c    ****             prvUnlockQueue( pxQueue );
 978:os/queue.c    ****             ( void ) xTaskResumeAll();
 979:os/queue.c    **** 
 980:os/queue.c    ****             traceQUEUE_SEND_FAILED( pxQueue );
 981:os/queue.c    ****             return errQUEUE_FULL;
 982:os/queue.c    ****         }
 983:os/queue.c    ****     } /*lint -restore */
 984:os/queue.c    **** }
 985:os/queue.c    **** /*-----------------------------------------------------------*/
 986:os/queue.c    **** 
 987:os/queue.c    **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue,
 988:os/queue.c    ****                                      const void * const pvItemToQueue,
 989:os/queue.c    ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 990:os/queue.c    ****                                      const BaseType_t xCopyPosition )
 991:os/queue.c    **** {
 992:os/queue.c    ****     BaseType_t xReturn;
 993:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
 994:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 995:os/queue.c    **** 
 996:os/queue.c    ****     configASSERT( pxQueue );
 997:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 998:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 999:os/queue.c    **** 
1000:os/queue.c    ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 19


1001:os/queue.c    ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1002:os/queue.c    ****      * above the maximum system call priority are kept permanently enabled, even
1003:os/queue.c    ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1004:os/queue.c    ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1005:os/queue.c    ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1006:os/queue.c    ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1007:os/queue.c    ****      * assigned a priority above the configured maximum system call priority.
1008:os/queue.c    ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1009:os/queue.c    ****      * that have been assigned a priority at or (logically) below the maximum
1010:os/queue.c    ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1011:os/queue.c    ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1012:os/queue.c    ****      * More information (albeit Cortex-M specific) is provided on the following
1013:os/queue.c    ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1014:os/queue.c    ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1015:os/queue.c    **** 
1016:os/queue.c    ****     /* Similar to xQueueGenericSend, except without blocking if there is no room
1017:os/queue.c    ****      * in the queue.  Also don't directly wake a task that was blocked on a queue
1018:os/queue.c    ****      * read, instead return a flag to say whether a context switch is required or
1019:os/queue.c    ****      * not (i.e. has a task with a higher priority than us been woken by this
1020:os/queue.c    ****      * post). */
1021:os/queue.c    ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1022:os/queue.c    ****     {
1023:os/queue.c    ****         if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE
1024:os/queue.c    ****         {
1025:os/queue.c    ****             const int8_t cTxLock = pxQueue->cTxLock;
1026:os/queue.c    ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
1027:os/queue.c    **** 
1028:os/queue.c    ****             traceQUEUE_SEND_FROM_ISR( pxQueue );
1029:os/queue.c    **** 
1030:os/queue.c    ****             /* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
1031:os/queue.c    ****              *  semaphore or mutex.  That means prvCopyDataToQueue() cannot result
1032:os/queue.c    ****              *  in a task disinheriting a priority and prvCopyDataToQueue() can be
1033:os/queue.c    ****              *  called here even though the disinherit function does not check if
1034:os/queue.c    ****              *  the scheduler is suspended before accessing the ready lists. */
1035:os/queue.c    ****             ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1036:os/queue.c    **** 
1037:os/queue.c    ****             /* The event list is not altered if the queue is locked.  This will
1038:os/queue.c    ****              * be done when the queue is unlocked later. */
1039:os/queue.c    ****             if( cTxLock == queueUNLOCKED )
1040:os/queue.c    ****             {
1041:os/queue.c    ****                 #if ( configUSE_QUEUE_SETS == 1 )
1042:os/queue.c    ****                     {
1043:os/queue.c    ****                         if( pxQueue->pxQueueSetContainer != NULL )
1044:os/queue.c    ****                         {
1045:os/queue.c    ****                             if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting 
1046:os/queue.c    ****                             {
1047:os/queue.c    ****                                 /* Do not notify the queue set as an existing item
1048:os/queue.c    ****                                  * was overwritten in the queue so the number of items
1049:os/queue.c    ****                                  * in the queue has not changed. */
1050:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1051:os/queue.c    ****                             }
1052:os/queue.c    ****                             else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1053:os/queue.c    ****                             {
1054:os/queue.c    ****                                 /* The queue is a member of a queue set, and posting
1055:os/queue.c    ****                                  * to the queue set caused a higher priority task to
1056:os/queue.c    ****                                  * unblock.  A context switch is required. */
1057:os/queue.c    ****                                 if( pxHigherPriorityTaskWoken != NULL )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 20


1058:os/queue.c    ****                                 {
1059:os/queue.c    ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1060:os/queue.c    ****                                 }
1061:os/queue.c    ****                                 else
1062:os/queue.c    ****                                 {
1063:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
1064:os/queue.c    ****                                 }
1065:os/queue.c    ****                             }
1066:os/queue.c    ****                             else
1067:os/queue.c    ****                             {
1068:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1069:os/queue.c    ****                             }
1070:os/queue.c    ****                         }
1071:os/queue.c    ****                         else
1072:os/queue.c    ****                         {
1073:os/queue.c    ****                             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALS
1074:os/queue.c    ****                             {
1075:os/queue.c    ****                                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) 
1076:os/queue.c    ****                                 {
1077:os/queue.c    ****                                     /* The task waiting has a higher priority so
1078:os/queue.c    ****                                      *  record that a context switch is required. */
1079:os/queue.c    ****                                     if( pxHigherPriorityTaskWoken != NULL )
1080:os/queue.c    ****                                     {
1081:os/queue.c    ****                                         *pxHigherPriorityTaskWoken = pdTRUE;
1082:os/queue.c    ****                                     }
1083:os/queue.c    ****                                     else
1084:os/queue.c    ****                                     {
1085:os/queue.c    ****                                         mtCOVERAGE_TEST_MARKER();
1086:os/queue.c    ****                                     }
1087:os/queue.c    ****                                 }
1088:os/queue.c    ****                                 else
1089:os/queue.c    ****                                 {
1090:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
1091:os/queue.c    ****                                 }
1092:os/queue.c    ****                             }
1093:os/queue.c    ****                             else
1094:os/queue.c    ****                             {
1095:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1096:os/queue.c    ****                             }
1097:os/queue.c    ****                         }
1098:os/queue.c    ****                     }
1099:os/queue.c    ****                 #else /* configUSE_QUEUE_SETS */
1100:os/queue.c    ****                     {
1101:os/queue.c    ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1102:os/queue.c    ****                         {
1103:os/queue.c    ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
1104:os/queue.c    ****                             {
1105:os/queue.c    ****                                 /* The task waiting has a higher priority so record that a
1106:os/queue.c    ****                                  * context switch is required. */
1107:os/queue.c    ****                                 if( pxHigherPriorityTaskWoken != NULL )
1108:os/queue.c    ****                                 {
1109:os/queue.c    ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1110:os/queue.c    ****                                 }
1111:os/queue.c    ****                                 else
1112:os/queue.c    ****                                 {
1113:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
1114:os/queue.c    ****                                 }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 21


1115:os/queue.c    ****                             }
1116:os/queue.c    ****                             else
1117:os/queue.c    ****                             {
1118:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1119:os/queue.c    ****                             }
1120:os/queue.c    ****                         }
1121:os/queue.c    ****                         else
1122:os/queue.c    ****                         {
1123:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
1124:os/queue.c    ****                         }
1125:os/queue.c    **** 
1126:os/queue.c    ****                         /* Not used in this path. */
1127:os/queue.c    ****                         ( void ) uxPreviousMessagesWaiting;
1128:os/queue.c    ****                     }
1129:os/queue.c    ****                 #endif /* configUSE_QUEUE_SETS */
1130:os/queue.c    ****             }
1131:os/queue.c    ****             else
1132:os/queue.c    ****             {
1133:os/queue.c    ****                 /* Increment the lock count so the task that unlocks the queue
1134:os/queue.c    ****                  * knows that data was posted while it was locked. */
1135:os/queue.c    ****                 configASSERT( cTxLock != queueINT8_MAX );
1136:os/queue.c    **** 
1137:os/queue.c    ****                 pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1138:os/queue.c    ****             }
1139:os/queue.c    **** 
1140:os/queue.c    ****             xReturn = pdPASS;
1141:os/queue.c    ****         }
1142:os/queue.c    ****         else
1143:os/queue.c    ****         {
1144:os/queue.c    ****             traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1145:os/queue.c    ****             xReturn = errQUEUE_FULL;
1146:os/queue.c    ****         }
1147:os/queue.c    ****     }
1148:os/queue.c    ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1149:os/queue.c    **** 
1150:os/queue.c    ****     return xReturn;
1151:os/queue.c    **** }
1152:os/queue.c    **** /*-----------------------------------------------------------*/
1153:os/queue.c    **** 
1154:os/queue.c    **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue,
1155:os/queue.c    ****                               BaseType_t * const pxHigherPriorityTaskWoken )
1156:os/queue.c    **** {
1157:os/queue.c    ****     BaseType_t xReturn;
1158:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
1159:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
1160:os/queue.c    **** 
1161:os/queue.c    ****     /* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1162:os/queue.c    ****      * item size is 0.  Don't directly wake a task that was blocked on a queue
1163:os/queue.c    ****      * read, instead return a flag to say whether a context switch is required or
1164:os/queue.c    ****      * not (i.e. has a task with a higher priority than us been woken by this
1165:os/queue.c    ****      * post). */
1166:os/queue.c    **** 
1167:os/queue.c    ****     configASSERT( pxQueue );
1168:os/queue.c    **** 
1169:os/queue.c    ****     /* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1170:os/queue.c    ****      * if the item size is not 0. */
1171:os/queue.c    ****     configASSERT( pxQueue->uxItemSize == 0 );
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 22


1172:os/queue.c    **** 
1173:os/queue.c    ****     /* Normally a mutex would not be given from an interrupt, especially if
1174:os/queue.c    ****      * there is a mutex holder, as priority inheritance makes no sense for an
1175:os/queue.c    ****      * interrupts, only tasks. */
1176:os/queue.c    ****     configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMu
1177:os/queue.c    **** 
1178:os/queue.c    ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1179:os/queue.c    ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1180:os/queue.c    ****      * above the maximum system call priority are kept permanently enabled, even
1181:os/queue.c    ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1182:os/queue.c    ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1183:os/queue.c    ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1184:os/queue.c    ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1185:os/queue.c    ****      * assigned a priority above the configured maximum system call priority.
1186:os/queue.c    ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1187:os/queue.c    ****      * that have been assigned a priority at or (logically) below the maximum
1188:os/queue.c    ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1189:os/queue.c    ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1190:os/queue.c    ****      * More information (albeit Cortex-M specific) is provided on the following
1191:os/queue.c    ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1192:os/queue.c    ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1193:os/queue.c    **** 
1194:os/queue.c    ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1195:os/queue.c    ****     {
1196:os/queue.c    ****         const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1197:os/queue.c    **** 
1198:os/queue.c    ****         /* When the queue is used to implement a semaphore no data is ever
1199:os/queue.c    ****          * moved through the queue but it is still valid to see if the queue 'has
1200:os/queue.c    ****          * space'. */
1201:os/queue.c    ****         if( uxMessagesWaiting < pxQueue->uxLength )
1202:os/queue.c    ****         {
1203:os/queue.c    ****             const int8_t cTxLock = pxQueue->cTxLock;
1204:os/queue.c    **** 
1205:os/queue.c    ****             traceQUEUE_SEND_FROM_ISR( pxQueue );
1206:os/queue.c    **** 
1207:os/queue.c    ****             /* A task can only have an inherited priority if it is a mutex
1208:os/queue.c    ****              * holder - and if there is a mutex holder then the mutex cannot be
1209:os/queue.c    ****              * given from an ISR.  As this is the ISR version of the function it
1210:os/queue.c    ****              * can be assumed there is no mutex holder and no need to determine if
1211:os/queue.c    ****              * priority disinheritance is needed.  Simply increase the count of
1212:os/queue.c    ****              * messages (semaphores) available. */
1213:os/queue.c    ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1214:os/queue.c    **** 
1215:os/queue.c    ****             /* The event list is not altered if the queue is locked.  This will
1216:os/queue.c    ****              * be done when the queue is unlocked later. */
1217:os/queue.c    ****             if( cTxLock == queueUNLOCKED )
1218:os/queue.c    ****             {
1219:os/queue.c    ****                 #if ( configUSE_QUEUE_SETS == 1 )
1220:os/queue.c    ****                     {
1221:os/queue.c    ****                         if( pxQueue->pxQueueSetContainer != NULL )
1222:os/queue.c    ****                         {
1223:os/queue.c    ****                             if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1224:os/queue.c    ****                             {
1225:os/queue.c    ****                                 /* The semaphore is a member of a queue set, and
1226:os/queue.c    ****                                  * posting to the queue set caused a higher priority
1227:os/queue.c    ****                                  * task to unblock.  A context switch is required. */
1228:os/queue.c    ****                                 if( pxHigherPriorityTaskWoken != NULL )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 23


1229:os/queue.c    ****                                 {
1230:os/queue.c    ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1231:os/queue.c    ****                                 }
1232:os/queue.c    ****                                 else
1233:os/queue.c    ****                                 {
1234:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
1235:os/queue.c    ****                                 }
1236:os/queue.c    ****                             }
1237:os/queue.c    ****                             else
1238:os/queue.c    ****                             {
1239:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1240:os/queue.c    ****                             }
1241:os/queue.c    ****                         }
1242:os/queue.c    ****                         else
1243:os/queue.c    ****                         {
1244:os/queue.c    ****                             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALS
1245:os/queue.c    ****                             {
1246:os/queue.c    ****                                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) 
1247:os/queue.c    ****                                 {
1248:os/queue.c    ****                                     /* The task waiting has a higher priority so
1249:os/queue.c    ****                                      *  record that a context switch is required. */
1250:os/queue.c    ****                                     if( pxHigherPriorityTaskWoken != NULL )
1251:os/queue.c    ****                                     {
1252:os/queue.c    ****                                         *pxHigherPriorityTaskWoken = pdTRUE;
1253:os/queue.c    ****                                     }
1254:os/queue.c    ****                                     else
1255:os/queue.c    ****                                     {
1256:os/queue.c    ****                                         mtCOVERAGE_TEST_MARKER();
1257:os/queue.c    ****                                     }
1258:os/queue.c    ****                                 }
1259:os/queue.c    ****                                 else
1260:os/queue.c    ****                                 {
1261:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
1262:os/queue.c    ****                                 }
1263:os/queue.c    ****                             }
1264:os/queue.c    ****                             else
1265:os/queue.c    ****                             {
1266:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1267:os/queue.c    ****                             }
1268:os/queue.c    ****                         }
1269:os/queue.c    ****                     }
1270:os/queue.c    ****                 #else /* configUSE_QUEUE_SETS */
1271:os/queue.c    ****                     {
1272:os/queue.c    ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1273:os/queue.c    ****                         {
1274:os/queue.c    ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
1275:os/queue.c    ****                             {
1276:os/queue.c    ****                                 /* The task waiting has a higher priority so record that a
1277:os/queue.c    ****                                  * context switch is required. */
1278:os/queue.c    ****                                 if( pxHigherPriorityTaskWoken != NULL )
1279:os/queue.c    ****                                 {
1280:os/queue.c    ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1281:os/queue.c    ****                                 }
1282:os/queue.c    ****                                 else
1283:os/queue.c    ****                                 {
1284:os/queue.c    ****                                     mtCOVERAGE_TEST_MARKER();
1285:os/queue.c    ****                                 }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 24


1286:os/queue.c    ****                             }
1287:os/queue.c    ****                             else
1288:os/queue.c    ****                             {
1289:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
1290:os/queue.c    ****                             }
1291:os/queue.c    ****                         }
1292:os/queue.c    ****                         else
1293:os/queue.c    ****                         {
1294:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
1295:os/queue.c    ****                         }
1296:os/queue.c    ****                     }
1297:os/queue.c    ****                 #endif /* configUSE_QUEUE_SETS */
1298:os/queue.c    ****             }
1299:os/queue.c    ****             else
1300:os/queue.c    ****             {
1301:os/queue.c    ****                 /* Increment the lock count so the task that unlocks the queue
1302:os/queue.c    ****                  * knows that data was posted while it was locked. */
1303:os/queue.c    ****                 configASSERT( cTxLock != queueINT8_MAX );
1304:os/queue.c    **** 
1305:os/queue.c    ****                 pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1306:os/queue.c    ****             }
1307:os/queue.c    **** 
1308:os/queue.c    ****             xReturn = pdPASS;
1309:os/queue.c    ****         }
1310:os/queue.c    ****         else
1311:os/queue.c    ****         {
1312:os/queue.c    ****             traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1313:os/queue.c    ****             xReturn = errQUEUE_FULL;
1314:os/queue.c    ****         }
1315:os/queue.c    ****     }
1316:os/queue.c    ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1317:os/queue.c    **** 
1318:os/queue.c    ****     return xReturn;
1319:os/queue.c    **** }
1320:os/queue.c    **** /*-----------------------------------------------------------*/
1321:os/queue.c    **** 
1322:os/queue.c    **** BaseType_t xQueueReceive( QueueHandle_t xQueue,
1323:os/queue.c    ****                           void * const pvBuffer,
1324:os/queue.c    ****                           TickType_t xTicksToWait )
1325:os/queue.c    **** {
1326:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
1327:os/queue.c    ****     TimeOut_t xTimeOut;
1328:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
1329:os/queue.c    **** 
1330:os/queue.c    ****     /* Check the pointer is not NULL. */
1331:os/queue.c    ****     configASSERT( ( pxQueue ) );
1332:os/queue.c    **** 
1333:os/queue.c    ****     /* The buffer into which data is received can only be NULL if the data size
1334:os/queue.c    ****      * is zero (so no data is copied into the buffer). */
1335:os/queue.c    ****     configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) 
1336:os/queue.c    **** 
1337:os/queue.c    ****     /* Cannot block if the scheduler is suspended. */
1338:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1339:os/queue.c    ****         {
1340:os/queue.c    ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
1341:os/queue.c    ****         }
1342:os/queue.c    ****     #endif
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 25


1343:os/queue.c    **** 
1344:os/queue.c    ****     /*lint -save -e904  This function relaxes the coding standard somewhat to
1345:os/queue.c    ****      * allow return statements within the function itself.  This is done in the
1346:os/queue.c    ****      * interest of execution time efficiency. */
1347:os/queue.c    ****     for( ; ; )
1348:os/queue.c    ****     {
1349:os/queue.c    ****         taskENTER_CRITICAL();
1350:os/queue.c    ****         {
1351:os/queue.c    ****             const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1352:os/queue.c    **** 
1353:os/queue.c    ****             /* Is there data in the queue now?  To be running the calling task
1354:os/queue.c    ****              * must be the highest priority task wanting to access the queue. */
1355:os/queue.c    ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1356:os/queue.c    ****             {
1357:os/queue.c    ****                 /* Data available, remove one item. */
1358:os/queue.c    ****                 prvCopyDataFromQueue( pxQueue, pvBuffer );
1359:os/queue.c    ****                 traceQUEUE_RECEIVE( pxQueue );
1360:os/queue.c    ****                 pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1361:os/queue.c    **** 
1362:os/queue.c    ****                 /* There is now space in the queue, were any tasks waiting to
1363:os/queue.c    ****                  * post to the queue?  If so, unblock the highest priority waiting
1364:os/queue.c    ****                  * task. */
1365:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1366:os/queue.c    ****                 {
1367:os/queue.c    ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1368:os/queue.c    ****                     {
1369:os/queue.c    ****                         queueYIELD_IF_USING_PREEMPTION();
1370:os/queue.c    ****                     }
1371:os/queue.c    ****                     else
1372:os/queue.c    ****                     {
1373:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
1374:os/queue.c    ****                     }
1375:os/queue.c    ****                 }
1376:os/queue.c    ****                 else
1377:os/queue.c    ****                 {
1378:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1379:os/queue.c    ****                 }
1380:os/queue.c    **** 
1381:os/queue.c    ****                 taskEXIT_CRITICAL();
1382:os/queue.c    ****                 return pdPASS;
1383:os/queue.c    ****             }
1384:os/queue.c    ****             else
1385:os/queue.c    ****             {
1386:os/queue.c    ****                 if( xTicksToWait == ( TickType_t ) 0 )
1387:os/queue.c    ****                 {
1388:os/queue.c    ****                     /* The queue was empty and no block time is specified (or
1389:os/queue.c    ****                      * the block time has expired) so leave now. */
1390:os/queue.c    ****                     taskEXIT_CRITICAL();
1391:os/queue.c    ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
1392:os/queue.c    ****                     return errQUEUE_EMPTY;
1393:os/queue.c    ****                 }
1394:os/queue.c    ****                 else if( xEntryTimeSet == pdFALSE )
1395:os/queue.c    ****                 {
1396:os/queue.c    ****                     /* The queue was empty and a block time was specified so
1397:os/queue.c    ****                      * configure the timeout structure. */
1398:os/queue.c    ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1399:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 26


1400:os/queue.c    ****                 }
1401:os/queue.c    ****                 else
1402:os/queue.c    ****                 {
1403:os/queue.c    ****                     /* Entry time was already set. */
1404:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1405:os/queue.c    ****                 }
1406:os/queue.c    ****             }
1407:os/queue.c    ****         }
1408:os/queue.c    ****         taskEXIT_CRITICAL();
1409:os/queue.c    **** 
1410:os/queue.c    ****         /* Interrupts and other tasks can send to and receive from the queue
1411:os/queue.c    ****          * now the critical section has been exited. */
1412:os/queue.c    **** 
1413:os/queue.c    ****         vTaskSuspendAll();
1414:os/queue.c    ****         prvLockQueue( pxQueue );
1415:os/queue.c    **** 
1416:os/queue.c    ****         /* Update the timeout state to see if it has expired yet. */
1417:os/queue.c    ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1418:os/queue.c    ****         {
1419:os/queue.c    ****             /* The timeout has not expired.  If the queue is still empty place
1420:os/queue.c    ****              * the task on the list of tasks waiting to receive from the queue. */
1421:os/queue.c    ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1422:os/queue.c    ****             {
1423:os/queue.c    ****                 traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1424:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1425:os/queue.c    ****                 prvUnlockQueue( pxQueue );
1426:os/queue.c    **** 
1427:os/queue.c    ****                 if( xTaskResumeAll() == pdFALSE )
1428:os/queue.c    ****                 {
1429:os/queue.c    ****                     portYIELD_WITHIN_API();
1430:os/queue.c    ****                 }
1431:os/queue.c    ****                 else
1432:os/queue.c    ****                 {
1433:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1434:os/queue.c    ****                 }
1435:os/queue.c    ****             }
1436:os/queue.c    ****             else
1437:os/queue.c    ****             {
1438:os/queue.c    ****                 /* The queue contains data again.  Loop back to try and read the
1439:os/queue.c    ****                  * data. */
1440:os/queue.c    ****                 prvUnlockQueue( pxQueue );
1441:os/queue.c    ****                 ( void ) xTaskResumeAll();
1442:os/queue.c    ****             }
1443:os/queue.c    ****         }
1444:os/queue.c    ****         else
1445:os/queue.c    ****         {
1446:os/queue.c    ****             /* Timed out.  If there is no data in the queue exit, otherwise loop
1447:os/queue.c    ****              * back and attempt to read the data. */
1448:os/queue.c    ****             prvUnlockQueue( pxQueue );
1449:os/queue.c    ****             ( void ) xTaskResumeAll();
1450:os/queue.c    **** 
1451:os/queue.c    ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1452:os/queue.c    ****             {
1453:os/queue.c    ****                 traceQUEUE_RECEIVE_FAILED( pxQueue );
1454:os/queue.c    ****                 return errQUEUE_EMPTY;
1455:os/queue.c    ****             }
1456:os/queue.c    ****             else
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 27


1457:os/queue.c    ****             {
1458:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
1459:os/queue.c    ****             }
1460:os/queue.c    ****         }
1461:os/queue.c    ****     } /*lint -restore */
1462:os/queue.c    **** }
1463:os/queue.c    **** /*-----------------------------------------------------------*/
1464:os/queue.c    **** 
1465:os/queue.c    **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue,
1466:os/queue.c    ****                                 TickType_t xTicksToWait )
1467:os/queue.c    **** {
1468:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
1469:os/queue.c    ****     TimeOut_t xTimeOut;
1470:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
1471:os/queue.c    **** 
1472:os/queue.c    ****     #if ( configUSE_MUTEXES == 1 )
1473:os/queue.c    ****         BaseType_t xInheritanceOccurred = pdFALSE;
1474:os/queue.c    ****     #endif
1475:os/queue.c    **** 
1476:os/queue.c    ****     /* Check the queue pointer is not NULL. */
1477:os/queue.c    ****     configASSERT( ( pxQueue ) );
1478:os/queue.c    **** 
1479:os/queue.c    ****     /* Check this really is a semaphore, in which case the item size will be
1480:os/queue.c    ****      * 0. */
1481:os/queue.c    ****     configASSERT( pxQueue->uxItemSize == 0 );
1482:os/queue.c    **** 
1483:os/queue.c    ****     /* Cannot block if the scheduler is suspended. */
1484:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1485:os/queue.c    ****         {
1486:os/queue.c    ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
1487:os/queue.c    ****         }
1488:os/queue.c    ****     #endif
1489:os/queue.c    **** 
1490:os/queue.c    ****     /*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1491:os/queue.c    ****      * statements within the function itself.  This is done in the interest
1492:os/queue.c    ****      * of execution time efficiency. */
1493:os/queue.c    ****     for( ; ; )
1494:os/queue.c    ****     {
1495:os/queue.c    ****         taskENTER_CRITICAL();
1496:os/queue.c    ****         {
1497:os/queue.c    ****             /* Semaphores are queues with an item size of 0, and where the
1498:os/queue.c    ****              * number of messages in the queue is the semaphore's count value. */
1499:os/queue.c    ****             const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1500:os/queue.c    **** 
1501:os/queue.c    ****             /* Is there data in the queue now?  To be running the calling task
1502:os/queue.c    ****              * must be the highest priority task wanting to access the queue. */
1503:os/queue.c    ****             if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1504:os/queue.c    ****             {
1505:os/queue.c    ****                 traceQUEUE_RECEIVE( pxQueue );
1506:os/queue.c    **** 
1507:os/queue.c    ****                 /* Semaphores are queues with a data size of zero and where the
1508:os/queue.c    ****                  * messages waiting is the semaphore's count.  Reduce the count. */
1509:os/queue.c    ****                 pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1510:os/queue.c    **** 
1511:os/queue.c    ****                 #if ( configUSE_MUTEXES == 1 )
1512:os/queue.c    ****                     {
1513:os/queue.c    ****                         if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 28


1514:os/queue.c    ****                         {
1515:os/queue.c    ****                             /* Record the information required to implement
1516:os/queue.c    ****                              * priority inheritance should it become necessary. */
1517:os/queue.c    ****                             pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1518:os/queue.c    ****                         }
1519:os/queue.c    ****                         else
1520:os/queue.c    ****                         {
1521:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
1522:os/queue.c    ****                         }
1523:os/queue.c    ****                     }
1524:os/queue.c    ****                 #endif /* configUSE_MUTEXES */
1525:os/queue.c    **** 
1526:os/queue.c    ****                 /* Check to see if other tasks are blocked waiting to give the
1527:os/queue.c    ****                  * semaphore, and if so, unblock the highest priority such task. */
1528:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1529:os/queue.c    ****                 {
1530:os/queue.c    ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1531:os/queue.c    ****                     {
1532:os/queue.c    ****                         queueYIELD_IF_USING_PREEMPTION();
1533:os/queue.c    ****                     }
1534:os/queue.c    ****                     else
1535:os/queue.c    ****                     {
1536:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
1537:os/queue.c    ****                     }
1538:os/queue.c    ****                 }
1539:os/queue.c    ****                 else
1540:os/queue.c    ****                 {
1541:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1542:os/queue.c    ****                 }
1543:os/queue.c    **** 
1544:os/queue.c    ****                 taskEXIT_CRITICAL();
1545:os/queue.c    ****                 return pdPASS;
1546:os/queue.c    ****             }
1547:os/queue.c    ****             else
1548:os/queue.c    ****             {
1549:os/queue.c    ****                 if( xTicksToWait == ( TickType_t ) 0 )
1550:os/queue.c    ****                 {
1551:os/queue.c    ****                     /* For inheritance to have occurred there must have been an
1552:os/queue.c    ****                      * initial timeout, and an adjusted timeout cannot become 0, as
1553:os/queue.c    ****                      * if it were 0 the function would have exited. */
1554:os/queue.c    ****                     #if ( configUSE_MUTEXES == 1 )
1555:os/queue.c    ****                         {
1556:os/queue.c    ****                             configASSERT( xInheritanceOccurred == pdFALSE );
1557:os/queue.c    ****                         }
1558:os/queue.c    ****                     #endif /* configUSE_MUTEXES */
1559:os/queue.c    **** 
1560:os/queue.c    ****                     /* The semaphore count was 0 and no block time is specified
1561:os/queue.c    ****                      * (or the block time has expired) so exit now. */
1562:os/queue.c    ****                     taskEXIT_CRITICAL();
1563:os/queue.c    ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
1564:os/queue.c    ****                     return errQUEUE_EMPTY;
1565:os/queue.c    ****                 }
1566:os/queue.c    ****                 else if( xEntryTimeSet == pdFALSE )
1567:os/queue.c    ****                 {
1568:os/queue.c    ****                     /* The semaphore count was 0 and a block time was specified
1569:os/queue.c    ****                      * so configure the timeout structure ready to block. */
1570:os/queue.c    ****                     vTaskInternalSetTimeOutState( &xTimeOut );
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 29


1571:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
1572:os/queue.c    ****                 }
1573:os/queue.c    ****                 else
1574:os/queue.c    ****                 {
1575:os/queue.c    ****                     /* Entry time was already set. */
1576:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1577:os/queue.c    ****                 }
1578:os/queue.c    ****             }
1579:os/queue.c    ****         }
1580:os/queue.c    ****         taskEXIT_CRITICAL();
1581:os/queue.c    **** 
1582:os/queue.c    ****         /* Interrupts and other tasks can give to and take from the semaphore
1583:os/queue.c    ****          * now the critical section has been exited. */
1584:os/queue.c    **** 
1585:os/queue.c    ****         vTaskSuspendAll();
1586:os/queue.c    ****         prvLockQueue( pxQueue );
1587:os/queue.c    **** 
1588:os/queue.c    ****         /* Update the timeout state to see if it has expired yet. */
1589:os/queue.c    ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1590:os/queue.c    ****         {
1591:os/queue.c    ****             /* A block time is specified and not expired.  If the semaphore
1592:os/queue.c    ****              * count is 0 then enter the Blocked state to wait for a semaphore to
1593:os/queue.c    ****              * become available.  As semaphores are implemented with queues the
1594:os/queue.c    ****              * queue being empty is equivalent to the semaphore count being 0. */
1595:os/queue.c    ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1596:os/queue.c    ****             {
1597:os/queue.c    ****                 traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1598:os/queue.c    **** 
1599:os/queue.c    ****                 #if ( configUSE_MUTEXES == 1 )
1600:os/queue.c    ****                     {
1601:os/queue.c    ****                         if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1602:os/queue.c    ****                         {
1603:os/queue.c    ****                             taskENTER_CRITICAL();
1604:os/queue.c    ****                             {
1605:os/queue.c    ****                                 xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.
1606:os/queue.c    ****                             }
1607:os/queue.c    ****                             taskEXIT_CRITICAL();
1608:os/queue.c    ****                         }
1609:os/queue.c    ****                         else
1610:os/queue.c    ****                         {
1611:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
1612:os/queue.c    ****                         }
1613:os/queue.c    ****                     }
1614:os/queue.c    ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1615:os/queue.c    **** 
1616:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1617:os/queue.c    ****                 prvUnlockQueue( pxQueue );
1618:os/queue.c    **** 
1619:os/queue.c    ****                 if( xTaskResumeAll() == pdFALSE )
1620:os/queue.c    ****                 {
1621:os/queue.c    ****                     portYIELD_WITHIN_API();
1622:os/queue.c    ****                 }
1623:os/queue.c    ****                 else
1624:os/queue.c    ****                 {
1625:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1626:os/queue.c    ****                 }
1627:os/queue.c    ****             }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 30


1628:os/queue.c    ****             else
1629:os/queue.c    ****             {
1630:os/queue.c    ****                 /* There was no timeout and the semaphore count was not 0, so
1631:os/queue.c    ****                  * attempt to take the semaphore again. */
1632:os/queue.c    ****                 prvUnlockQueue( pxQueue );
1633:os/queue.c    ****                 ( void ) xTaskResumeAll();
1634:os/queue.c    ****             }
1635:os/queue.c    ****         }
1636:os/queue.c    ****         else
1637:os/queue.c    ****         {
1638:os/queue.c    ****             /* Timed out. */
1639:os/queue.c    ****             prvUnlockQueue( pxQueue );
1640:os/queue.c    ****             ( void ) xTaskResumeAll();
1641:os/queue.c    **** 
1642:os/queue.c    ****             /* If the semaphore count is 0 exit now as the timeout has
1643:os/queue.c    ****              * expired.  Otherwise return to attempt to take the semaphore that is
1644:os/queue.c    ****              * known to be available.  As semaphores are implemented by queues the
1645:os/queue.c    ****              * queue being empty is equivalent to the semaphore count being 0. */
1646:os/queue.c    ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1647:os/queue.c    ****             {
1648:os/queue.c    ****                 #if ( configUSE_MUTEXES == 1 )
1649:os/queue.c    ****                     {
1650:os/queue.c    ****                         /* xInheritanceOccurred could only have be set if
1651:os/queue.c    ****                          * pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1652:os/queue.c    ****                          * test the mutex type again to check it is actually a mutex. */
1653:os/queue.c    ****                         if( xInheritanceOccurred != pdFALSE )
1654:os/queue.c    ****                         {
1655:os/queue.c    ****                             taskENTER_CRITICAL();
1656:os/queue.c    ****                             {
1657:os/queue.c    ****                                 UBaseType_t uxHighestWaitingPriority;
1658:os/queue.c    **** 
1659:os/queue.c    ****                                 /* This task blocking on the mutex caused another
1660:os/queue.c    ****                                  * task to inherit this task's priority.  Now this task
1661:os/queue.c    ****                                  * has timed out the priority should be disinherited
1662:os/queue.c    ****                                  * again, but only as low as the next highest priority
1663:os/queue.c    ****                                  * task that is waiting for the same mutex. */
1664:os/queue.c    ****                                 uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( px
1665:os/queue.c    ****                                 vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHo
1666:os/queue.c    ****                             }
1667:os/queue.c    ****                             taskEXIT_CRITICAL();
1668:os/queue.c    ****                         }
1669:os/queue.c    ****                     }
1670:os/queue.c    ****                 #endif /* configUSE_MUTEXES */
1671:os/queue.c    **** 
1672:os/queue.c    ****                 traceQUEUE_RECEIVE_FAILED( pxQueue );
1673:os/queue.c    ****                 return errQUEUE_EMPTY;
1674:os/queue.c    ****             }
1675:os/queue.c    ****             else
1676:os/queue.c    ****             {
1677:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
1678:os/queue.c    ****             }
1679:os/queue.c    ****         }
1680:os/queue.c    ****     } /*lint -restore */
1681:os/queue.c    **** }
1682:os/queue.c    **** /*-----------------------------------------------------------*/
1683:os/queue.c    **** 
1684:os/queue.c    **** BaseType_t xQueuePeek( QueueHandle_t xQueue,
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 31


1685:os/queue.c    ****                        void * const pvBuffer,
1686:os/queue.c    ****                        TickType_t xTicksToWait )
1687:os/queue.c    **** {
1688:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
1689:os/queue.c    ****     TimeOut_t xTimeOut;
1690:os/queue.c    ****     int8_t * pcOriginalReadPosition;
1691:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
1692:os/queue.c    **** 
1693:os/queue.c    ****     /* Check the pointer is not NULL. */
1694:os/queue.c    ****     configASSERT( ( pxQueue ) );
1695:os/queue.c    **** 
1696:os/queue.c    ****     /* The buffer into which data is received can only be NULL if the data size
1697:os/queue.c    ****      * is zero (so no data is copied into the buffer. */
1698:os/queue.c    ****     configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) 
1699:os/queue.c    **** 
1700:os/queue.c    ****     /* Cannot block if the scheduler is suspended. */
1701:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1702:os/queue.c    ****         {
1703:os/queue.c    ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
1704:os/queue.c    ****         }
1705:os/queue.c    ****     #endif
1706:os/queue.c    **** 
1707:os/queue.c    ****     /*lint -save -e904  This function relaxes the coding standard somewhat to
1708:os/queue.c    ****      * allow return statements within the function itself.  This is done in the
1709:os/queue.c    ****      * interest of execution time efficiency. */
1710:os/queue.c    ****     for( ; ; )
1711:os/queue.c    ****     {
1712:os/queue.c    ****         taskENTER_CRITICAL();
1713:os/queue.c    ****         {
1714:os/queue.c    ****             const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1715:os/queue.c    **** 
1716:os/queue.c    ****             /* Is there data in the queue now?  To be running the calling task
1717:os/queue.c    ****              * must be the highest priority task wanting to access the queue. */
1718:os/queue.c    ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1719:os/queue.c    ****             {
1720:os/queue.c    ****                 /* Remember the read position so it can be reset after the data
1721:os/queue.c    ****                  * is read from the queue as this function is only peeking the
1722:os/queue.c    ****                  * data, not removing it. */
1723:os/queue.c    ****                 pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1724:os/queue.c    **** 
1725:os/queue.c    ****                 prvCopyDataFromQueue( pxQueue, pvBuffer );
1726:os/queue.c    ****                 traceQUEUE_PEEK( pxQueue );
1727:os/queue.c    **** 
1728:os/queue.c    ****                 /* The data is not being removed, so reset the read pointer. */
1729:os/queue.c    ****                 pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1730:os/queue.c    **** 
1731:os/queue.c    ****                 /* The data is being left in the queue, so see if there are
1732:os/queue.c    ****                  * any other tasks waiting for the data. */
1733:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1734:os/queue.c    ****                 {
1735:os/queue.c    ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE
1736:os/queue.c    ****                     {
1737:os/queue.c    ****                         /* The task waiting has a higher priority than this task. */
1738:os/queue.c    ****                         queueYIELD_IF_USING_PREEMPTION();
1739:os/queue.c    ****                     }
1740:os/queue.c    ****                     else
1741:os/queue.c    ****                     {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 32


1742:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
1743:os/queue.c    ****                     }
1744:os/queue.c    ****                 }
1745:os/queue.c    ****                 else
1746:os/queue.c    ****                 {
1747:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1748:os/queue.c    ****                 }
1749:os/queue.c    **** 
1750:os/queue.c    ****                 taskEXIT_CRITICAL();
1751:os/queue.c    ****                 return pdPASS;
1752:os/queue.c    ****             }
1753:os/queue.c    ****             else
1754:os/queue.c    ****             {
1755:os/queue.c    ****                 if( xTicksToWait == ( TickType_t ) 0 )
1756:os/queue.c    ****                 {
1757:os/queue.c    ****                     /* The queue was empty and no block time is specified (or
1758:os/queue.c    ****                      * the block time has expired) so leave now. */
1759:os/queue.c    ****                     taskEXIT_CRITICAL();
1760:os/queue.c    ****                     traceQUEUE_PEEK_FAILED( pxQueue );
1761:os/queue.c    ****                     return errQUEUE_EMPTY;
1762:os/queue.c    ****                 }
1763:os/queue.c    ****                 else if( xEntryTimeSet == pdFALSE )
1764:os/queue.c    ****                 {
1765:os/queue.c    ****                     /* The queue was empty and a block time was specified so
1766:os/queue.c    ****                      * configure the timeout structure ready to enter the blocked
1767:os/queue.c    ****                      * state. */
1768:os/queue.c    ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1769:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
1770:os/queue.c    ****                 }
1771:os/queue.c    ****                 else
1772:os/queue.c    ****                 {
1773:os/queue.c    ****                     /* Entry time was already set. */
1774:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1775:os/queue.c    ****                 }
1776:os/queue.c    ****             }
1777:os/queue.c    ****         }
1778:os/queue.c    ****         taskEXIT_CRITICAL();
1779:os/queue.c    **** 
1780:os/queue.c    ****         /* Interrupts and other tasks can send to and receive from the queue
1781:os/queue.c    ****          * now that the critical section has been exited. */
1782:os/queue.c    **** 
1783:os/queue.c    ****         vTaskSuspendAll();
1784:os/queue.c    ****         prvLockQueue( pxQueue );
1785:os/queue.c    **** 
1786:os/queue.c    ****         /* Update the timeout state to see if it has expired yet. */
1787:os/queue.c    ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1788:os/queue.c    ****         {
1789:os/queue.c    ****             /* Timeout has not expired yet, check to see if there is data in the
1790:os/queue.c    ****             * queue now, and if not enter the Blocked state to wait for data. */
1791:os/queue.c    ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1792:os/queue.c    ****             {
1793:os/queue.c    ****                 traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1794:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1795:os/queue.c    ****                 prvUnlockQueue( pxQueue );
1796:os/queue.c    **** 
1797:os/queue.c    ****                 if( xTaskResumeAll() == pdFALSE )
1798:os/queue.c    ****                 {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 33


1799:os/queue.c    ****                     portYIELD_WITHIN_API();
1800:os/queue.c    ****                 }
1801:os/queue.c    ****                 else
1802:os/queue.c    ****                 {
1803:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1804:os/queue.c    ****                 }
1805:os/queue.c    ****             }
1806:os/queue.c    ****             else
1807:os/queue.c    ****             {
1808:os/queue.c    ****                 /* There is data in the queue now, so don't enter the blocked
1809:os/queue.c    ****                  * state, instead return to try and obtain the data. */
1810:os/queue.c    ****                 prvUnlockQueue( pxQueue );
1811:os/queue.c    ****                 ( void ) xTaskResumeAll();
1812:os/queue.c    ****             }
1813:os/queue.c    ****         }
1814:os/queue.c    ****         else
1815:os/queue.c    ****         {
1816:os/queue.c    ****             /* The timeout has expired.  If there is still no data in the queue
1817:os/queue.c    ****              * exit, otherwise go back and try to read the data again. */
1818:os/queue.c    ****             prvUnlockQueue( pxQueue );
1819:os/queue.c    ****             ( void ) xTaskResumeAll();
1820:os/queue.c    **** 
1821:os/queue.c    ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1822:os/queue.c    ****             {
1823:os/queue.c    ****                 traceQUEUE_PEEK_FAILED( pxQueue );
1824:os/queue.c    ****                 return errQUEUE_EMPTY;
1825:os/queue.c    ****             }
1826:os/queue.c    ****             else
1827:os/queue.c    ****             {
1828:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
1829:os/queue.c    ****             }
1830:os/queue.c    ****         }
1831:os/queue.c    ****     } /*lint -restore */
1832:os/queue.c    **** }
1833:os/queue.c    **** /*-----------------------------------------------------------*/
1834:os/queue.c    **** 
1835:os/queue.c    **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue,
1836:os/queue.c    ****                                  void * const pvBuffer,
1837:os/queue.c    ****                                  BaseType_t * const pxHigherPriorityTaskWoken )
1838:os/queue.c    **** {
1839:os/queue.c    ****     BaseType_t xReturn;
1840:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
1841:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
1842:os/queue.c    **** 
1843:os/queue.c    ****     configASSERT( pxQueue );
1844:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1845:os/queue.c    **** 
1846:os/queue.c    ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1847:os/queue.c    ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1848:os/queue.c    ****      * above the maximum system call priority are kept permanently enabled, even
1849:os/queue.c    ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1850:os/queue.c    ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1851:os/queue.c    ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1852:os/queue.c    ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1853:os/queue.c    ****      * assigned a priority above the configured maximum system call priority.
1854:os/queue.c    ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1855:os/queue.c    ****      * that have been assigned a priority at or (logically) below the maximum
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 34


1856:os/queue.c    ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1857:os/queue.c    ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1858:os/queue.c    ****      * More information (albeit Cortex-M specific) is provided on the following
1859:os/queue.c    ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1860:os/queue.c    ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1861:os/queue.c    **** 
1862:os/queue.c    ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1863:os/queue.c    ****     {
1864:os/queue.c    ****         const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1865:os/queue.c    **** 
1866:os/queue.c    ****         /* Cannot block in an ISR, so check there is data available. */
1867:os/queue.c    ****         if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1868:os/queue.c    ****         {
1869:os/queue.c    ****             const int8_t cRxLock = pxQueue->cRxLock;
1870:os/queue.c    **** 
1871:os/queue.c    ****             traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1872:os/queue.c    **** 
1873:os/queue.c    ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
1874:os/queue.c    ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1875:os/queue.c    **** 
1876:os/queue.c    ****             /* If the queue is locked the event list will not be modified.
1877:os/queue.c    ****              * Instead update the lock count so the task that unlocks the queue
1878:os/queue.c    ****              * will know that an ISR has removed data while the queue was
1879:os/queue.c    ****              * locked. */
1880:os/queue.c    ****             if( cRxLock == queueUNLOCKED )
1881:os/queue.c    ****             {
1882:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1883:os/queue.c    ****                 {
1884:os/queue.c    ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1885:os/queue.c    ****                     {
1886:os/queue.c    ****                         /* The task waiting has a higher priority than us so
1887:os/queue.c    ****                          * force a context switch. */
1888:os/queue.c    ****                         if( pxHigherPriorityTaskWoken != NULL )
1889:os/queue.c    ****                         {
1890:os/queue.c    ****                             *pxHigherPriorityTaskWoken = pdTRUE;
1891:os/queue.c    ****                         }
1892:os/queue.c    ****                         else
1893:os/queue.c    ****                         {
1894:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
1895:os/queue.c    ****                         }
1896:os/queue.c    ****                     }
1897:os/queue.c    ****                     else
1898:os/queue.c    ****                     {
1899:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
1900:os/queue.c    ****                     }
1901:os/queue.c    ****                 }
1902:os/queue.c    ****                 else
1903:os/queue.c    ****                 {
1904:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
1905:os/queue.c    ****                 }
1906:os/queue.c    ****             }
1907:os/queue.c    ****             else
1908:os/queue.c    ****             {
1909:os/queue.c    ****                 /* Increment the lock count so the task that unlocks the queue
1910:os/queue.c    ****                  * knows that data was removed while it was locked. */
1911:os/queue.c    ****                 configASSERT( cRxLock != queueINT8_MAX );
1912:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 35


1913:os/queue.c    ****                 pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1914:os/queue.c    ****             }
1915:os/queue.c    **** 
1916:os/queue.c    ****             xReturn = pdPASS;
1917:os/queue.c    ****         }
1918:os/queue.c    ****         else
1919:os/queue.c    ****         {
1920:os/queue.c    ****             xReturn = pdFAIL;
1921:os/queue.c    ****             traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1922:os/queue.c    ****         }
1923:os/queue.c    ****     }
1924:os/queue.c    ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:os/queue.c    **** 
1926:os/queue.c    ****     return xReturn;
1927:os/queue.c    **** }
1928:os/queue.c    **** /*-----------------------------------------------------------*/
1929:os/queue.c    **** 
1930:os/queue.c    **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,
1931:os/queue.c    ****                               void * const pvBuffer )
1932:os/queue.c    **** {
1933:os/queue.c    ****     BaseType_t xReturn;
1934:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
1935:os/queue.c    ****     int8_t * pcOriginalReadPosition;
1936:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
1937:os/queue.c    **** 
1938:os/queue.c    ****     configASSERT( pxQueue );
1939:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1940:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1941:os/queue.c    **** 
1942:os/queue.c    ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1943:os/queue.c    ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1944:os/queue.c    ****      * above the maximum system call priority are kept permanently enabled, even
1945:os/queue.c    ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1946:os/queue.c    ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1947:os/queue.c    ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1948:os/queue.c    ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1949:os/queue.c    ****      * assigned a priority above the configured maximum system call priority.
1950:os/queue.c    ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1951:os/queue.c    ****      * that have been assigned a priority at or (logically) below the maximum
1952:os/queue.c    ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1953:os/queue.c    ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1954:os/queue.c    ****      * More information (albeit Cortex-M specific) is provided on the following
1955:os/queue.c    ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1956:os/queue.c    ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1957:os/queue.c    **** 
1958:os/queue.c    ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1959:os/queue.c    ****     {
1960:os/queue.c    ****         /* Cannot block in an ISR, so check there is data available. */
1961:os/queue.c    ****         if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1962:os/queue.c    ****         {
1963:os/queue.c    ****             traceQUEUE_PEEK_FROM_ISR( pxQueue );
1964:os/queue.c    **** 
1965:os/queue.c    ****             /* Remember the read position so it can be reset as nothing is
1966:os/queue.c    ****              * actually being removed from the queue. */
1967:os/queue.c    ****             pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1968:os/queue.c    ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
1969:os/queue.c    ****             pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 36


1970:os/queue.c    **** 
1971:os/queue.c    ****             xReturn = pdPASS;
1972:os/queue.c    ****         }
1973:os/queue.c    ****         else
1974:os/queue.c    ****         {
1975:os/queue.c    ****             xReturn = pdFAIL;
1976:os/queue.c    ****             traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1977:os/queue.c    ****         }
1978:os/queue.c    ****     }
1979:os/queue.c    ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1980:os/queue.c    **** 
1981:os/queue.c    ****     return xReturn;
1982:os/queue.c    **** }
1983:os/queue.c    **** /*-----------------------------------------------------------*/
1984:os/queue.c    **** 
1985:os/queue.c    **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1986:os/queue.c    **** {
1987:os/queue.c    ****     UBaseType_t uxReturn;
1988:os/queue.c    **** 
1989:os/queue.c    ****     configASSERT( xQueue );
1990:os/queue.c    **** 
1991:os/queue.c    ****     taskENTER_CRITICAL();
1992:os/queue.c    ****     {
1993:os/queue.c    ****         uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1994:os/queue.c    ****     }
1995:os/queue.c    ****     taskEXIT_CRITICAL();
1996:os/queue.c    **** 
1997:os/queue.c    ****     return uxReturn;
1998:os/queue.c    **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1999:os/queue.c    **** /*-----------------------------------------------------------*/
2000:os/queue.c    **** 
2001:os/queue.c    **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
2002:os/queue.c    **** {
2003:os/queue.c    ****     UBaseType_t uxReturn;
2004:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
2005:os/queue.c    **** 
2006:os/queue.c    ****     configASSERT( pxQueue );
2007:os/queue.c    **** 
2008:os/queue.c    ****     taskENTER_CRITICAL();
2009:os/queue.c    ****     {
2010:os/queue.c    ****         uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
2011:os/queue.c    ****     }
2012:os/queue.c    ****     taskEXIT_CRITICAL();
2013:os/queue.c    **** 
2014:os/queue.c    ****     return uxReturn;
2015:os/queue.c    **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2016:os/queue.c    **** /*-----------------------------------------------------------*/
2017:os/queue.c    **** 
2018:os/queue.c    **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
2019:os/queue.c    **** {
2020:os/queue.c    ****     UBaseType_t uxReturn;
2021:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
2022:os/queue.c    **** 
2023:os/queue.c    ****     configASSERT( pxQueue );
2024:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
2025:os/queue.c    **** 
2026:os/queue.c    ****     return uxReturn;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 37


2027:os/queue.c    **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2028:os/queue.c    **** /*-----------------------------------------------------------*/
2029:os/queue.c    **** 
2030:os/queue.c    **** void vQueueDelete( QueueHandle_t xQueue )
2031:os/queue.c    **** {
2032:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
2033:os/queue.c    **** 
2034:os/queue.c    ****     configASSERT( pxQueue );
2035:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
2036:os/queue.c    **** 
2037:os/queue.c    ****     #if ( configQUEUE_REGISTRY_SIZE > 0 )
2038:os/queue.c    ****         {
2039:os/queue.c    ****             vQueueUnregisterQueue( pxQueue );
2040:os/queue.c    ****         }
2041:os/queue.c    ****     #endif
2042:os/queue.c    **** 
2043:os/queue.c    ****     #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
2044:os/queue.c    ****         {
2045:os/queue.c    ****             /* The queue can only have been allocated dynamically - free it
2046:os/queue.c    ****              * again. */
2047:os/queue.c    ****             vPortFree( pxQueue );
2048:os/queue.c    ****         }
2049:os/queue.c    ****     #elif ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
2050:os/queue.c    ****         {
2051:os/queue.c    ****             /* The queue could have been allocated statically or dynamically, so
2052:os/queue.c    ****              * check before attempting to free the memory. */
2053:os/queue.c    ****             if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
2054:os/queue.c    ****             {
2055:os/queue.c    ****                 vPortFree( pxQueue );
2056:os/queue.c    ****             }
2057:os/queue.c    ****             else
2058:os/queue.c    ****             {
2059:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
2060:os/queue.c    ****             }
2061:os/queue.c    ****         }
2062:os/queue.c    ****     #else /* if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION ==
2063:os/queue.c    ****         {
2064:os/queue.c    ****             /* The queue must have been statically allocated, so is not going to be
2065:os/queue.c    ****              * deleted.  Avoid compiler warnings about the unused parameter. */
2066:os/queue.c    ****             ( void ) pxQueue;
2067:os/queue.c    ****         }
2068:os/queue.c    ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2069:os/queue.c    **** }
2070:os/queue.c    **** /*-----------------------------------------------------------*/
2071:os/queue.c    **** 
2072:os/queue.c    **** #if ( configUSE_TRACE_FACILITY == 1 )
2073:os/queue.c    **** 
2074:os/queue.c    ****     UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2075:os/queue.c    ****     {
2076:os/queue.c    ****         return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2077:os/queue.c    ****     }
2078:os/queue.c    **** 
2079:os/queue.c    **** #endif /* configUSE_TRACE_FACILITY */
2080:os/queue.c    **** /*-----------------------------------------------------------*/
2081:os/queue.c    **** 
2082:os/queue.c    **** #if ( configUSE_TRACE_FACILITY == 1 )
2083:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 38


2084:os/queue.c    ****     void vQueueSetQueueNumber( QueueHandle_t xQueue,
2085:os/queue.c    ****                                UBaseType_t uxQueueNumber )
2086:os/queue.c    ****     {
2087:os/queue.c    ****         ( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2088:os/queue.c    ****     }
2089:os/queue.c    **** 
2090:os/queue.c    **** #endif /* configUSE_TRACE_FACILITY */
2091:os/queue.c    **** /*-----------------------------------------------------------*/
2092:os/queue.c    **** 
2093:os/queue.c    **** #if ( configUSE_TRACE_FACILITY == 1 )
2094:os/queue.c    **** 
2095:os/queue.c    ****     uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2096:os/queue.c    ****     {
2097:os/queue.c    ****         return ( ( Queue_t * ) xQueue )->ucQueueType;
2098:os/queue.c    ****     }
2099:os/queue.c    **** 
2100:os/queue.c    **** #endif /* configUSE_TRACE_FACILITY */
2101:os/queue.c    **** /*-----------------------------------------------------------*/
2102:os/queue.c    **** 
2103:os/queue.c    **** #if ( configUSE_MUTEXES == 1 )
2104:os/queue.c    **** 
2105:os/queue.c    ****     static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2106:os/queue.c    ****     {
  28              		.loc 1 2106 5 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 2106 5 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
2107:os/queue.c    ****         UBaseType_t uxHighestPriorityOfWaitingTasks;
  35              		.loc 1 2107 9 is_stmt 1 view .LVU2
2108:os/queue.c    **** 
2109:os/queue.c    ****         /* If a task waiting for a mutex causes the mutex holder to inherit a
2110:os/queue.c    ****          * priority, but the waiting task times out, then the holder should
2111:os/queue.c    ****          * disinherit the priority - but only down to the highest priority of any
2112:os/queue.c    ****          * other tasks that are waiting for the same mutex.  For this purpose,
2113:os/queue.c    ****          * return the priority of the highest priority task that is waiting for the
2114:os/queue.c    ****          * mutex. */
2115:os/queue.c    ****         if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  36              		.loc 1 2115 9 view .LVU3
  37              		.loc 1 2115 13 is_stmt 0 view .LVU4
  38 0002 406A     		ldr	r0, [r0, #36]
  39              	.LVL1:
  40              		.loc 1 2115 11 view .LVU5
  41 0004 18B1     		cbz	r0, .L1
2116:os/queue.c    ****         {
2117:os/queue.c    ****             uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t 
  42              		.loc 1 2117 13 is_stmt 1 view .LVU6
  43              		.loc 1 2117 102 is_stmt 0 view .LVU7
  44 0006 1B6B     		ldr	r3, [r3, #48]
  45              	.LVL2:
  46              		.loc 1 2117 102 view .LVU8
  47 0008 1868     		ldr	r0, [r3]
  48              		.loc 1 2117 45 view .LVU9
  49 000a C0F10400 		rsb	r0, r0, #4
  50              	.LVL3:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 39


2118:os/queue.c    ****         }
2119:os/queue.c    ****         else
2120:os/queue.c    ****         {
2121:os/queue.c    ****             uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2122:os/queue.c    ****         }
2123:os/queue.c    **** 
2124:os/queue.c    ****         return uxHighestPriorityOfWaitingTasks;
  51              		.loc 1 2124 9 is_stmt 1 view .LVU10
  52              	.L1:
2125:os/queue.c    ****     }
  53              		.loc 1 2125 5 is_stmt 0 view .LVU11
  54 000e 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE32:
  58              		.section	.text.prvIsQueueFull,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	prvIsQueueFull:
  66              	.LVL4:
  67              	.LFB38:
2126:os/queue.c    **** 
2127:os/queue.c    **** #endif /* configUSE_MUTEXES */
2128:os/queue.c    **** /*-----------------------------------------------------------*/
2129:os/queue.c    **** 
2130:os/queue.c    **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
2131:os/queue.c    ****                                       const void * pvItemToQueue,
2132:os/queue.c    ****                                       const BaseType_t xPosition )
2133:os/queue.c    **** {
2134:os/queue.c    ****     BaseType_t xReturn = pdFALSE;
2135:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
2136:os/queue.c    **** 
2137:os/queue.c    ****     /* This function is called from a critical section. */
2138:os/queue.c    **** 
2139:os/queue.c    ****     uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2140:os/queue.c    **** 
2141:os/queue.c    ****     if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2142:os/queue.c    ****     {
2143:os/queue.c    ****         #if ( configUSE_MUTEXES == 1 )
2144:os/queue.c    ****             {
2145:os/queue.c    ****                 if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2146:os/queue.c    ****                 {
2147:os/queue.c    ****                     /* The mutex is no longer being held. */
2148:os/queue.c    ****                     xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2149:os/queue.c    ****                     pxQueue->u.xSemaphore.xMutexHolder = NULL;
2150:os/queue.c    ****                 }
2151:os/queue.c    ****                 else
2152:os/queue.c    ****                 {
2153:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2154:os/queue.c    ****                 }
2155:os/queue.c    ****             }
2156:os/queue.c    ****         #endif /* configUSE_MUTEXES */
2157:os/queue.c    ****     }
2158:os/queue.c    ****     else if( xPosition == queueSEND_TO_BACK )
2159:os/queue.c    ****     {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 40


2160:os/queue.c    ****         ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSi
2161:os/queue.c    ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
2162:os/queue.c    **** 
2163:os/queue.c    ****         if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                       
2164:os/queue.c    ****         {
2165:os/queue.c    ****             pxQueue->pcWriteTo = pxQueue->pcHead;
2166:os/queue.c    ****         }
2167:os/queue.c    ****         else
2168:os/queue.c    ****         {
2169:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
2170:os/queue.c    ****         }
2171:os/queue.c    ****     }
2172:os/queue.c    ****     else
2173:os/queue.c    ****     {
2174:os/queue.c    ****         ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue
2175:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2176:os/queue.c    **** 
2177:os/queue.c    ****         if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified
2178:os/queue.c    ****         {
2179:os/queue.c    ****             pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2180:os/queue.c    ****         }
2181:os/queue.c    ****         else
2182:os/queue.c    ****         {
2183:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
2184:os/queue.c    ****         }
2185:os/queue.c    **** 
2186:os/queue.c    ****         if( xPosition == queueOVERWRITE )
2187:os/queue.c    ****         {
2188:os/queue.c    ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2189:os/queue.c    ****             {
2190:os/queue.c    ****                 /* An item is not being added but overwritten, so subtract
2191:os/queue.c    ****                  * one from the recorded number of items in the queue so when
2192:os/queue.c    ****                  * one is added again below the number of recorded items remains
2193:os/queue.c    ****                  * correct. */
2194:os/queue.c    ****                 --uxMessagesWaiting;
2195:os/queue.c    ****             }
2196:os/queue.c    ****             else
2197:os/queue.c    ****             {
2198:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
2199:os/queue.c    ****             }
2200:os/queue.c    ****         }
2201:os/queue.c    ****         else
2202:os/queue.c    ****         {
2203:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
2204:os/queue.c    ****         }
2205:os/queue.c    ****     }
2206:os/queue.c    **** 
2207:os/queue.c    ****     pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2208:os/queue.c    **** 
2209:os/queue.c    ****     return xReturn;
2210:os/queue.c    **** }
2211:os/queue.c    **** /*-----------------------------------------------------------*/
2212:os/queue.c    **** 
2213:os/queue.c    **** static void prvCopyDataFromQueue( Queue_t * const pxQueue,
2214:os/queue.c    ****                                   void * const pvBuffer )
2215:os/queue.c    **** {
2216:os/queue.c    ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 41


2217:os/queue.c    ****     {
2218:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithm
2219:os/queue.c    **** 
2220:os/queue.c    ****         if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception
2221:os/queue.c    ****         {
2222:os/queue.c    ****             pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2223:os/queue.c    ****         }
2224:os/queue.c    ****         else
2225:os/queue.c    ****         {
2226:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
2227:os/queue.c    ****         }
2228:os/queue.c    **** 
2229:os/queue.c    ****         ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) p
2230:os/queue.c    ****     }
2231:os/queue.c    **** }
2232:os/queue.c    **** /*-----------------------------------------------------------*/
2233:os/queue.c    **** 
2234:os/queue.c    **** static void prvUnlockQueue( Queue_t * const pxQueue )
2235:os/queue.c    **** {
2236:os/queue.c    ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2237:os/queue.c    **** 
2238:os/queue.c    ****     /* The lock counts contains the number of extra data items placed or
2239:os/queue.c    ****      * removed from the queue while the queue was locked.  When a queue is
2240:os/queue.c    ****      * locked items can be added or removed, but the event lists cannot be
2241:os/queue.c    ****      * updated. */
2242:os/queue.c    ****     taskENTER_CRITICAL();
2243:os/queue.c    ****     {
2244:os/queue.c    ****         int8_t cTxLock = pxQueue->cTxLock;
2245:os/queue.c    **** 
2246:os/queue.c    ****         /* See if data was added to the queue while it was locked. */
2247:os/queue.c    ****         while( cTxLock > queueLOCKED_UNMODIFIED )
2248:os/queue.c    ****         {
2249:os/queue.c    ****             /* Data was posted while the queue was locked.  Are any tasks
2250:os/queue.c    ****              * blocked waiting for data to become available? */
2251:os/queue.c    ****             #if ( configUSE_QUEUE_SETS == 1 )
2252:os/queue.c    ****                 {
2253:os/queue.c    ****                     if( pxQueue->pxQueueSetContainer != NULL )
2254:os/queue.c    ****                     {
2255:os/queue.c    ****                         if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2256:os/queue.c    ****                         {
2257:os/queue.c    ****                             /* The queue is a member of a queue set, and posting to
2258:os/queue.c    ****                              * the queue set caused a higher priority task to unblock.
2259:os/queue.c    ****                              * A context switch is required. */
2260:os/queue.c    ****                             vTaskMissedYield();
2261:os/queue.c    ****                         }
2262:os/queue.c    ****                         else
2263:os/queue.c    ****                         {
2264:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
2265:os/queue.c    ****                         }
2266:os/queue.c    ****                     }
2267:os/queue.c    ****                     else
2268:os/queue.c    ****                     {
2269:os/queue.c    ****                         /* Tasks that are removed from the event list will get
2270:os/queue.c    ****                          * added to the pending ready list as the scheduler is still
2271:os/queue.c    ****                          * suspended. */
2272:os/queue.c    ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2273:os/queue.c    ****                         {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 42


2274:os/queue.c    ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
2275:os/queue.c    ****                             {
2276:os/queue.c    ****                                 /* The task waiting has a higher priority so record that a
2277:os/queue.c    ****                                  * context switch is required. */
2278:os/queue.c    ****                                 vTaskMissedYield();
2279:os/queue.c    ****                             }
2280:os/queue.c    ****                             else
2281:os/queue.c    ****                             {
2282:os/queue.c    ****                                 mtCOVERAGE_TEST_MARKER();
2283:os/queue.c    ****                             }
2284:os/queue.c    ****                         }
2285:os/queue.c    ****                         else
2286:os/queue.c    ****                         {
2287:os/queue.c    ****                             break;
2288:os/queue.c    ****                         }
2289:os/queue.c    ****                     }
2290:os/queue.c    ****                 }
2291:os/queue.c    ****             #else /* configUSE_QUEUE_SETS */
2292:os/queue.c    ****                 {
2293:os/queue.c    ****                     /* Tasks that are removed from the event list will get added to
2294:os/queue.c    ****                      * the pending ready list as the scheduler is still suspended. */
2295:os/queue.c    ****                     if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2296:os/queue.c    ****                     {
2297:os/queue.c    ****                         if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdF
2298:os/queue.c    ****                         {
2299:os/queue.c    ****                             /* The task waiting has a higher priority so record that
2300:os/queue.c    ****                              * a context switch is required. */
2301:os/queue.c    ****                             vTaskMissedYield();
2302:os/queue.c    ****                         }
2303:os/queue.c    ****                         else
2304:os/queue.c    ****                         {
2305:os/queue.c    ****                             mtCOVERAGE_TEST_MARKER();
2306:os/queue.c    ****                         }
2307:os/queue.c    ****                     }
2308:os/queue.c    ****                     else
2309:os/queue.c    ****                     {
2310:os/queue.c    ****                         break;
2311:os/queue.c    ****                     }
2312:os/queue.c    ****                 }
2313:os/queue.c    ****             #endif /* configUSE_QUEUE_SETS */
2314:os/queue.c    **** 
2315:os/queue.c    ****             --cTxLock;
2316:os/queue.c    ****         }
2317:os/queue.c    **** 
2318:os/queue.c    ****         pxQueue->cTxLock = queueUNLOCKED;
2319:os/queue.c    ****     }
2320:os/queue.c    ****     taskEXIT_CRITICAL();
2321:os/queue.c    **** 
2322:os/queue.c    ****     /* Do the same for the Rx lock. */
2323:os/queue.c    ****     taskENTER_CRITICAL();
2324:os/queue.c    ****     {
2325:os/queue.c    ****         int8_t cRxLock = pxQueue->cRxLock;
2326:os/queue.c    **** 
2327:os/queue.c    ****         while( cRxLock > queueLOCKED_UNMODIFIED )
2328:os/queue.c    ****         {
2329:os/queue.c    ****             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2330:os/queue.c    ****             {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 43


2331:os/queue.c    ****                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2332:os/queue.c    ****                 {
2333:os/queue.c    ****                     vTaskMissedYield();
2334:os/queue.c    ****                 }
2335:os/queue.c    ****                 else
2336:os/queue.c    ****                 {
2337:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2338:os/queue.c    ****                 }
2339:os/queue.c    **** 
2340:os/queue.c    ****                 --cRxLock;
2341:os/queue.c    ****             }
2342:os/queue.c    ****             else
2343:os/queue.c    ****             {
2344:os/queue.c    ****                 break;
2345:os/queue.c    ****             }
2346:os/queue.c    ****         }
2347:os/queue.c    **** 
2348:os/queue.c    ****         pxQueue->cRxLock = queueUNLOCKED;
2349:os/queue.c    ****     }
2350:os/queue.c    ****     taskEXIT_CRITICAL();
2351:os/queue.c    **** }
2352:os/queue.c    **** /*-----------------------------------------------------------*/
2353:os/queue.c    **** 
2354:os/queue.c    **** static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
2355:os/queue.c    **** {
2356:os/queue.c    ****     BaseType_t xReturn;
2357:os/queue.c    **** 
2358:os/queue.c    ****     taskENTER_CRITICAL();
2359:os/queue.c    ****     {
2360:os/queue.c    ****         if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2361:os/queue.c    ****         {
2362:os/queue.c    ****             xReturn = pdTRUE;
2363:os/queue.c    ****         }
2364:os/queue.c    ****         else
2365:os/queue.c    ****         {
2366:os/queue.c    ****             xReturn = pdFALSE;
2367:os/queue.c    ****         }
2368:os/queue.c    ****     }
2369:os/queue.c    ****     taskEXIT_CRITICAL();
2370:os/queue.c    **** 
2371:os/queue.c    ****     return xReturn;
2372:os/queue.c    **** }
2373:os/queue.c    **** /*-----------------------------------------------------------*/
2374:os/queue.c    **** 
2375:os/queue.c    **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2376:os/queue.c    **** {
2377:os/queue.c    ****     BaseType_t xReturn;
2378:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
2379:os/queue.c    **** 
2380:os/queue.c    ****     configASSERT( pxQueue );
2381:os/queue.c    **** 
2382:os/queue.c    ****     if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2383:os/queue.c    ****     {
2384:os/queue.c    ****         xReturn = pdTRUE;
2385:os/queue.c    ****     }
2386:os/queue.c    ****     else
2387:os/queue.c    ****     {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 44


2388:os/queue.c    ****         xReturn = pdFALSE;
2389:os/queue.c    ****     }
2390:os/queue.c    **** 
2391:os/queue.c    ****     return xReturn;
2392:os/queue.c    **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2393:os/queue.c    **** /*-----------------------------------------------------------*/
2394:os/queue.c    **** 
2395:os/queue.c    **** static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
2396:os/queue.c    **** {
  68              		.loc 1 2396 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 2396 1 is_stmt 0 view .LVU13
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 0446     		mov	r4, r0
2397:os/queue.c    ****     BaseType_t xReturn;
  79              		.loc 1 2397 5 is_stmt 1 view .LVU14
2398:os/queue.c    **** 
2399:os/queue.c    ****     taskENTER_CRITICAL();
  80              		.loc 1 2399 5 view .LVU15
  81 0004 FFF7FEFF 		bl	vPortEnterCritical
  82              	.LVL5:
2400:os/queue.c    ****     {
2401:os/queue.c    ****         if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  83              		.loc 1 2401 9 view .LVU16
  84              		.loc 1 2401 20 is_stmt 0 view .LVU17
  85 0008 A26B     		ldr	r2, [r4, #56]
  86              		.loc 1 2401 50 view .LVU18
  87 000a E36B     		ldr	r3, [r4, #60]
  88              		.loc 1 2401 11 view .LVU19
  89 000c 9A42     		cmp	r2, r3
  90 000e 04D0     		beq	.L7
2402:os/queue.c    ****         {
2403:os/queue.c    ****             xReturn = pdTRUE;
2404:os/queue.c    ****         }
2405:os/queue.c    ****         else
2406:os/queue.c    ****         {
2407:os/queue.c    ****             xReturn = pdFALSE;
  91              		.loc 1 2407 21 view .LVU20
  92 0010 0024     		movs	r4, #0
  93              	.LVL6:
  94              	.L4:
2408:os/queue.c    ****         }
2409:os/queue.c    ****     }
2410:os/queue.c    ****     taskEXIT_CRITICAL();
  95              		.loc 1 2410 5 is_stmt 1 view .LVU21
  96 0012 FFF7FEFF 		bl	vPortExitCritical
  97              	.LVL7:
2411:os/queue.c    **** 
2412:os/queue.c    ****     return xReturn;
  98              		.loc 1 2412 5 view .LVU22
2413:os/queue.c    **** }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 45


  99              		.loc 1 2413 1 is_stmt 0 view .LVU23
 100 0016 2046     		mov	r0, r4
 101 0018 10BD     		pop	{r4, pc}
 102              	.LVL8:
 103              	.L7:
2403:os/queue.c    ****         }
 104              		.loc 1 2403 21 view .LVU24
 105 001a 0124     		movs	r4, #1
 106              	.LVL9:
2403:os/queue.c    ****         }
 107              		.loc 1 2403 21 view .LVU25
 108 001c F9E7     		b	.L4
 109              		.cfi_endproc
 110              	.LFE38:
 112              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv5-d16
 119              	prvIsQueueEmpty:
 120              	.LVL10:
 121              	.LFB36:
2355:os/queue.c    ****     BaseType_t xReturn;
 122              		.loc 1 2355 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
2355:os/queue.c    ****     BaseType_t xReturn;
 126              		.loc 1 2355 1 is_stmt 0 view .LVU27
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 0446     		mov	r4, r0
2356:os/queue.c    **** 
 133              		.loc 1 2356 5 is_stmt 1 view .LVU28
2358:os/queue.c    ****     {
 134              		.loc 1 2358 5 view .LVU29
 135 0004 FFF7FEFF 		bl	vPortEnterCritical
 136              	.LVL11:
2360:os/queue.c    ****         {
 137              		.loc 1 2360 9 view .LVU30
2360:os/queue.c    ****         {
 138              		.loc 1 2360 20 is_stmt 0 view .LVU31
 139 0008 A36B     		ldr	r3, [r4, #56]
2360:os/queue.c    ****         {
 140              		.loc 1 2360 11 view .LVU32
 141 000a 23B9     		cbnz	r3, .L10
2362:os/queue.c    ****         }
 142              		.loc 1 2362 21 view .LVU33
 143 000c 0124     		movs	r4, #1
 144              	.LVL12:
 145              	.L9:
2369:os/queue.c    **** 
 146              		.loc 1 2369 5 is_stmt 1 view .LVU34
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 46


 147 000e FFF7FEFF 		bl	vPortExitCritical
 148              	.LVL13:
2371:os/queue.c    **** }
 149              		.loc 1 2371 5 view .LVU35
2372:os/queue.c    **** /*-----------------------------------------------------------*/
 150              		.loc 1 2372 1 is_stmt 0 view .LVU36
 151 0012 2046     		mov	r0, r4
 152 0014 10BD     		pop	{r4, pc}
 153              	.LVL14:
 154              	.L10:
2366:os/queue.c    ****         }
 155              		.loc 1 2366 21 view .LVU37
 156 0016 0024     		movs	r4, #0
 157              	.LVL15:
2366:os/queue.c    ****         }
 158              		.loc 1 2366 21 view .LVU38
 159 0018 F9E7     		b	.L9
 160              		.cfi_endproc
 161              	.LFE36:
 163              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 164              		.align	1
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv5-d16
 170              	prvCopyDataToQueue:
 171              	.LVL16:
 172              	.LFB33:
2133:os/queue.c    ****     BaseType_t xReturn = pdFALSE;
 173              		.loc 1 2133 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
2133:os/queue.c    ****     BaseType_t xReturn = pdFALSE;
 177              		.loc 1 2133 1 is_stmt 0 view .LVU40
 178 0000 70B5     		push	{r4, r5, r6, lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 16
 181              		.cfi_offset 4, -16
 182              		.cfi_offset 5, -12
 183              		.cfi_offset 6, -8
 184              		.cfi_offset 14, -4
 185 0002 0446     		mov	r4, r0
 186 0004 1546     		mov	r5, r2
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 187              		.loc 1 2134 5 is_stmt 1 view .LVU41
 188              	.LVL17:
2135:os/queue.c    **** 
 189              		.loc 1 2135 5 view .LVU42
2139:os/queue.c    **** 
 190              		.loc 1 2139 5 view .LVU43
2139:os/queue.c    **** 
 191              		.loc 1 2139 23 is_stmt 0 view .LVU44
 192 0006 866B     		ldr	r6, [r0, #56]
 193              	.LVL18:
2141:os/queue.c    ****     {
 194              		.loc 1 2141 5 is_stmt 1 view .LVU45
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 47


2141:os/queue.c    ****     {
 195              		.loc 1 2141 16 is_stmt 0 view .LVU46
 196 0008 026C     		ldr	r2, [r0, #64]
 197              	.LVL19:
2141:os/queue.c    ****     {
 198              		.loc 1 2141 7 view .LVU47
 199 000a 5AB9     		cbnz	r2, .L13
2145:os/queue.c    ****                 {
 200              		.loc 1 2145 17 is_stmt 1 view .LVU48
2145:os/queue.c    ****                 {
 201              		.loc 1 2145 28 is_stmt 0 view .LVU49
 202 000c 0368     		ldr	r3, [r0]
2145:os/queue.c    ****                 {
 203              		.loc 1 2145 19 view .LVU50
 204 000e 1BB1     		cbz	r3, .L22
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 205              		.loc 1 2134 16 view .LVU51
 206 0010 0020     		movs	r0, #0
 207              	.LVL20:
 208              	.L14:
2203:os/queue.c    ****         }
 209              		.loc 1 2203 37 is_stmt 1 view .LVU52
2207:os/queue.c    **** 
 210              		.loc 1 2207 5 view .LVU53
2207:os/queue.c    **** 
 211              		.loc 1 2207 52 is_stmt 0 view .LVU54
 212 0012 0136     		adds	r6, r6, #1
 213              	.LVL21:
2207:os/queue.c    **** 
 214              		.loc 1 2207 32 view .LVU55
 215 0014 A663     		str	r6, [r4, #56]
2209:os/queue.c    **** }
 216              		.loc 1 2209 5 is_stmt 1 view .LVU56
2210:os/queue.c    **** /*-----------------------------------------------------------*/
 217              		.loc 1 2210 1 is_stmt 0 view .LVU57
 218 0016 70BD     		pop	{r4, r5, r6, pc}
 219              	.LVL22:
 220              	.L22:
2148:os/queue.c    ****                     pxQueue->u.xSemaphore.xMutexHolder = NULL;
 221              		.loc 1 2148 21 is_stmt 1 view .LVU58
2148:os/queue.c    ****                     pxQueue->u.xSemaphore.xMutexHolder = NULL;
 222              		.loc 1 2148 31 is_stmt 0 view .LVU59
 223 0018 8068     		ldr	r0, [r0, #8]
 224              	.LVL23:
2148:os/queue.c    ****                     pxQueue->u.xSemaphore.xMutexHolder = NULL;
 225              		.loc 1 2148 31 view .LVU60
 226 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 227              	.LVL24:
2149:os/queue.c    ****                 }
 228              		.loc 1 2149 21 is_stmt 1 view .LVU61
2149:os/queue.c    ****                 }
 229              		.loc 1 2149 56 is_stmt 0 view .LVU62
 230 001e 0023     		movs	r3, #0
 231 0020 A360     		str	r3, [r4, #8]
 232 0022 F6E7     		b	.L14
 233              	.LVL25:
 234              	.L13:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 48


2158:os/queue.c    ****     {
 235              		.loc 1 2158 10 is_stmt 1 view .LVU63
2158:os/queue.c    ****     {
 236              		.loc 1 2158 12 is_stmt 0 view .LVU64
 237 0024 6DB9     		cbnz	r5, .L15
2160:os/queue.c    ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 238              		.loc 1 2160 9 is_stmt 1 view .LVU65
2160:os/queue.c    ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 239              		.loc 1 2160 18 is_stmt 0 view .LVU66
 240 0026 4068     		ldr	r0, [r0, #4]
 241              	.LVL26:
2160:os/queue.c    ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 242              		.loc 1 2160 18 view .LVU67
 243 0028 FFF7FEFF 		bl	memcpy
 244              	.LVL27:
2161:os/queue.c    **** 
 245              		.loc 1 2161 9 is_stmt 1 view .LVU68
2161:os/queue.c    **** 
 246              		.loc 1 2161 38 is_stmt 0 view .LVU69
 247 002c 226C     		ldr	r2, [r4, #64]
2161:os/queue.c    **** 
 248              		.loc 1 2161 28 view .LVU70
 249 002e 6368     		ldr	r3, [r4, #4]
 250 0030 1344     		add	r3, r3, r2
 251 0032 6360     		str	r3, [r4, #4]
2163:os/queue.c    ****         {
 252              		.loc 1 2163 9 is_stmt 1 view .LVU71
2163:os/queue.c    ****         {
 253              		.loc 1 2163 52 is_stmt 0 view .LVU72
 254 0034 A268     		ldr	r2, [r4, #8]
2163:os/queue.c    ****         {
 255              		.loc 1 2163 11 view .LVU73
 256 0036 9342     		cmp	r3, r2
 257 0038 19D3     		bcc	.L18
2165:os/queue.c    ****         }
 258              		.loc 1 2165 13 is_stmt 1 view .LVU74
2165:os/queue.c    ****         }
 259              		.loc 1 2165 41 is_stmt 0 view .LVU75
 260 003a 2368     		ldr	r3, [r4]
2165:os/queue.c    ****         }
 261              		.loc 1 2165 32 view .LVU76
 262 003c 6360     		str	r3, [r4, #4]
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 263              		.loc 1 2134 16 view .LVU77
 264 003e 2846     		mov	r0, r5
 265 0040 E7E7     		b	.L14
 266              	.LVL28:
 267              	.L15:
2174:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 268              		.loc 1 2174 9 is_stmt 1 view .LVU78
2174:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 269              		.loc 1 2174 18 is_stmt 0 view .LVU79
 270 0042 C068     		ldr	r0, [r0, #12]
 271              	.LVL29:
2174:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 272              		.loc 1 2174 18 view .LVU80
 273 0044 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 49


 274              	.LVL30:
2175:os/queue.c    **** 
 275              		.loc 1 2175 9 is_stmt 1 view .LVU81
2175:os/queue.c    **** 
 276              		.loc 1 2175 48 is_stmt 0 view .LVU82
 277 0048 226C     		ldr	r2, [r4, #64]
2175:os/queue.c    **** 
 278              		.loc 1 2175 38 view .LVU83
 279 004a 5142     		rsbs	r1, r2, #0
 280 004c E368     		ldr	r3, [r4, #12]
 281 004e 9B1A     		subs	r3, r3, r2
 282 0050 E360     		str	r3, [r4, #12]
2177:os/queue.c    ****         {
 283              		.loc 1 2177 9 is_stmt 1 view .LVU84
2177:os/queue.c    ****         {
 284              		.loc 1 2177 51 is_stmt 0 view .LVU85
 285 0052 2268     		ldr	r2, [r4]
2177:os/queue.c    ****         {
 286              		.loc 1 2177 11 view .LVU86
 287 0054 9342     		cmp	r3, r2
 288 0056 02D2     		bcs	.L16
2179:os/queue.c    ****         }
 289              		.loc 1 2179 13 is_stmt 1 view .LVU87
2179:os/queue.c    ****         }
 290              		.loc 1 2179 63 is_stmt 0 view .LVU88
 291 0058 A368     		ldr	r3, [r4, #8]
2179:os/queue.c    ****         }
 292              		.loc 1 2179 71 view .LVU89
 293 005a 0B44     		add	r3, r3, r1
2179:os/queue.c    ****         }
 294              		.loc 1 2179 42 view .LVU90
 295 005c E360     		str	r3, [r4, #12]
 296              	.L16:
2183:os/queue.c    ****         }
 297              		.loc 1 2183 37 is_stmt 1 view .LVU91
2186:os/queue.c    ****         {
 298              		.loc 1 2186 9 view .LVU92
2186:os/queue.c    ****         {
 299              		.loc 1 2186 11 is_stmt 0 view .LVU93
 300 005e 022D     		cmp	r5, #2
 301 0060 01D0     		beq	.L23
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 302              		.loc 1 2134 16 view .LVU94
 303 0062 0020     		movs	r0, #0
 304 0064 D5E7     		b	.L14
 305              	.L23:
2188:os/queue.c    ****             {
 306              		.loc 1 2188 13 is_stmt 1 view .LVU95
2188:os/queue.c    ****             {
 307              		.loc 1 2188 15 is_stmt 0 view .LVU96
 308 0066 26B1     		cbz	r6, .L20
2194:os/queue.c    ****             }
 309              		.loc 1 2194 17 is_stmt 1 view .LVU97
 310 0068 013E     		subs	r6, r6, #1
 311              	.LVL31:
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 312              		.loc 1 2134 16 is_stmt 0 view .LVU98
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 50


 313 006a 0020     		movs	r0, #0
 314 006c D1E7     		b	.L14
 315              	.L18:
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 316              		.loc 1 2134 16 view .LVU99
 317 006e 2846     		mov	r0, r5
 318 0070 CFE7     		b	.L14
 319              	.L20:
2134:os/queue.c    ****     UBaseType_t uxMessagesWaiting;
 320              		.loc 1 2134 16 view .LVU100
 321 0072 0020     		movs	r0, #0
 322 0074 CDE7     		b	.L14
 323              		.cfi_endproc
 324              	.LFE33:
 326              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv5-d16
 333              	prvCopyDataFromQueue:
 334              	.LVL32:
 335              	.LFB34:
2215:os/queue.c    ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 336              		.loc 1 2215 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
2215:os/queue.c    ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 340              		.loc 1 2215 1 is_stmt 0 view .LVU102
 341 0000 0346     		mov	r3, r0
2216:os/queue.c    ****     {
 342              		.loc 1 2216 5 is_stmt 1 view .LVU103
2216:os/queue.c    ****     {
 343              		.loc 1 2216 16 is_stmt 0 view .LVU104
 344 0002 026C     		ldr	r2, [r0, #64]
2216:os/queue.c    ****     {
 345              		.loc 1 2216 7 view .LVU105
 346 0004 6AB1     		cbz	r2, .L28
2215:os/queue.c    ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 347              		.loc 1 2215 1 view .LVU106
 348 0006 10B5     		push	{r4, lr}
 349              	.LCFI3:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 353 0008 0846     		mov	r0, r1
 354              	.LVL33:
2218:os/queue.c    **** 
 355              		.loc 1 2218 9 is_stmt 1 view .LVU107
2218:os/queue.c    **** 
 356              		.loc 1 2218 38 is_stmt 0 view .LVU108
 357 000a D968     		ldr	r1, [r3, #12]
 358              	.LVL34:
2218:os/queue.c    **** 
 359              		.loc 1 2218 38 view .LVU109
 360 000c 1144     		add	r1, r1, r2
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 51


 361 000e D960     		str	r1, [r3, #12]
2220:os/queue.c    ****         {
 362              		.loc 1 2220 9 is_stmt 1 view .LVU110
2220:os/queue.c    ****         {
 363              		.loc 1 2220 62 is_stmt 0 view .LVU111
 364 0010 9C68     		ldr	r4, [r3, #8]
2220:os/queue.c    ****         {
 365              		.loc 1 2220 11 view .LVU112
 366 0012 A142     		cmp	r1, r4
 367 0014 01D3     		bcc	.L26
2222:os/queue.c    ****         }
 368              		.loc 1 2222 13 is_stmt 1 view .LVU113
2222:os/queue.c    ****         }
 369              		.loc 1 2222 51 is_stmt 0 view .LVU114
 370 0016 1968     		ldr	r1, [r3]
2222:os/queue.c    ****         }
 371              		.loc 1 2222 42 view .LVU115
 372 0018 D960     		str	r1, [r3, #12]
 373              	.L26:
2226:os/queue.c    ****         }
 374              		.loc 1 2226 37 is_stmt 1 view .LVU116
2229:os/queue.c    ****     }
 375              		.loc 1 2229 9 view .LVU117
2229:os/queue.c    ****     }
 376              		.loc 1 2229 18 is_stmt 0 view .LVU118
 377 001a D968     		ldr	r1, [r3, #12]
 378 001c FFF7FEFF 		bl	memcpy
 379              	.LVL35:
2231:os/queue.c    **** /*-----------------------------------------------------------*/
 380              		.loc 1 2231 1 view .LVU119
 381 0020 10BD     		pop	{r4, pc}
 382              	.LVL36:
 383              	.L28:
 384              	.LCFI4:
 385              		.cfi_def_cfa_offset 0
 386              		.cfi_restore 4
 387              		.cfi_restore 14
2231:os/queue.c    **** /*-----------------------------------------------------------*/
 388              		.loc 1 2231 1 view .LVU120
 389 0022 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE34:
 393              		.section	.text.prvUnlockQueue,"ax",%progbits
 394              		.align	1
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv5-d16
 400              	prvUnlockQueue:
 401              	.LVL37:
 402              	.LFB35:
2235:os/queue.c    ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 403              		.loc 1 2235 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
2235:os/queue.c    ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 52


 407              		.loc 1 2235 1 is_stmt 0 view .LVU122
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              	.LCFI5:
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 3, -16
 412              		.cfi_offset 4, -12
 413              		.cfi_offset 5, -8
 414              		.cfi_offset 14, -4
 415 0002 0546     		mov	r5, r0
2242:os/queue.c    ****     {
 416              		.loc 1 2242 5 is_stmt 1 view .LVU123
 417 0004 FFF7FEFF 		bl	vPortEnterCritical
 418              	.LVL38:
 419              	.LBB138:
2244:os/queue.c    **** 
 420              		.loc 1 2244 9 view .LVU124
2244:os/queue.c    **** 
 421              		.loc 1 2244 16 is_stmt 0 view .LVU125
 422 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 423 000c 64B2     		sxtb	r4, r4
 424              	.LVL39:
2247:os/queue.c    ****         {
 425              		.loc 1 2247 9 is_stmt 1 view .LVU126
2247:os/queue.c    ****         {
 426              		.loc 1 2247 14 is_stmt 0 view .LVU127
 427 000e 03E0     		b	.L32
 428              	.L41:
2301:os/queue.c    ****                         }
 429              		.loc 1 2301 29 is_stmt 1 view .LVU128
 430 0010 FFF7FEFF 		bl	vTaskMissedYield
 431              	.LVL40:
 432              	.L34:
2305:os/queue.c    ****                         }
 433              		.loc 1 2305 53 view .LVU129
2315:os/queue.c    ****         }
 434              		.loc 1 2315 13 view .LVU130
 435 0014 013C     		subs	r4, r4, #1
 436              	.LVL41:
2315:os/queue.c    ****         }
 437              		.loc 1 2315 13 is_stmt 0 view .LVU131
 438 0016 64B2     		sxtb	r4, r4
 439              	.LVL42:
 440              	.L32:
2247:os/queue.c    ****         {
 441              		.loc 1 2247 14 is_stmt 1 view .LVU132
 442 0018 002C     		cmp	r4, #0
 443 001a 08DD     		ble	.L33
2295:os/queue.c    ****                     {
 444              		.loc 1 2295 21 view .LVU133
2295:os/queue.c    ****                     {
 445              		.loc 1 2295 25 is_stmt 0 view .LVU134
 446 001c 6B6A     		ldr	r3, [r5, #36]
2295:os/queue.c    ****                     {
 447              		.loc 1 2295 23 view .LVU135
 448 001e 33B1     		cbz	r3, .L33
2297:os/queue.c    ****                         {
 449              		.loc 1 2297 25 is_stmt 1 view .LVU136
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 53


2297:os/queue.c    ****                         {
 450              		.loc 1 2297 29 is_stmt 0 view .LVU137
 451 0020 05F12400 		add	r0, r5, #36
 452 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 453              	.LVL43:
2297:os/queue.c    ****                         {
 454              		.loc 1 2297 27 view .LVU138
 455 0028 0028     		cmp	r0, #0
 456 002a F3D0     		beq	.L34
 457 002c F0E7     		b	.L41
 458              	.L33:
2318:os/queue.c    ****     }
 459              		.loc 1 2318 9 is_stmt 1 view .LVU139
2318:os/queue.c    ****     }
 460              		.loc 1 2318 26 is_stmt 0 view .LVU140
 461 002e FF23     		movs	r3, #255
 462 0030 85F84530 		strb	r3, [r5, #69]
 463              	.LBE138:
2320:os/queue.c    **** 
 464              		.loc 1 2320 5 is_stmt 1 view .LVU141
 465 0034 FFF7FEFF 		bl	vPortExitCritical
 466              	.LVL44:
2323:os/queue.c    ****     {
 467              		.loc 1 2323 5 view .LVU142
 468 0038 FFF7FEFF 		bl	vPortEnterCritical
 469              	.LVL45:
 470              	.LBB139:
2325:os/queue.c    **** 
 471              		.loc 1 2325 9 view .LVU143
2325:os/queue.c    **** 
 472              		.loc 1 2325 16 is_stmt 0 view .LVU144
 473 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 474              	.LVL46:
2325:os/queue.c    **** 
 475              		.loc 1 2325 16 view .LVU145
 476 0040 64B2     		sxtb	r4, r4
 477              	.LVL47:
2327:os/queue.c    ****         {
 478              		.loc 1 2327 9 is_stmt 1 view .LVU146
2327:os/queue.c    ****         {
 479              		.loc 1 2327 14 is_stmt 0 view .LVU147
 480 0042 03E0     		b	.L36
 481              	.L42:
2333:os/queue.c    ****                 }
 482              		.loc 1 2333 21 is_stmt 1 view .LVU148
 483 0044 FFF7FEFF 		bl	vTaskMissedYield
 484              	.LVL48:
 485              	.L38:
2337:os/queue.c    ****                 }
 486              		.loc 1 2337 45 view .LVU149
2340:os/queue.c    ****             }
 487              		.loc 1 2340 17 view .LVU150
 488 0048 013C     		subs	r4, r4, #1
 489              	.LVL49:
2340:os/queue.c    ****             }
 490              		.loc 1 2340 17 is_stmt 0 view .LVU151
 491 004a 64B2     		sxtb	r4, r4
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 54


 492              	.LVL50:
 493              	.L36:
2327:os/queue.c    ****         {
 494              		.loc 1 2327 14 is_stmt 1 view .LVU152
 495 004c 002C     		cmp	r4, #0
 496 004e 08DD     		ble	.L37
2329:os/queue.c    ****             {
 497              		.loc 1 2329 13 view .LVU153
2329:os/queue.c    ****             {
 498              		.loc 1 2329 17 is_stmt 0 view .LVU154
 499 0050 2B69     		ldr	r3, [r5, #16]
2329:os/queue.c    ****             {
 500              		.loc 1 2329 15 view .LVU155
 501 0052 33B1     		cbz	r3, .L37
2331:os/queue.c    ****                 {
 502              		.loc 1 2331 17 is_stmt 1 view .LVU156
2331:os/queue.c    ****                 {
 503              		.loc 1 2331 21 is_stmt 0 view .LVU157
 504 0054 05F11000 		add	r0, r5, #16
 505 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 506              	.LVL51:
2331:os/queue.c    ****                 {
 507              		.loc 1 2331 19 view .LVU158
 508 005c 0028     		cmp	r0, #0
 509 005e F3D0     		beq	.L38
 510 0060 F0E7     		b	.L42
 511              	.L37:
2348:os/queue.c    ****     }
 512              		.loc 1 2348 9 is_stmt 1 view .LVU159
2348:os/queue.c    ****     }
 513              		.loc 1 2348 26 is_stmt 0 view .LVU160
 514 0062 FF23     		movs	r3, #255
 515 0064 85F84430 		strb	r3, [r5, #68]
 516              	.LBE139:
2350:os/queue.c    **** }
 517              		.loc 1 2350 5 is_stmt 1 view .LVU161
 518 0068 FFF7FEFF 		bl	vPortExitCritical
 519              	.LVL52:
2351:os/queue.c    **** /*-----------------------------------------------------------*/
 520              		.loc 1 2351 1 is_stmt 0 view .LVU162
 521 006c 38BD     		pop	{r3, r4, r5, pc}
2351:os/queue.c    **** /*-----------------------------------------------------------*/
 522              		.loc 1 2351 1 view .LVU163
 523              		.cfi_endproc
 524              	.LFE35:
 526              		.section	.text.xQueueGenericReset,"ax",%progbits
 527              		.align	1
 528              		.global	xQueueGenericReset
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv5-d16
 534              	xQueueGenericReset:
 535              	.LVL53:
 536              	.LFB4:
 266:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 537              		.loc 1 266 1 is_stmt 1 view -0
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 55


 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 266:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 541              		.loc 1 266 1 is_stmt 0 view .LVU165
 542 0000 38B5     		push	{r3, r4, r5, lr}
 543              	.LCFI6:
 544              		.cfi_def_cfa_offset 16
 545              		.cfi_offset 3, -16
 546              		.cfi_offset 4, -12
 547              		.cfi_offset 5, -8
 548              		.cfi_offset 14, -4
 267:os/queue.c    **** 
 549              		.loc 1 267 5 is_stmt 1 view .LVU166
 550              	.LVL54:
 269:os/queue.c    **** 
 551              		.loc 1 269 5 view .LVU167
 552 0002 E0B1     		cbz	r0, .L49
 553 0004 0D46     		mov	r5, r1
 554 0006 0446     		mov	r4, r0
 269:os/queue.c    **** 
 555              		.loc 1 269 28 discriminator 2 view .LVU168
 271:os/queue.c    ****     {
 556              		.loc 1 271 5 discriminator 2 view .LVU169
 557 0008 FFF7FEFF 		bl	vPortEnterCritical
 558              	.LVL55:
 273:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 559              		.loc 1 273 9 discriminator 2 view .LVU170
 273:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 560              		.loc 1 273 43 is_stmt 0 discriminator 2 view .LVU171
 561 000c 2168     		ldr	r1, [r4]
 273:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 562              		.loc 1 273 63 discriminator 2 view .LVU172
 563 000e E26B     		ldr	r2, [r4, #60]
 273:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 564              		.loc 1 273 83 discriminator 2 view .LVU173
 565 0010 236C     		ldr	r3, [r4, #64]
 273:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 566              		.loc 1 273 52 discriminator 2 view .LVU174
 567 0012 03FB0210 		mla	r0, r3, r2, r1
 273:os/queue.c    ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 568              		.loc 1 273 34 discriminator 2 view .LVU175
 569 0016 A060     		str	r0, [r4, #8]
 274:os/queue.c    ****         pxQueue->pcWriteTo = pxQueue->pcHead;
 570              		.loc 1 274 9 is_stmt 1 discriminator 2 view .LVU176
 274:os/queue.c    ****         pxQueue->pcWriteTo = pxQueue->pcHead;
 571              		.loc 1 274 36 is_stmt 0 discriminator 2 view .LVU177
 572 0018 0020     		movs	r0, #0
 573 001a A063     		str	r0, [r4, #56]
 275:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->ux
 574              		.loc 1 275 9 is_stmt 1 discriminator 2 view .LVU178
 275:os/queue.c    ****         pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->ux
 575              		.loc 1 275 28 is_stmt 0 discriminator 2 view .LVU179
 576 001c 6160     		str	r1, [r4, #4]
 276:os/queue.c    ****         pxQueue->cRxLock = queueUNLOCKED;
 577              		.loc 1 276 9 is_stmt 1 discriminator 2 view .LVU180
 276:os/queue.c    ****         pxQueue->cRxLock = queueUNLOCKED;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 56


 578              		.loc 1 276 80 is_stmt 0 discriminator 2 view .LVU181
 579 001e 013A     		subs	r2, r2, #1
 276:os/queue.c    ****         pxQueue->cRxLock = queueUNLOCKED;
 580              		.loc 1 276 56 discriminator 2 view .LVU182
 581 0020 02FB0313 		mla	r3, r2, r3, r1
 276:os/queue.c    ****         pxQueue->cRxLock = queueUNLOCKED;
 582              		.loc 1 276 38 discriminator 2 view .LVU183
 583 0024 E360     		str	r3, [r4, #12]
 277:os/queue.c    ****         pxQueue->cTxLock = queueUNLOCKED;
 584              		.loc 1 277 9 is_stmt 1 discriminator 2 view .LVU184
 277:os/queue.c    ****         pxQueue->cTxLock = queueUNLOCKED;
 585              		.loc 1 277 26 is_stmt 0 discriminator 2 view .LVU185
 586 0026 FF23     		movs	r3, #255
 587 0028 84F84430 		strb	r3, [r4, #68]
 278:os/queue.c    **** 
 588              		.loc 1 278 9 is_stmt 1 discriminator 2 view .LVU186
 278:os/queue.c    **** 
 589              		.loc 1 278 26 is_stmt 0 discriminator 2 view .LVU187
 590 002c 84F84530 		strb	r3, [r4, #69]
 280:os/queue.c    ****         {
 591              		.loc 1 280 9 is_stmt 1 discriminator 2 view .LVU188
 280:os/queue.c    ****         {
 592              		.loc 1 280 11 is_stmt 0 discriminator 2 view .LVU189
 593 0030 FDB9     		cbnz	r5, .L46
 287:os/queue.c    ****             {
 594              		.loc 1 287 13 is_stmt 1 view .LVU190
 287:os/queue.c    ****             {
 595              		.loc 1 287 17 is_stmt 0 view .LVU191
 596 0032 2369     		ldr	r3, [r4, #16]
 287:os/queue.c    ****             {
 597              		.loc 1 287 15 view .LVU192
 598 0034 73B9     		cbnz	r3, .L50
 599              	.L47:
 310:os/queue.c    **** 
 600              		.loc 1 310 5 is_stmt 1 view .LVU193
 601 0036 FFF7FEFF 		bl	vPortExitCritical
 602              	.LVL56:
 314:os/queue.c    **** }
 603              		.loc 1 314 5 view .LVU194
 315:os/queue.c    **** /*-----------------------------------------------------------*/
 604              		.loc 1 315 1 is_stmt 0 view .LVU195
 605 003a 0120     		movs	r0, #1
 606 003c 38BD     		pop	{r3, r4, r5, pc}
 607              	.LVL57:
 608              	.L49:
 269:os/queue.c    **** 
 609              		.loc 1 269 5 is_stmt 1 view .LVU196
 610              	.LBB140:
 611              	.LBI140:
 612              		.file 2 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FreeRTOS Kernel V10.4.3
   3:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
   5:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 57


   8:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * subject to the following conditions:
  11:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  12:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * copies or substantial portions of the Software.
  14:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  15:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  22:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * https://www.FreeRTOS.org
  23:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * https://github.com/FreeRTOS
  24:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  25:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * 1 tab == 4 spaces!
  26:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  27:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  28:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  29:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  30:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define PORTMACRO_H
  31:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  32:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifdef __cplusplus
  33:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         extern "C" {
  34:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
  35:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  36:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  37:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  38:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  39:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  41:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  42:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  43:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  44:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  45:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  46:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  47:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portCHAR          char
  48:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portFLOAT         float
  49:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portDOUBLE        double
  50:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portLONG          long
  51:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSHORT         short
  52:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portBASE_TYPE     long
  54:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  55:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     typedef long             BaseType_t;
  57:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         typedef uint16_t     TickType_t;
  61:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #else
  63:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         typedef uint32_t     TickType_t;
  64:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 58


  65:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  66:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * not need to be guarded with a critical section. */
  68:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
  70:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  71:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  72:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
  73:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  78:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  79:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
  80:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portYIELD()                                 \
  81:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {                                                   \
  82:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****                                                         \
  85:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
  90:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  91:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  96:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  97:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
  98:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     extern void vPortEnterCritical( void );
  99:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     extern void vPortExitCritical( void );
 100:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 107:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 108:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 109:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * (which build with all the ports) will build. */
 112:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 115:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 116:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 117:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 121:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 59


 122:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 123:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 124:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 127:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 128:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 130:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Generic helper function. */
 131:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         {
 133:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             uint8_t ucReturn;
 134:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 135:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 137:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             return ucReturn;
 138:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         }
 139:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 140:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Check the configuration. */
 141:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #endif
 144:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 145:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 149:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 150:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 151:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 153:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 155:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 156:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 157:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifdef configASSERT
 158:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 161:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 162:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 163:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portNOP()
 164:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 165:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #define portINLINE              __inline
 166:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 167:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #ifndef portFORCE_INLINE
 168:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     #endif
 170:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 171:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 173:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         BaseType_t xReturn;
 175:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 176:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 60


 179:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         {
 181:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             xReturn = pdFALSE;
 182:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         }
 183:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         else
 184:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         {
 185:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             xReturn = pdTRUE;
 186:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         }
 187:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 188:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         return xReturn;
 189:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 190:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 192:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 613              		.loc 2 193 34 view .LVU197
 614              	.LBB141:
 194:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         uint32_t ulNewBASEPRI;
 615              		.loc 2 195 9 view .LVU198
 196:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile
 616              		.loc 2 197 9 view .LVU199
 617              		.syntax unified
 618              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 619 003e 4FF05003 			mov r3, #80												
 620 0042 72B6     		cpsid i													
 621 0044 83F31188 		msr basepri, r3											
 622 0048 BFF36F8F 		isb														
 623 004c BFF34F8F 		dsb														
 624 0050 62B6     		cpsie i													
 625              	
 626              	@ 0 "" 2
 627              	.LVL58:
 628              		.thumb
 629              		.syntax unified
 630              	.L45:
 631              		.loc 2 197 9 is_stmt 0 view .LVU200
 632              	.LBE141:
 633              	.LBE140:
 269:os/queue.c    **** 
 634              		.loc 1 269 5 is_stmt 1 discriminator 1 view .LVU201
 269:os/queue.c    **** 
 635              		.loc 1 269 5 discriminator 1 view .LVU202
 269:os/queue.c    **** 
 636              		.loc 1 269 5 discriminator 1 view .LVU203
 637 0052 FEE7     		b	.L45
 638              	.LVL59:
 639              	.L50:
 289:os/queue.c    ****                 {
 640              		.loc 1 289 17 view .LVU204
 289:os/queue.c    ****                 {
 641              		.loc 1 289 21 is_stmt 0 view .LVU205
 642 0054 04F11000 		add	r0, r4, #16
 643 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 644              	.LVL60:
 289:os/queue.c    ****                 {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 61


 645              		.loc 1 289 19 view .LVU206
 646 005c 0028     		cmp	r0, #0
 647 005e EAD0     		beq	.L47
 291:os/queue.c    ****                 }
 648              		.loc 1 291 21 is_stmt 1 view .LVU207
 649 0060 084B     		ldr	r3, .L51
 650 0062 4FF08052 		mov	r2, #268435456
 651 0066 1A60     		str	r2, [r3]
 291:os/queue.c    ****                 }
 652              		.loc 1 291 21 view .LVU208
 653              		.syntax unified
 654              	@ 291 "os/queue.c" 1
 655 0068 BFF34F8F 		dsb
 656              	@ 0 "" 2
 291:os/queue.c    ****                 }
 657              		.loc 1 291 21 view .LVU209
 658              	@ 291 "os/queue.c" 1
 659 006c BFF36F8F 		isb
 660              	@ 0 "" 2
 291:os/queue.c    ****                 }
 661              		.loc 1 291 53 view .LVU210
 662              		.thumb
 663              		.syntax unified
 664 0070 E1E7     		b	.L47
 665              	.L46:
 306:os/queue.c    ****             vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 666              		.loc 1 306 13 view .LVU211
 667 0072 04F11000 		add	r0, r4, #16
 668 0076 FFF7FEFF 		bl	vListInitialise
 669              	.LVL61:
 307:os/queue.c    ****         }
 670              		.loc 1 307 13 view .LVU212
 671 007a 04F12400 		add	r0, r4, #36
 672 007e FFF7FEFF 		bl	vListInitialise
 673              	.LVL62:
 674 0082 D8E7     		b	.L47
 675              	.L52:
 676              		.align	2
 677              	.L51:
 678 0084 04ED00E0 		.word	-536810236
 679              		.cfi_endproc
 680              	.LFE4:
 682              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 683              		.align	1
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv5-d16
 689              	prvInitialiseNewQueue:
 690              	.LVL63:
 691              	.LFB7:
 451:os/queue.c    ****     /* Remove compiler warnings about unused parameters should
 692              		.loc 1 451 1 view -0
 693              		.cfi_startproc
 694              		@ args = 4, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 451:os/queue.c    ****     /* Remove compiler warnings about unused parameters should
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 62


 696              		.loc 1 451 1 is_stmt 0 view .LVU214
 697 0000 38B5     		push	{r3, r4, r5, lr}
 698              	.LCFI7:
 699              		.cfi_def_cfa_offset 16
 700              		.cfi_offset 3, -16
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 5, -8
 703              		.cfi_offset 14, -4
 704 0002 1D46     		mov	r5, r3
 705 0004 049C     		ldr	r4, [sp, #16]
 454:os/queue.c    **** 
 706              		.loc 1 454 5 is_stmt 1 view .LVU215
 456:os/queue.c    ****     {
 707              		.loc 1 456 5 view .LVU216
 456:os/queue.c    ****     {
 708              		.loc 1 456 7 is_stmt 0 view .LVU217
 709 0006 0B46     		mov	r3, r1
 710              	.LVL64:
 456:os/queue.c    ****     {
 711              		.loc 1 456 7 view .LVU218
 712 0008 49B9     		cbnz	r1, .L54
 462:os/queue.c    ****     }
 713              		.loc 1 462 9 is_stmt 1 view .LVU219
 462:os/queue.c    ****     }
 714              		.loc 1 462 28 is_stmt 0 view .LVU220
 715 000a 2460     		str	r4, [r4]
 716              	.L55:
 472:os/queue.c    ****     pxNewQueue->uxItemSize = uxItemSize;
 717              		.loc 1 472 5 is_stmt 1 view .LVU221
 472:os/queue.c    ****     pxNewQueue->uxItemSize = uxItemSize;
 718              		.loc 1 472 26 is_stmt 0 view .LVU222
 719 000c E063     		str	r0, [r4, #60]
 473:os/queue.c    ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 720              		.loc 1 473 5 is_stmt 1 view .LVU223
 473:os/queue.c    ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 721              		.loc 1 473 28 is_stmt 0 view .LVU224
 722 000e 2364     		str	r3, [r4, #64]
 474:os/queue.c    **** 
 723              		.loc 1 474 5 is_stmt 1 view .LVU225
 474:os/queue.c    **** 
 724              		.loc 1 474 14 is_stmt 0 view .LVU226
 725 0010 0121     		movs	r1, #1
 726              	.LVL65:
 474:os/queue.c    **** 
 727              		.loc 1 474 14 view .LVU227
 728 0012 2046     		mov	r0, r4
 729              	.LVL66:
 474:os/queue.c    **** 
 730              		.loc 1 474 14 view .LVU228
 731 0014 FFF7FEFF 		bl	xQueueGenericReset
 732              	.LVL67:
 478:os/queue.c    ****         }
 733              		.loc 1 478 13 is_stmt 1 view .LVU229
 478:os/queue.c    ****         }
 734              		.loc 1 478 37 is_stmt 0 view .LVU230
 735 0018 84F84C50 		strb	r5, [r4, #76]
 488:os/queue.c    **** }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 63


 736              		.loc 1 488 36 is_stmt 1 view .LVU231
 489:os/queue.c    **** /*-----------------------------------------------------------*/
 737              		.loc 1 489 1 is_stmt 0 view .LVU232
 738 001c 38BD     		pop	{r3, r4, r5, pc}
 739              	.LVL68:
 740              	.L54:
 467:os/queue.c    ****     }
 741              		.loc 1 467 9 is_stmt 1 view .LVU233
 467:os/queue.c    ****     }
 742              		.loc 1 467 28 is_stmt 0 view .LVU234
 743 001e 2260     		str	r2, [r4]
 744 0020 F4E7     		b	.L55
 745              		.cfi_endproc
 746              	.LFE7:
 748              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 749              		.align	1
 750              		.global	xQueueGenericCreateStatic
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv5-d16
 756              	xQueueGenericCreateStatic:
 757              	.LVL69:
 758              	.LFB5:
 325:os/queue.c    ****         Queue_t * pxNewQueue;
 759              		.loc 1 325 5 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 4, pretend = 0, frame = 8
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 326:os/queue.c    **** 
 763              		.loc 1 326 9 view .LVU236
 328:os/queue.c    **** 
 764              		.loc 1 328 9 view .LVU237
 765 0000 50B9     		cbnz	r0, .L58
 328:os/queue.c    **** 
 766              		.loc 1 328 9 view .LVU238
 767              	.LBB142:
 768              	.LBI142:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 769              		.loc 2 193 34 view .LVU239
 770              	.LBB143:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 771              		.loc 2 195 9 view .LVU240
 772              		.loc 2 197 9 view .LVU241
 773              		.syntax unified
 774              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 775 0002 4FF05003 			mov r3, #80												
 776 0006 72B6     		cpsid i													
 777 0008 83F31188 		msr basepri, r3											
 778 000c BFF36F8F 		isb														
 779 0010 BFF34F8F 		dsb														
 780 0014 62B6     		cpsie i													
 781              	
 782              	@ 0 "" 2
 783              	.LVL70:
 784              		.thumb
 785              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 64


 786              	.L59:
 787              		.loc 2 197 9 is_stmt 0 view .LVU242
 788              	.LBE143:
 789              	.LBE142:
 328:os/queue.c    **** 
 790              		.loc 1 328 9 is_stmt 1 discriminator 1 view .LVU243
 328:os/queue.c    **** 
 791              		.loc 1 328 9 discriminator 1 view .LVU244
 328:os/queue.c    **** 
 792              		.loc 1 328 9 discriminator 1 view .LVU245
 793 0016 FEE7     		b	.L59
 794              	.LVL71:
 795              	.L58:
 325:os/queue.c    ****         Queue_t * pxNewQueue;
 796              		.loc 1 325 5 is_stmt 0 discriminator 2 view .LVU246
 797 0018 30B5     		push	{r4, r5, lr}
 798              	.LCFI8:
 799              		.cfi_def_cfa_offset 12
 800              		.cfi_offset 4, -12
 801              		.cfi_offset 5, -8
 802              		.cfi_offset 14, -4
 803 001a 85B0     		sub	sp, sp, #20
 804              	.LCFI9:
 805              		.cfi_def_cfa_offset 32
 806 001c 1C46     		mov	r4, r3
 328:os/queue.c    **** 
 807              		.loc 1 328 58 is_stmt 1 discriminator 2 view .LVU247
 332:os/queue.c    **** 
 808              		.loc 1 332 9 discriminator 2 view .LVU248
 809 001e 8BB1     		cbz	r3, .L70
 332:os/queue.c    **** 
 810              		.loc 1 332 46 discriminator 2 view .LVU249
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 811              		.loc 1 336 9 discriminator 2 view .LVU250
 812 0020 0B1E     		subs	r3, r1, #0
 813              	.LVL72:
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 814              		.loc 1 336 9 is_stmt 0 discriminator 2 view .LVU251
 815 0022 18BF     		it	ne
 816 0024 0123     		movne	r3, #1
 817 0026 002A     		cmp	r2, #0
 818 0028 08BF     		it	eq
 819 002a 0123     		moveq	r3, #1
 820 002c ABB9     		cbnz	r3, .L62
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 821              		.loc 1 336 9 is_stmt 1 view .LVU252
 822              	.LBB144:
 823              	.LBI144:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 824              		.loc 2 193 34 view .LVU253
 825              	.LBB145:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 826              		.loc 2 195 9 view .LVU254
 827              		.loc 2 197 9 view .LVU255
 828              		.syntax unified
 829              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 830 002e 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 65


 831 0032 72B6     		cpsid i													
 832 0034 83F31188 		msr basepri, r3											
 833 0038 BFF36F8F 		isb														
 834 003c BFF34F8F 		dsb														
 835 0040 62B6     		cpsie i													
 836              	
 837              	@ 0 "" 2
 838              	.LVL73:
 839              		.thumb
 840              		.syntax unified
 841              	.L63:
 842              		.loc 2 197 9 is_stmt 0 view .LVU256
 843              	.LBE145:
 844              	.LBE144:
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 845              		.loc 1 336 9 is_stmt 1 discriminator 3 view .LVU257
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 846              		.loc 1 336 9 discriminator 3 view .LVU258
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 847              		.loc 1 336 9 discriminator 3 view .LVU259
 848 0042 FEE7     		b	.L63
 849              	.LVL74:
 850              	.L70:
 332:os/queue.c    **** 
 851              		.loc 1 332 9 view .LVU260
 852              	.LBB146:
 853              	.LBI146:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 854              		.loc 2 193 34 view .LVU261
 855              	.LBB147:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 856              		.loc 2 195 9 view .LVU262
 857              		.loc 2 197 9 view .LVU263
 858              		.syntax unified
 859              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 860 0044 4FF05003 			mov r3, #80												
 861 0048 72B6     		cpsid i													
 862 004a 83F31188 		msr basepri, r3											
 863 004e BFF36F8F 		isb														
 864 0052 BFF34F8F 		dsb														
 865 0056 62B6     		cpsie i													
 866              	
 867              	@ 0 "" 2
 868              	.LVL75:
 869              		.thumb
 870              		.syntax unified
 871              	.L61:
 872              		.loc 2 197 9 is_stmt 0 view .LVU264
 873              	.LBE147:
 874              	.LBE146:
 332:os/queue.c    **** 
 875              		.loc 1 332 9 is_stmt 1 discriminator 2 view .LVU265
 332:os/queue.c    **** 
 876              		.loc 1 332 9 discriminator 2 view .LVU266
 332:os/queue.c    **** 
 877              		.loc 1 332 9 discriminator 2 view .LVU267
 878 0058 FEE7     		b	.L61
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 66


 879              	.L62:
 336:os/queue.c    ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 880              		.loc 1 336 80 discriminator 2 view .LVU268
 337:os/queue.c    **** 
 881              		.loc 1 337 9 discriminator 2 view .LVU269
 882 005a B1FA81F3 		clz	r3, r1
 883 005e 5B09     		lsrs	r3, r3, #5
 884 0060 002A     		cmp	r2, #0
 885 0062 18BF     		it	ne
 886 0064 0123     		movne	r3, #1
 887 0066 53B9     		cbnz	r3, .L64
 337:os/queue.c    **** 
 888              		.loc 1 337 9 view .LVU270
 889              	.LBB148:
 890              	.LBI148:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 891              		.loc 2 193 34 view .LVU271
 892              	.LBB149:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 893              		.loc 2 195 9 view .LVU272
 894              		.loc 2 197 9 view .LVU273
 895              		.syntax unified
 896              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 897 0068 4FF05003 			mov r3, #80												
 898 006c 72B6     		cpsid i													
 899 006e 83F31188 		msr basepri, r3											
 900 0072 BFF36F8F 		isb														
 901 0076 BFF34F8F 		dsb														
 902 007a 62B6     		cpsie i													
 903              	
 904              	@ 0 "" 2
 905              	.LVL76:
 906              		.thumb
 907              		.syntax unified
 908              	.L65:
 909              		.loc 2 197 9 is_stmt 0 view .LVU274
 910              	.LBE149:
 911              	.LBE148:
 337:os/queue.c    **** 
 912              		.loc 1 337 9 is_stmt 1 discriminator 4 view .LVU275
 337:os/queue.c    **** 
 913              		.loc 1 337 9 discriminator 4 view .LVU276
 337:os/queue.c    **** 
 914              		.loc 1 337 9 discriminator 4 view .LVU277
 915 007c FEE7     		b	.L65
 916              	.L64:
 337:os/queue.c    **** 
 917              		.loc 1 337 80 discriminator 2 view .LVU278
 918              	.LBB150:
 344:os/queue.c    **** 
 919              		.loc 1 344 17 discriminator 2 view .LVU279
 344:os/queue.c    **** 
 920              		.loc 1 344 33 is_stmt 0 discriminator 2 view .LVU280
 921 007e 5023     		movs	r3, #80
 922 0080 0393     		str	r3, [sp, #12]
 347:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 923              		.loc 1 347 17 is_stmt 1 discriminator 2 view .LVU281
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 67


 924 0082 039B     		ldr	r3, [sp, #12]
 925 0084 502B     		cmp	r3, #80
 926 0086 0AD0     		beq	.L66
 347:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 927              		.loc 1 347 17 view .LVU282
 928              	.LBB151:
 929              	.LBI151:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 930              		.loc 2 193 34 view .LVU283
 931              	.LBB152:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 932              		.loc 2 195 9 view .LVU284
 933              		.loc 2 197 9 view .LVU285
 934              		.syntax unified
 935              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 936 0088 4FF05003 			mov r3, #80												
 937 008c 72B6     		cpsid i													
 938 008e 83F31188 		msr basepri, r3											
 939 0092 BFF36F8F 		isb														
 940 0096 BFF34F8F 		dsb														
 941 009a 62B6     		cpsie i													
 942              	
 943              	@ 0 "" 2
 944              	.LVL77:
 945              		.thumb
 946              		.syntax unified
 947              	.L67:
 948              		.loc 2 197 9 is_stmt 0 view .LVU286
 949              	.LBE152:
 950              	.LBE151:
 347:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 951              		.loc 1 347 17 is_stmt 1 discriminator 5 view .LVU287
 347:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 952              		.loc 1 347 17 discriminator 5 view .LVU288
 347:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 953              		.loc 1 347 17 discriminator 5 view .LVU289
 954 009c FEE7     		b	.L67
 955              	.L66:
 347:os/queue.c    ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 956              		.loc 1 347 59 discriminator 2 view .LVU290
 348:os/queue.c    ****             }
 957              		.loc 1 348 17 discriminator 2 view .LVU291
 958 009e 039B     		ldr	r3, [sp, #12]
 959              	.LBE150:
 355:os/queue.c    **** 
 960              		.loc 1 355 9 discriminator 2 view .LVU292
 961              	.LVL78:
 357:os/queue.c    ****         {
 962              		.loc 1 357 9 discriminator 2 view .LVU293
 364:os/queue.c    ****                 }
 963              		.loc 1 364 21 discriminator 2 view .LVU294
 364:os/queue.c    ****                 }
 964              		.loc 1 364 55 is_stmt 0 discriminator 2 view .LVU295
 965 00a0 0123     		movs	r3, #1
 966 00a2 84F84630 		strb	r3, [r4, #70]
 368:os/queue.c    ****         }
 967              		.loc 1 368 13 is_stmt 1 discriminator 2 view .LVU296
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 68


 968 00a6 0094     		str	r4, [sp]
 969 00a8 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 970 00ac FFF7FEFF 		bl	prvInitialiseNewQueue
 971              	.LVL79:
 372:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
 972              		.loc 1 372 52 discriminator 2 view .LVU297
 373:os/queue.c    ****         }
 973              		.loc 1 373 37 discriminator 2 view .LVU298
 376:os/queue.c    ****     }
 974              		.loc 1 376 9 discriminator 2 view .LVU299
 377:os/queue.c    **** 
 975              		.loc 1 377 5 is_stmt 0 discriminator 2 view .LVU300
 976 00b0 2046     		mov	r0, r4
 977 00b2 05B0     		add	sp, sp, #20
 978              	.LCFI10:
 979              		.cfi_def_cfa_offset 12
 980              		@ sp needed
 981 00b4 30BD     		pop	{r4, r5, pc}
 377:os/queue.c    **** 
 982              		.loc 1 377 5 discriminator 2 view .LVU301
 983              		.cfi_endproc
 984              	.LFE5:
 986              		.section	.text.xQueueGenericCreate,"ax",%progbits
 987              		.align	1
 988              		.global	xQueueGenericCreate
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu fpv5-d16
 994              	xQueueGenericCreate:
 995              	.LVL80:
 996              	.LFB6:
 387:os/queue.c    ****         Queue_t * pxNewQueue;
 997              		.loc 1 387 5 is_stmt 1 view -0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 388:os/queue.c    ****         size_t xQueueSizeInBytes;
 1001              		.loc 1 388 9 view .LVU303
 389:os/queue.c    ****         uint8_t * pucQueueStorage;
 1002              		.loc 1 389 9 view .LVU304
 390:os/queue.c    **** 
 1003              		.loc 1 390 9 view .LVU305
 392:os/queue.c    **** 
 1004              		.loc 1 392 9 view .LVU306
 1005 0000 50B9     		cbnz	r0, .L72
 392:os/queue.c    **** 
 1006              		.loc 1 392 9 view .LVU307
 1007              	.LBB153:
 1008              	.LBI153:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1009              		.loc 2 193 34 view .LVU308
 1010              	.LBB154:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1011              		.loc 2 195 9 view .LVU309
 1012              		.loc 2 197 9 view .LVU310
 1013              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 69


 1014              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1015 0002 4FF05003 			mov r3, #80												
 1016 0006 72B6     		cpsid i													
 1017 0008 83F31188 		msr basepri, r3											
 1018 000c BFF36F8F 		isb														
 1019 0010 BFF34F8F 		dsb														
 1020 0014 62B6     		cpsie i													
 1021              	
 1022              	@ 0 "" 2
 1023              	.LVL81:
 1024              		.thumb
 1025              		.syntax unified
 1026              	.L73:
 1027              		.loc 2 197 9 is_stmt 0 view .LVU311
 1028              	.LBE154:
 1029              	.LBE153:
 392:os/queue.c    **** 
 1030              		.loc 1 392 9 is_stmt 1 discriminator 1 view .LVU312
 392:os/queue.c    **** 
 1031              		.loc 1 392 9 discriminator 1 view .LVU313
 392:os/queue.c    **** 
 1032              		.loc 1 392 9 discriminator 1 view .LVU314
 1033 0016 FEE7     		b	.L73
 1034              	.L72:
 387:os/queue.c    ****         Queue_t * pxNewQueue;
 1035              		.loc 1 387 5 is_stmt 0 discriminator 2 view .LVU315
 1036 0018 F0B5     		push	{r4, r5, r6, r7, lr}
 1037              	.LCFI11:
 1038              		.cfi_def_cfa_offset 20
 1039              		.cfi_offset 4, -20
 1040              		.cfi_offset 5, -16
 1041              		.cfi_offset 6, -12
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 001a 83B0     		sub	sp, sp, #12
 1045              	.LCFI12:
 1046              		.cfi_def_cfa_offset 32
 1047 001c 0C46     		mov	r4, r1
 1048 001e 1746     		mov	r7, r2
 1049 0020 0646     		mov	r6, r0
 392:os/queue.c    **** 
 1050              		.loc 1 392 58 is_stmt 1 discriminator 2 view .LVU316
 397:os/queue.c    **** 
 1051              		.loc 1 397 9 discriminator 2 view .LVU317
 397:os/queue.c    **** 
 1052              		.loc 1 397 27 is_stmt 0 discriminator 2 view .LVU318
 1053 0022 01FB00F0 		mul	r0, r1, r0
 1054              	.LVL82:
 400:os/queue.c    **** 
 1055              		.loc 1 400 9 is_stmt 1 discriminator 2 view .LVU319
 1056 0026 71B1     		cbz	r1, .L74
 400:os/queue.c    **** 
 1057              		.loc 1 400 9 is_stmt 0 discriminator 2 view .LVU320
 1058 0028 B0FBF1F3 		udiv	r3, r0, r1
 1059 002c B342     		cmp	r3, r6
 1060 002e 0AD0     		beq	.L74
 400:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 70


 1061              		.loc 1 400 9 is_stmt 1 view .LVU321
 1062              	.LBB155:
 1063              	.LBI155:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1064              		.loc 2 193 34 view .LVU322
 1065              	.LBB156:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1066              		.loc 2 195 9 view .LVU323
 1067              		.loc 2 197 9 view .LVU324
 1068              		.syntax unified
 1069              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1070 0030 4FF05003 			mov r3, #80												
 1071 0034 72B6     		cpsid i													
 1072 0036 83F31188 		msr basepri, r3											
 1073 003a BFF36F8F 		isb														
 1074 003e BFF34F8F 		dsb														
 1075 0042 62B6     		cpsie i													
 1076              	
 1077              	@ 0 "" 2
 1078              	.LVL83:
 1079              		.thumb
 1080              		.syntax unified
 1081              	.L75:
 1082              		.loc 2 197 9 is_stmt 0 view .LVU325
 1083              	.LBE156:
 1084              	.LBE155:
 400:os/queue.c    **** 
 1085              		.loc 1 400 9 is_stmt 1 discriminator 2 view .LVU326
 400:os/queue.c    **** 
 1086              		.loc 1 400 9 discriminator 2 view .LVU327
 400:os/queue.c    **** 
 1087              		.loc 1 400 9 discriminator 2 view .LVU328
 1088 0044 FEE7     		b	.L75
 1089              	.L74:
 400:os/queue.c    **** 
 1090              		.loc 1 400 103 discriminator 8 view .LVU329
 403:os/queue.c    **** 
 1091              		.loc 1 403 9 discriminator 8 view .LVU330
 1092 0046 10F1510F 		cmn	r0, #81
 1093 004a 0AD9     		bls	.L76
 403:os/queue.c    **** 
 1094              		.loc 1 403 9 view .LVU331
 1095              	.LBB157:
 1096              	.LBI157:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1097              		.loc 2 193 34 view .LVU332
 1098              	.LBB158:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1099              		.loc 2 195 9 view .LVU333
 1100              		.loc 2 197 9 view .LVU334
 1101              		.syntax unified
 1102              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1103 004c 4FF05003 			mov r3, #80												
 1104 0050 72B6     		cpsid i													
 1105 0052 83F31188 		msr basepri, r3											
 1106 0056 BFF36F8F 		isb														
 1107 005a BFF34F8F 		dsb														
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 71


 1108 005e 62B6     		cpsie i													
 1109              	
 1110              	@ 0 "" 2
 1111              	.LVL84:
 1112              		.thumb
 1113              		.syntax unified
 1114              	.L77:
 1115              		.loc 2 197 9 is_stmt 0 view .LVU335
 1116              	.LBE158:
 1117              	.LBE157:
 403:os/queue.c    **** 
 1118              		.loc 1 403 9 is_stmt 1 discriminator 3 view .LVU336
 403:os/queue.c    **** 
 1119              		.loc 1 403 9 discriminator 3 view .LVU337
 403:os/queue.c    **** 
 1120              		.loc 1 403 9 discriminator 3 view .LVU338
 1121 0060 FEE7     		b	.L77
 1122              	.L76:
 403:os/queue.c    **** 
 1123              		.loc 1 403 86 discriminator 2 view .LVU339
 414:os/queue.c    **** 
 1124              		.loc 1 414 9 discriminator 2 view .LVU340
 414:os/queue.c    **** 
 1125              		.loc 1 414 36 is_stmt 0 discriminator 2 view .LVU341
 1126 0062 5030     		adds	r0, r0, #80
 1127              	.LVL85:
 414:os/queue.c    **** 
 1128              		.loc 1 414 36 discriminator 2 view .LVU342
 1129 0064 FFF7FEFF 		bl	pvPortMalloc
 1130              	.LVL86:
 416:os/queue.c    ****         {
 1131              		.loc 1 416 9 is_stmt 1 discriminator 2 view .LVU343
 416:os/queue.c    ****         {
 1132              		.loc 1 416 11 is_stmt 0 discriminator 2 view .LVU344
 1133 0068 0546     		mov	r5, r0
 1134 006a 50B1     		cbz	r0, .L71
 420:os/queue.c    ****             pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char 
 1135              		.loc 1 420 13 is_stmt 1 view .LVU345
 1136              	.LVL87:
 421:os/queue.c    **** 
 1137              		.loc 1 421 13 view .LVU346
 428:os/queue.c    ****                 }
 1138              		.loc 1 428 21 view .LVU347
 428:os/queue.c    ****                 }
 1139              		.loc 1 428 55 is_stmt 0 view .LVU348
 1140 006c 0023     		movs	r3, #0
 1141 006e 80F84630 		strb	r3, [r0, #70]
 432:os/queue.c    ****         }
 1142              		.loc 1 432 13 is_stmt 1 view .LVU349
 1143 0072 0090     		str	r0, [sp]
 1144 0074 3B46     		mov	r3, r7
 1145 0076 00F15002 		add	r2, r0, #80
 1146              	.LVL88:
 432:os/queue.c    ****         }
 1147              		.loc 1 432 13 is_stmt 0 view .LVU350
 1148 007a 2146     		mov	r1, r4
 1149 007c 3046     		mov	r0, r6
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 72


 1150              	.LVL89:
 432:os/queue.c    ****         }
 1151              		.loc 1 432 13 view .LVU351
 1152 007e FFF7FEFF 		bl	prvInitialiseNewQueue
 1153              	.LVL90:
 436:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
 1154              		.loc 1 436 52 is_stmt 1 view .LVU352
 437:os/queue.c    ****         }
 1155              		.loc 1 437 37 view .LVU353
 440:os/queue.c    ****     }
 1156              		.loc 1 440 9 view .LVU354
 1157              	.L71:
 441:os/queue.c    **** 
 1158              		.loc 1 441 5 is_stmt 0 view .LVU355
 1159 0082 2846     		mov	r0, r5
 1160 0084 03B0     		add	sp, sp, #12
 1161              	.LCFI13:
 1162              		.cfi_def_cfa_offset 20
 1163              		@ sp needed
 1164 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 441:os/queue.c    **** 
 1165              		.loc 1 441 5 view .LVU356
 1166              		.cfi_endproc
 1167              	.LFE6:
 1169              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 1170              		.align	1
 1171              		.global	xQueueGetMutexHolder
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1175              		.fpu fpv5-d16
 1177              	xQueueGetMutexHolder:
 1178              	.LVL91:
 1179              	.LFB11:
 562:os/queue.c    ****         TaskHandle_t pxReturn;
 1180              		.loc 1 562 5 is_stmt 1 view -0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 563:os/queue.c    ****         Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 1184              		.loc 1 563 9 view .LVU358
 564:os/queue.c    **** 
 1185              		.loc 1 564 9 view .LVU359
 566:os/queue.c    **** 
 1186              		.loc 1 566 9 view .LVU360
 1187 0000 50B1     		cbz	r0, .L88
 562:os/queue.c    ****         TaskHandle_t pxReturn;
 1188              		.loc 1 562 5 is_stmt 0 discriminator 2 view .LVU361
 1189 0002 10B5     		push	{r4, lr}
 1190              	.LCFI14:
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 4, -8
 1193              		.cfi_offset 14, -4
 1194 0004 0446     		mov	r4, r0
 566:os/queue.c    **** 
 1195              		.loc 1 566 35 is_stmt 1 discriminator 2 view .LVU362
 573:os/queue.c    ****         {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 73


 1196              		.loc 1 573 9 discriminator 2 view .LVU363
 1197 0006 FFF7FEFF 		bl	vPortEnterCritical
 1198              	.LVL92:
 575:os/queue.c    ****             {
 1199              		.loc 1 575 13 discriminator 2 view .LVU364
 575:os/queue.c    ****             {
 1200              		.loc 1 575 28 is_stmt 0 discriminator 2 view .LVU365
 1201 000a 2368     		ldr	r3, [r4]
 575:os/queue.c    ****             {
 1202              		.loc 1 575 15 discriminator 2 view .LVU366
 1203 000c 7BB9     		cbnz	r3, .L85
 577:os/queue.c    ****             }
 1204              		.loc 1 577 17 is_stmt 1 view .LVU367
 577:os/queue.c    ****             }
 1205              		.loc 1 577 26 is_stmt 0 view .LVU368
 1206 000e A468     		ldr	r4, [r4, #8]
 1207              	.LVL93:
 1208              	.L84:
 584:os/queue.c    **** 
 1209              		.loc 1 584 9 is_stmt 1 view .LVU369
 1210 0010 FFF7FEFF 		bl	vPortExitCritical
 1211              	.LVL94:
 586:os/queue.c    ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 1212              		.loc 1 586 9 view .LVU370
 587:os/queue.c    **** 
 1213              		.loc 1 587 5 is_stmt 0 view .LVU371
 1214 0014 2046     		mov	r0, r4
 1215 0016 10BD     		pop	{r4, pc}
 1216              	.LVL95:
 1217              	.L88:
 1218              	.LCFI15:
 1219              		.cfi_def_cfa_offset 0
 1220              		.cfi_restore 4
 1221              		.cfi_restore 14
 566:os/queue.c    **** 
 1222              		.loc 1 566 9 is_stmt 1 view .LVU372
 1223              	.LBB159:
 1224              	.LBI159:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1225              		.loc 2 193 34 view .LVU373
 1226              	.LBB160:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1227              		.loc 2 195 9 view .LVU374
 1228              		.loc 2 197 9 view .LVU375
 1229              		.syntax unified
 1230              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1231 0018 4FF05003 			mov r3, #80												
 1232 001c 72B6     		cpsid i													
 1233 001e 83F31188 		msr basepri, r3											
 1234 0022 BFF36F8F 		isb														
 1235 0026 BFF34F8F 		dsb														
 1236 002a 62B6     		cpsie i													
 1237              	
 1238              	@ 0 "" 2
 1239              	.LVL96:
 1240              		.thumb
 1241              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 74


 1242              	.L83:
 1243              		.loc 2 197 9 is_stmt 0 view .LVU376
 1244              	.LBE160:
 1245              	.LBE159:
 566:os/queue.c    **** 
 1246              		.loc 1 566 9 is_stmt 1 discriminator 1 view .LVU377
 566:os/queue.c    **** 
 1247              		.loc 1 566 9 discriminator 1 view .LVU378
 566:os/queue.c    **** 
 1248              		.loc 1 566 9 discriminator 1 view .LVU379
 1249 002c FEE7     		b	.L83
 1250              	.LVL97:
 1251              	.L85:
 1252              	.LCFI16:
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
 581:os/queue.c    ****             }
 1256              		.loc 1 581 26 is_stmt 0 view .LVU380
 1257 002e 0024     		movs	r4, #0
 1258              	.LVL98:
 581:os/queue.c    ****             }
 1259              		.loc 1 581 26 view .LVU381
 1260 0030 EEE7     		b	.L84
 1261              		.cfi_endproc
 1262              	.LFE11:
 1264              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 1265              		.align	1
 1266              		.global	xQueueGetMutexHolderFromISR
 1267              		.syntax unified
 1268              		.thumb
 1269              		.thumb_func
 1270              		.fpu fpv5-d16
 1272              	xQueueGetMutexHolderFromISR:
 1273              	.LVL99:
 1274              	.LFB12:
 595:os/queue.c    ****         TaskHandle_t pxReturn;
 1275              		.loc 1 595 5 is_stmt 1 view -0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279              		@ link register save eliminated.
 596:os/queue.c    **** 
 1280              		.loc 1 596 9 view .LVU383
 598:os/queue.c    **** 
 1281              		.loc 1 598 9 view .LVU384
 1282 0000 18B1     		cbz	r0, .L94
 598:os/queue.c    **** 
 1283              		.loc 1 598 35 discriminator 2 view .LVU385
 603:os/queue.c    ****         {
 1284              		.loc 1 603 9 discriminator 2 view .LVU386
 603:os/queue.c    ****         {
 1285              		.loc 1 603 41 is_stmt 0 discriminator 2 view .LVU387
 1286 0002 0268     		ldr	r2, [r0]
 603:os/queue.c    ****         {
 1287              		.loc 1 603 11 discriminator 2 view .LVU388
 1288 0004 62B9     		cbnz	r2, .L93
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 75


 605:os/queue.c    ****         }
 1289              		.loc 1 605 13 is_stmt 1 view .LVU389
 605:os/queue.c    ****         }
 1290              		.loc 1 605 22 is_stmt 0 view .LVU390
 1291 0006 8068     		ldr	r0, [r0, #8]
 1292              	.LVL100:
 605:os/queue.c    ****         }
 1293              		.loc 1 605 22 view .LVU391
 1294 0008 7047     		bx	lr
 1295              	.LVL101:
 1296              	.L94:
 598:os/queue.c    **** 
 1297              		.loc 1 598 9 is_stmt 1 view .LVU392
 1298              	.LBB161:
 1299              	.LBI161:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1300              		.loc 2 193 34 view .LVU393
 1301              	.LBB162:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1302              		.loc 2 195 9 view .LVU394
 1303              		.loc 2 197 9 view .LVU395
 1304              		.syntax unified
 1305              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1306 000a 4FF05003 			mov r3, #80												
 1307 000e 72B6     		cpsid i													
 1308 0010 83F31188 		msr basepri, r3											
 1309 0014 BFF36F8F 		isb														
 1310 0018 BFF34F8F 		dsb														
 1311 001c 62B6     		cpsie i													
 1312              	
 1313              	@ 0 "" 2
 1314              	.LVL102:
 1315              		.thumb
 1316              		.syntax unified
 1317              	.L91:
 1318              		.loc 2 197 9 is_stmt 0 view .LVU396
 1319              	.LBE162:
 1320              	.LBE161:
 598:os/queue.c    **** 
 1321              		.loc 1 598 9 is_stmt 1 discriminator 1 view .LVU397
 598:os/queue.c    **** 
 1322              		.loc 1 598 9 discriminator 1 view .LVU398
 598:os/queue.c    **** 
 1323              		.loc 1 598 9 discriminator 1 view .LVU399
 1324 001e FEE7     		b	.L91
 1325              	.L93:
 609:os/queue.c    ****         }
 1326              		.loc 1 609 22 is_stmt 0 view .LVU400
 1327 0020 0020     		movs	r0, #0
 1328              	.LVL103:
 612:os/queue.c    ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 1329              		.loc 1 612 9 is_stmt 1 view .LVU401
 613:os/queue.c    **** 
 1330              		.loc 1 613 5 is_stmt 0 view .LVU402
 1331 0022 7047     		bx	lr
 1332              		.cfi_endproc
 1333              	.LFE12:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 76


 1335              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 1336              		.align	1
 1337              		.global	xQueueCreateCountingSemaphoreStatic
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu fpv5-d16
 1343              	xQueueCreateCountingSemaphoreStatic:
 1344              	.LVL104:
 1345              	.LFB15:
 721:os/queue.c    ****         QueueHandle_t xHandle;
 1346              		.loc 1 721 5 is_stmt 1 view -0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 721:os/queue.c    ****         QueueHandle_t xHandle;
 1350              		.loc 1 721 5 is_stmt 0 view .LVU404
 1351 0000 30B5     		push	{r4, r5, lr}
 1352              	.LCFI17:
 1353              		.cfi_def_cfa_offset 12
 1354              		.cfi_offset 4, -12
 1355              		.cfi_offset 5, -8
 1356              		.cfi_offset 14, -4
 1357 0002 83B0     		sub	sp, sp, #12
 1358              	.LCFI18:
 1359              		.cfi_def_cfa_offset 24
 722:os/queue.c    **** 
 1360              		.loc 1 722 9 is_stmt 1 view .LVU405
 724:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1361              		.loc 1 724 9 view .LVU406
 1362 0004 50B9     		cbnz	r0, .L96
 724:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1363              		.loc 1 724 9 view .LVU407
 1364              	.LBB163:
 1365              	.LBI163:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1366              		.loc 2 193 34 view .LVU408
 1367              	.LBB164:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1368              		.loc 2 195 9 view .LVU409
 1369              		.loc 2 197 9 view .LVU410
 1370              		.syntax unified
 1371              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1372 0006 4FF05003 			mov r3, #80												
 1373 000a 72B6     		cpsid i													
 1374 000c 83F31188 		msr basepri, r3											
 1375 0010 BFF36F8F 		isb														
 1376 0014 BFF34F8F 		dsb														
 1377 0018 62B6     		cpsie i													
 1378              	
 1379              	@ 0 "" 2
 1380              	.LVL105:
 1381              		.thumb
 1382              		.syntax unified
 1383              	.L97:
 1384              		.loc 2 197 9 is_stmt 0 view .LVU411
 1385              	.LBE164:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 77


 1386              	.LBE163:
 724:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1387              		.loc 1 724 9 is_stmt 1 discriminator 1 view .LVU412
 724:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1388              		.loc 1 724 9 discriminator 1 view .LVU413
 724:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1389              		.loc 1 724 9 discriminator 1 view .LVU414
 1390 001a FEE7     		b	.L97
 1391              	.L96:
 1392 001c 0C46     		mov	r4, r1
 1393 001e 1346     		mov	r3, r2
 724:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1394              		.loc 1 724 40 discriminator 2 view .LVU415
 725:os/queue.c    **** 
 1395              		.loc 1 725 9 discriminator 2 view .LVU416
 1396 0020 8842     		cmp	r0, r1
 1397 0022 0AD2     		bcs	.L98
 725:os/queue.c    **** 
 1398              		.loc 1 725 9 view .LVU417
 1399              	.LBB165:
 1400              	.LBI165:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1401              		.loc 2 193 34 view .LVU418
 1402              	.LBB166:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1403              		.loc 2 195 9 view .LVU419
 1404              		.loc 2 197 9 view .LVU420
 1405              		.syntax unified
 1406              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1407 0024 4FF05003 			mov r3, #80												
 1408 0028 72B6     		cpsid i													
 1409 002a 83F31188 		msr basepri, r3											
 1410 002e BFF36F8F 		isb														
 1411 0032 BFF34F8F 		dsb														
 1412 0036 62B6     		cpsie i													
 1413              	
 1414              	@ 0 "" 2
 1415              	.LVL106:
 1416              		.thumb
 1417              		.syntax unified
 1418              	.L99:
 1419              		.loc 2 197 9 is_stmt 0 view .LVU421
 1420              	.LBE166:
 1421              	.LBE165:
 725:os/queue.c    **** 
 1422              		.loc 1 725 9 is_stmt 1 discriminator 2 view .LVU422
 725:os/queue.c    **** 
 1423              		.loc 1 725 9 discriminator 2 view .LVU423
 725:os/queue.c    **** 
 1424              		.loc 1 725 9 discriminator 2 view .LVU424
 1425 0038 FEE7     		b	.L99
 1426              	.L98:
 725:os/queue.c    **** 
 1427              		.loc 1 725 53 discriminator 2 view .LVU425
 727:os/queue.c    **** 
 1428              		.loc 1 727 9 discriminator 2 view .LVU426
 727:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 78


 1429              		.loc 1 727 19 is_stmt 0 discriminator 2 view .LVU427
 1430 003a 0222     		movs	r2, #2
 1431              	.LVL107:
 727:os/queue.c    **** 
 1432              		.loc 1 727 19 discriminator 2 view .LVU428
 1433 003c 0092     		str	r2, [sp]
 1434 003e 0022     		movs	r2, #0
 1435 0040 1146     		mov	r1, r2
 1436              	.LVL108:
 727:os/queue.c    **** 
 1437              		.loc 1 727 19 discriminator 2 view .LVU429
 1438 0042 FFF7FEFF 		bl	xQueueGenericCreateStatic
 1439              	.LVL109:
 729:os/queue.c    ****         {
 1440              		.loc 1 729 9 is_stmt 1 discriminator 2 view .LVU430
 729:os/queue.c    ****         {
 1441              		.loc 1 729 11 is_stmt 0 discriminator 2 view .LVU431
 1442 0046 0346     		mov	r3, r0
 1443 0048 00B1     		cbz	r0, .L95
 731:os/queue.c    **** 
 1444              		.loc 1 731 13 is_stmt 1 view .LVU432
 731:os/queue.c    **** 
 1445              		.loc 1 731 58 is_stmt 0 view .LVU433
 1446 004a 8463     		str	r4, [r0, #56]
 733:os/queue.c    ****         }
 1447              		.loc 1 733 45 is_stmt 1 view .LVU434
 737:os/queue.c    ****         }
 1448              		.loc 1 737 52 view .LVU435
 740:os/queue.c    ****     }
 1449              		.loc 1 740 9 view .LVU436
 1450              	.L95:
 741:os/queue.c    **** 
 1451              		.loc 1 741 5 is_stmt 0 view .LVU437
 1452 004c 1846     		mov	r0, r3
 1453              	.LVL110:
 741:os/queue.c    **** 
 1454              		.loc 1 741 5 view .LVU438
 1455 004e 03B0     		add	sp, sp, #12
 1456              	.LCFI19:
 1457              		.cfi_def_cfa_offset 12
 1458              		@ sp needed
 1459 0050 30BD     		pop	{r4, r5, pc}
 741:os/queue.c    **** 
 1460              		.loc 1 741 5 view .LVU439
 1461              		.cfi_endproc
 1462              	.LFE15:
 1464              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1465              		.align	1
 1466              		.global	xQueueCreateCountingSemaphore
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu fpv5-d16
 1472              	xQueueCreateCountingSemaphore:
 1473              	.LVL111:
 1474              	.LFB16:
 750:os/queue.c    ****         QueueHandle_t xHandle;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 79


 1475              		.loc 1 750 5 is_stmt 1 view -0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 751:os/queue.c    **** 
 1479              		.loc 1 751 9 view .LVU441
 753:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1480              		.loc 1 753 9 view .LVU442
 1481 0000 50B9     		cbnz	r0, .L103
 753:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1482              		.loc 1 753 9 view .LVU443
 1483              	.LBB167:
 1484              	.LBI167:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1485              		.loc 2 193 34 view .LVU444
 1486              	.LBB168:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1487              		.loc 2 195 9 view .LVU445
 1488              		.loc 2 197 9 view .LVU446
 1489              		.syntax unified
 1490              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1491 0002 4FF05003 			mov r3, #80												
 1492 0006 72B6     		cpsid i													
 1493 0008 83F31188 		msr basepri, r3											
 1494 000c BFF36F8F 		isb														
 1495 0010 BFF34F8F 		dsb														
 1496 0014 62B6     		cpsie i													
 1497              	
 1498              	@ 0 "" 2
 1499              	.LVL112:
 1500              		.thumb
 1501              		.syntax unified
 1502              	.L104:
 1503              		.loc 2 197 9 is_stmt 0 view .LVU447
 1504              	.LBE168:
 1505              	.LBE167:
 753:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1506              		.loc 1 753 9 is_stmt 1 discriminator 1 view .LVU448
 753:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1507              		.loc 1 753 9 discriminator 1 view .LVU449
 753:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1508              		.loc 1 753 9 discriminator 1 view .LVU450
 1509 0016 FEE7     		b	.L104
 1510              	.L103:
 750:os/queue.c    ****         QueueHandle_t xHandle;
 1511              		.loc 1 750 5 is_stmt 0 discriminator 2 view .LVU451
 1512 0018 10B5     		push	{r4, lr}
 1513              	.LCFI20:
 1514              		.cfi_def_cfa_offset 8
 1515              		.cfi_offset 4, -8
 1516              		.cfi_offset 14, -4
 1517 001a 0C46     		mov	r4, r1
 753:os/queue.c    ****         configASSERT( uxInitialCount <= uxMaxCount );
 1518              		.loc 1 753 40 is_stmt 1 discriminator 2 view .LVU452
 754:os/queue.c    **** 
 1519              		.loc 1 754 9 discriminator 2 view .LVU453
 1520 001c 8842     		cmp	r0, r1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 80


 1521 001e 0AD2     		bcs	.L105
 754:os/queue.c    **** 
 1522              		.loc 1 754 9 view .LVU454
 1523              	.LBB169:
 1524              	.LBI169:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1525              		.loc 2 193 34 view .LVU455
 1526              	.LBB170:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1527              		.loc 2 195 9 view .LVU456
 1528              		.loc 2 197 9 view .LVU457
 1529              		.syntax unified
 1530              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1531 0020 4FF05003 			mov r3, #80												
 1532 0024 72B6     		cpsid i													
 1533 0026 83F31188 		msr basepri, r3											
 1534 002a BFF36F8F 		isb														
 1535 002e BFF34F8F 		dsb														
 1536 0032 62B6     		cpsie i													
 1537              	
 1538              	@ 0 "" 2
 1539              	.LVL113:
 1540              		.thumb
 1541              		.syntax unified
 1542              	.L106:
 1543              		.loc 2 197 9 is_stmt 0 view .LVU458
 1544              	.LBE170:
 1545              	.LBE169:
 754:os/queue.c    **** 
 1546              		.loc 1 754 9 is_stmt 1 discriminator 2 view .LVU459
 754:os/queue.c    **** 
 1547              		.loc 1 754 9 discriminator 2 view .LVU460
 754:os/queue.c    **** 
 1548              		.loc 1 754 9 discriminator 2 view .LVU461
 1549 0034 FEE7     		b	.L106
 1550              	.L105:
 754:os/queue.c    **** 
 1551              		.loc 1 754 53 discriminator 2 view .LVU462
 756:os/queue.c    **** 
 1552              		.loc 1 756 9 discriminator 2 view .LVU463
 756:os/queue.c    **** 
 1553              		.loc 1 756 19 is_stmt 0 discriminator 2 view .LVU464
 1554 0036 0222     		movs	r2, #2
 1555 0038 0021     		movs	r1, #0
 1556              	.LVL114:
 756:os/queue.c    **** 
 1557              		.loc 1 756 19 discriminator 2 view .LVU465
 1558 003a FFF7FEFF 		bl	xQueueGenericCreate
 1559              	.LVL115:
 758:os/queue.c    ****         {
 1560              		.loc 1 758 9 is_stmt 1 discriminator 2 view .LVU466
 758:os/queue.c    ****         {
 1561              		.loc 1 758 11 is_stmt 0 discriminator 2 view .LVU467
 1562 003e 0346     		mov	r3, r0
 1563 0040 00B1     		cbz	r0, .L102
 760:os/queue.c    **** 
 1564              		.loc 1 760 13 is_stmt 1 view .LVU468
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 81


 760:os/queue.c    **** 
 1565              		.loc 1 760 58 is_stmt 0 view .LVU469
 1566 0042 8463     		str	r4, [r0, #56]
 762:os/queue.c    ****         }
 1567              		.loc 1 762 45 is_stmt 1 view .LVU470
 766:os/queue.c    ****         }
 1568              		.loc 1 766 52 view .LVU471
 769:os/queue.c    ****     }
 1569              		.loc 1 769 9 view .LVU472
 1570              	.L102:
 770:os/queue.c    **** 
 1571              		.loc 1 770 5 is_stmt 0 view .LVU473
 1572 0044 1846     		mov	r0, r3
 1573              	.LVL116:
 770:os/queue.c    **** 
 1574              		.loc 1 770 5 view .LVU474
 1575 0046 10BD     		pop	{r4, pc}
 770:os/queue.c    **** 
 1576              		.loc 1 770 5 view .LVU475
 1577              		.cfi_endproc
 1578              	.LFE16:
 1580              		.section	.text.xQueueGenericSend,"ax",%progbits
 1581              		.align	1
 1582              		.global	xQueueGenericSend
 1583              		.syntax unified
 1584              		.thumb
 1585              		.thumb_func
 1586              		.fpu fpv5-d16
 1588              	xQueueGenericSend:
 1589              	.LVL117:
 1590              	.LFB17:
 779:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1591              		.loc 1 779 1 is_stmt 1 view -0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 16
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 779:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1595              		.loc 1 779 1 is_stmt 0 view .LVU477
 1596 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1597              	.LCFI21:
 1598              		.cfi_def_cfa_offset 20
 1599              		.cfi_offset 4, -20
 1600              		.cfi_offset 5, -16
 1601              		.cfi_offset 6, -12
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 85B0     		sub	sp, sp, #20
 1605              	.LCFI22:
 1606              		.cfi_def_cfa_offset 40
 1607 0004 0192     		str	r2, [sp, #4]
 780:os/queue.c    ****     TimeOut_t xTimeOut;
 1608              		.loc 1 780 5 is_stmt 1 view .LVU478
 1609              	.LVL118:
 781:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 1610              		.loc 1 781 5 view .LVU479
 782:os/queue.c    **** 
 1611              		.loc 1 782 5 view .LVU480
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 82


 784:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1612              		.loc 1 784 5 view .LVU481
 1613 0006 98B1     		cbz	r0, .L134
 1614 0008 0E46     		mov	r6, r1
 1615 000a 1D46     		mov	r5, r3
 1616 000c 0446     		mov	r4, r0
 784:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1617              		.loc 1 784 28 discriminator 2 view .LVU482
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1618              		.loc 1 785 5 discriminator 2 view .LVU483
 1619 000e D1B1     		cbz	r1, .L135
 1620              	.LVL119:
 1621              	.L113:
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1622              		.loc 1 785 100 discriminator 8 view .LVU484
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1623              		.loc 1 786 5 discriminator 8 view .LVU485
 1624 0010 022D     		cmp	r5, #2
 1625 0012 26D1     		bne	.L115
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1626              		.loc 1 786 5 is_stmt 0 discriminator 2 view .LVU486
 1627 0014 E36B     		ldr	r3, [r4, #60]
 1628 0016 012B     		cmp	r3, #1
 1629 0018 23D0     		beq	.L115
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1630              		.loc 1 786 5 is_stmt 1 view .LVU487
 1631              	.LBB171:
 1632              	.LBI171:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1633              		.loc 2 193 34 view .LVU488
 1634              	.LBB172:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1635              		.loc 2 195 9 view .LVU489
 1636              		.loc 2 197 9 view .LVU490
 1637              		.syntax unified
 1638              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1639 001a 4FF05003 			mov r3, #80												
 1640 001e 72B6     		cpsid i													
 1641 0020 83F31188 		msr basepri, r3											
 1642 0024 BFF36F8F 		isb														
 1643 0028 BFF34F8F 		dsb														
 1644 002c 62B6     		cpsie i													
 1645              	
 1646              	@ 0 "" 2
 1647              	.LVL120:
 1648              		.thumb
 1649              		.syntax unified
 1650              	.L116:
 1651              		.loc 2 197 9 is_stmt 0 view .LVU491
 1652              	.LBE172:
 1653              	.LBE171:
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1654              		.loc 1 786 5 is_stmt 1 discriminator 3 view .LVU492
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1655              		.loc 1 786 5 discriminator 3 view .LVU493
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1656              		.loc 1 786 5 discriminator 3 view .LVU494
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 83


 1657 002e FEE7     		b	.L116
 1658              	.LVL121:
 1659              	.L134:
 784:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1660              		.loc 1 784 5 view .LVU495
 1661              	.LBB173:
 1662              	.LBI173:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1663              		.loc 2 193 34 view .LVU496
 1664              	.LBB174:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1665              		.loc 2 195 9 view .LVU497
 1666              		.loc 2 197 9 view .LVU498
 1667              		.syntax unified
 1668              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1669 0030 4FF05003 			mov r3, #80												
 1670 0034 72B6     		cpsid i													
 1671 0036 83F31188 		msr basepri, r3											
 1672 003a BFF36F8F 		isb														
 1673 003e BFF34F8F 		dsb														
 1674 0042 62B6     		cpsie i													
 1675              	
 1676              	@ 0 "" 2
 1677              	.LVL122:
 1678              		.thumb
 1679              		.syntax unified
 1680              	.L112:
 1681              		.loc 2 197 9 is_stmt 0 view .LVU499
 1682              	.LBE174:
 1683              	.LBE173:
 784:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1684              		.loc 1 784 5 is_stmt 1 discriminator 1 view .LVU500
 784:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1685              		.loc 1 784 5 discriminator 1 view .LVU501
 784:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1686              		.loc 1 784 5 discriminator 1 view .LVU502
 1687 0044 FEE7     		b	.L112
 1688              	.LVL123:
 1689              	.L135:
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1690              		.loc 1 785 5 is_stmt 0 discriminator 2 view .LVU503
 1691 0046 036C     		ldr	r3, [r0, #64]
 1692              	.LVL124:
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1693              		.loc 1 785 5 discriminator 2 view .LVU504
 1694 0048 002B     		cmp	r3, #0
 1695 004a E1D0     		beq	.L113
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1696              		.loc 1 785 5 is_stmt 1 view .LVU505
 1697              	.LBB175:
 1698              	.LBI175:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1699              		.loc 2 193 34 view .LVU506
 1700              	.LBB176:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1701              		.loc 2 195 9 view .LVU507
 1702              		.loc 2 197 9 view .LVU508
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 84


 1703              		.syntax unified
 1704              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1705 004c 4FF05003 			mov r3, #80												
 1706 0050 72B6     		cpsid i													
 1707 0052 83F31188 		msr basepri, r3											
 1708 0056 BFF36F8F 		isb														
 1709 005a BFF34F8F 		dsb														
 1710 005e 62B6     		cpsie i													
 1711              	
 1712              	@ 0 "" 2
 1713              	.LVL125:
 1714              		.thumb
 1715              		.syntax unified
 1716              	.L114:
 1717              		.loc 2 197 9 is_stmt 0 view .LVU509
 1718              	.LBE176:
 1719              	.LBE175:
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1720              		.loc 1 785 5 is_stmt 1 discriminator 2 view .LVU510
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1721              		.loc 1 785 5 discriminator 2 view .LVU511
 785:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1722              		.loc 1 785 5 discriminator 2 view .LVU512
 1723 0060 FEE7     		b	.L114
 1724              	.L115:
 786:os/queue.c    ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1725              		.loc 1 786 91 discriminator 8 view .LVU513
 789:os/queue.c    ****         }
 1726              		.loc 1 789 13 discriminator 8 view .LVU514
 1727 0062 FFF7FEFF 		bl	xTaskGetSchedulerState
 1728              	.LVL126:
 789:os/queue.c    ****         }
 1729              		.loc 1 789 13 is_stmt 0 discriminator 8 view .LVU515
 1730 0066 0746     		mov	r7, r0
 1731 0068 68B9     		cbnz	r0, .L132
 789:os/queue.c    ****         }
 1732              		.loc 1 789 13 discriminator 2 view .LVU516
 1733 006a 019B     		ldr	r3, [sp, #4]
 1734 006c 002B     		cmp	r3, #0
 1735 006e 46D0     		beq	.L119
 789:os/queue.c    ****         }
 1736              		.loc 1 789 13 is_stmt 1 view .LVU517
 1737              	.LBB177:
 1738              	.LBI177:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 1739              		.loc 2 193 34 view .LVU518
 1740              	.LBB178:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1741              		.loc 2 195 9 view .LVU519
 1742              		.loc 2 197 9 view .LVU520
 1743              		.syntax unified
 1744              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1745 0070 4FF05003 			mov r3, #80												
 1746 0074 72B6     		cpsid i													
 1747 0076 83F31188 		msr basepri, r3											
 1748 007a BFF36F8F 		isb														
 1749 007e BFF34F8F 		dsb														
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 85


 1750 0082 62B6     		cpsie i													
 1751              	
 1752              	@ 0 "" 2
 1753              	.LVL127:
 1754              		.thumb
 1755              		.syntax unified
 1756              	.L118:
 1757              		.loc 2 197 9 is_stmt 0 view .LVU521
 1758              	.LBE178:
 1759              	.LBE177:
 789:os/queue.c    ****         }
 1760              		.loc 1 789 13 is_stmt 1 discriminator 4 view .LVU522
 789:os/queue.c    ****         }
 1761              		.loc 1 789 13 discriminator 4 view .LVU523
 789:os/queue.c    ****         }
 1762              		.loc 1 789 13 discriminator 4 view .LVU524
 1763 0084 FEE7     		b	.L118
 1764              	.L132:
 1765 0086 0027     		movs	r7, #0
 1766 0088 39E0     		b	.L119
 1767              	.LVL128:
 1768              	.L120:
 806:os/queue.c    **** 
 1769              		.loc 1 806 43 view .LVU525
 870:os/queue.c    **** 
 1770              		.loc 1 870 25 view .LVU526
 870:os/queue.c    **** 
 1771              		.loc 1 870 42 is_stmt 0 view .LVU527
 1772 008a 2A46     		mov	r2, r5
 1773 008c 3146     		mov	r1, r6
 1774 008e 2046     		mov	r0, r4
 1775 0090 FFF7FEFF 		bl	prvCopyDataToQueue
 1776              	.LVL129:
 874:os/queue.c    ****                         {
 1777              		.loc 1 874 25 is_stmt 1 view .LVU528
 874:os/queue.c    ****                         {
 1778              		.loc 1 874 29 is_stmt 0 view .LVU529
 1779 0094 626A     		ldr	r2, [r4, #36]
 874:os/queue.c    ****                         {
 1780              		.loc 1 874 27 view .LVU530
 1781 0096 6AB9     		cbnz	r2, .L136
 889:os/queue.c    ****                         {
 1782              		.loc 1 889 30 is_stmt 1 view .LVU531
 889:os/queue.c    ****                         {
 1783              		.loc 1 889 32 is_stmt 0 view .LVU532
 1784 0098 38B1     		cbz	r0, .L123
 895:os/queue.c    ****                         }
 1785              		.loc 1 895 29 is_stmt 1 view .LVU533
 1786 009a 3C4B     		ldr	r3, .L141
 1787 009c 4FF08052 		mov	r2, #268435456
 1788 00a0 1A60     		str	r2, [r3]
 895:os/queue.c    ****                         }
 1789              		.loc 1 895 29 view .LVU534
 1790              		.syntax unified
 1791              	@ 895 "os/queue.c" 1
 1792 00a2 BFF34F8F 		dsb
 1793              	@ 0 "" 2
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 86


 895:os/queue.c    ****                         }
 1794              		.loc 1 895 29 view .LVU535
 1795              	@ 895 "os/queue.c" 1
 1796 00a6 BFF36F8F 		isb
 1797              	@ 0 "" 2
 895:os/queue.c    ****                         }
 1798              		.loc 1 895 61 view .LVU536
 1799              	.LVL130:
 1800              		.thumb
 1801              		.syntax unified
 1802              	.L123:
 899:os/queue.c    ****                         }
 1803              		.loc 1 899 53 view .LVU537
 904:os/queue.c    ****                 return pdPASS;
 1804              		.loc 1 904 17 view .LVU538
 1805 00aa FFF7FEFF 		bl	vPortExitCritical
 1806              	.LVL131:
 905:os/queue.c    ****             }
 1807              		.loc 1 905 17 view .LVU539
 905:os/queue.c    ****             }
 1808              		.loc 1 905 24 is_stmt 0 view .LVU540
 1809 00ae 0120     		movs	r0, #1
 1810              	.L110:
 984:os/queue.c    **** /*-----------------------------------------------------------*/
 1811              		.loc 1 984 1 view .LVU541
 1812 00b0 05B0     		add	sp, sp, #20
 1813              	.LCFI23:
 1814              		.cfi_remember_state
 1815              		.cfi_def_cfa_offset 20
 1816              		@ sp needed
 1817 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1818              	.LVL132:
 1819              	.L136:
 1820              	.LCFI24:
 1821              		.cfi_restore_state
 876:os/queue.c    ****                             {
 1822              		.loc 1 876 29 is_stmt 1 view .LVU542
 876:os/queue.c    ****                             {
 1823              		.loc 1 876 33 is_stmt 0 view .LVU543
 1824 00b4 04F12400 		add	r0, r4, #36
 1825              	.LVL133:
 876:os/queue.c    ****                             {
 1826              		.loc 1 876 33 view .LVU544
 1827 00b8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1828              	.LVL134:
 876:os/queue.c    ****                             {
 1829              		.loc 1 876 31 view .LVU545
 1830 00bc 0028     		cmp	r0, #0
 1831 00be F4D0     		beq	.L123
 882:os/queue.c    ****                             }
 1832              		.loc 1 882 33 is_stmt 1 view .LVU546
 1833 00c0 324B     		ldr	r3, .L141
 1834 00c2 4FF08052 		mov	r2, #268435456
 1835 00c6 1A60     		str	r2, [r3]
 882:os/queue.c    ****                             }
 1836              		.loc 1 882 33 view .LVU547
 1837              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 87


 1838              	@ 882 "os/queue.c" 1
 1839 00c8 BFF34F8F 		dsb
 1840              	@ 0 "" 2
 882:os/queue.c    ****                             }
 1841              		.loc 1 882 33 view .LVU548
 1842              	@ 882 "os/queue.c" 1
 1843 00cc BFF36F8F 		isb
 1844              	@ 0 "" 2
 882:os/queue.c    ****                             }
 1845              		.loc 1 882 65 view .LVU549
 1846              		.thumb
 1847              		.syntax unified
 1848 00d0 EBE7     		b	.L123
 1849              	.L137:
 913:os/queue.c    **** 
 1850              		.loc 1 913 21 view .LVU550
 1851 00d2 FFF7FEFF 		bl	vPortExitCritical
 1852              	.LVL135:
 917:os/queue.c    ****                     return errQUEUE_FULL;
 1853              		.loc 1 917 54 view .LVU551
 918:os/queue.c    ****                 }
 1854              		.loc 1 918 21 view .LVU552
 918:os/queue.c    ****                 }
 1855              		.loc 1 918 28 is_stmt 0 view .LVU553
 1856 00d6 0020     		movs	r0, #0
 1857 00d8 EAE7     		b	.L110
 1858              	.L138:
 924:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
 1859              		.loc 1 924 21 is_stmt 1 view .LVU554
 1860 00da 02A8     		add	r0, sp, #8
 1861 00dc FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1862              	.LVL136:
 925:os/queue.c    ****                 }
 1863              		.loc 1 925 21 view .LVU555
 925:os/queue.c    ****                 }
 1864              		.loc 1 925 35 is_stmt 0 view .LVU556
 1865 00e0 0127     		movs	r7, #1
 1866 00e2 19E0     		b	.L126
 1867              	.LVL137:
 1868              	.L139:
 940:os/queue.c    **** 
 1869              		.loc 1 940 9 is_stmt 1 discriminator 1 view .LVU557
 1870 00e4 0023     		movs	r3, #0
 1871 00e6 84F84430 		strb	r3, [r4, #68]
 1872 00ea 21E0     		b	.L127
 1873              	.L140:
 940:os/queue.c    **** 
 1874              		.loc 1 940 9 discriminator 4 view .LVU558
 1875 00ec 0023     		movs	r3, #0
 1876 00ee 84F84530 		strb	r3, [r4, #69]
 1877 00f2 23E0     		b	.L128
 1878              	.L130:
 970:os/queue.c    ****                 ( void ) xTaskResumeAll();
 1879              		.loc 1 970 17 view .LVU559
 1880 00f4 2046     		mov	r0, r4
 1881 00f6 FFF7FEFF 		bl	prvUnlockQueue
 1882              	.LVL138:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 88


 971:os/queue.c    ****             }
 1883              		.loc 1 971 17 view .LVU560
 971:os/queue.c    ****             }
 1884              		.loc 1 971 26 is_stmt 0 view .LVU561
 1885 00fa FFF7FEFF 		bl	xTaskResumeAll
 1886              	.LVL139:
 1887              	.L119:
 789:os/queue.c    ****         }
 1888              		.loc 1 789 114 is_stmt 1 discriminator 8 view .LVU562
 796:os/queue.c    ****     {
 1889              		.loc 1 796 5 discriminator 8 view .LVU563
 798:os/queue.c    ****         {
 1890              		.loc 1 798 9 discriminator 8 view .LVU564
 1891 00fe FFF7FEFF 		bl	vPortEnterCritical
 1892              	.LVL140:
 804:os/queue.c    ****             {
 1893              		.loc 1 804 13 discriminator 8 view .LVU565
 804:os/queue.c    ****             {
 1894              		.loc 1 804 26 is_stmt 0 discriminator 8 view .LVU566
 1895 0102 A26B     		ldr	r2, [r4, #56]
 804:os/queue.c    ****             {
 1896              		.loc 1 804 55 discriminator 8 view .LVU567
 1897 0104 E36B     		ldr	r3, [r4, #60]
 804:os/queue.c    ****             {
 1898              		.loc 1 804 15 discriminator 8 view .LVU568
 1899 0106 9A42     		cmp	r2, r3
 1900 0108 BFD3     		bcc	.L120
 804:os/queue.c    ****             {
 1901              		.loc 1 804 68 discriminator 1 view .LVU569
 1902 010a 022D     		cmp	r5, #2
 1903 010c BDD0     		beq	.L120
 909:os/queue.c    ****                 {
 1904              		.loc 1 909 17 is_stmt 1 view .LVU570
 909:os/queue.c    ****                 {
 1905              		.loc 1 909 34 is_stmt 0 view .LVU571
 1906 010e 019B     		ldr	r3, [sp, #4]
 909:os/queue.c    ****                 {
 1907              		.loc 1 909 19 view .LVU572
 1908 0110 002B     		cmp	r3, #0
 1909 0112 DED0     		beq	.L137
 920:os/queue.c    ****                 {
 1910              		.loc 1 920 22 is_stmt 1 view .LVU573
 920:os/queue.c    ****                 {
 1911              		.loc 1 920 24 is_stmt 0 view .LVU574
 1912 0114 002F     		cmp	r7, #0
 1913 0116 E0D0     		beq	.L138
 1914              	.LVL141:
 1915              	.L126:
 930:os/queue.c    ****                 }
 1916              		.loc 1 930 45 is_stmt 1 view .LVU575
 934:os/queue.c    **** 
 1917              		.loc 1 934 9 view .LVU576
 1918 0118 FFF7FEFF 		bl	vPortExitCritical
 1919              	.LVL142:
 939:os/queue.c    ****         prvLockQueue( pxQueue );
 1920              		.loc 1 939 9 view .LVU577
 1921 011c FFF7FEFF 		bl	vTaskSuspendAll
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 89


 1922              	.LVL143:
 940:os/queue.c    **** 
 1923              		.loc 1 940 9 view .LVU578
 1924 0120 FFF7FEFF 		bl	vPortEnterCritical
 1925              	.LVL144:
 940:os/queue.c    **** 
 1926              		.loc 1 940 9 view .LVU579
 1927 0124 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1928 0128 5BB2     		sxtb	r3, r3
 1929 012a B3F1FF3F 		cmp	r3, #-1
 1930 012e D9D0     		beq	.L139
 1931              	.L127:
 940:os/queue.c    **** 
 1932              		.loc 1 940 9 discriminator 3 view .LVU580
 1933 0130 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1934 0134 5BB2     		sxtb	r3, r3
 1935 0136 B3F1FF3F 		cmp	r3, #-1
 1936 013a D7D0     		beq	.L140
 1937              	.L128:
 940:os/queue.c    **** 
 1938              		.loc 1 940 9 discriminator 6 view .LVU581
 1939 013c FFF7FEFF 		bl	vPortExitCritical
 1940              	.LVL145:
 943:os/queue.c    ****         {
 1941              		.loc 1 943 9 discriminator 6 view .LVU582
 943:os/queue.c    ****         {
 1942              		.loc 1 943 13 is_stmt 0 discriminator 6 view .LVU583
 1943 0140 01A9     		add	r1, sp, #4
 1944 0142 02A8     		add	r0, sp, #8
 1945 0144 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1946              	.LVL146:
 943:os/queue.c    ****         {
 1947              		.loc 1 943 11 discriminator 6 view .LVU584
 1948 0148 C8B9     		cbnz	r0, .L129
 945:os/queue.c    ****             {
 1949              		.loc 1 945 13 is_stmt 1 view .LVU585
 945:os/queue.c    ****             {
 1950              		.loc 1 945 17 is_stmt 0 view .LVU586
 1951 014a 2046     		mov	r0, r4
 1952 014c FFF7FEFF 		bl	prvIsQueueFull
 1953              	.LVL147:
 945:os/queue.c    ****             {
 1954              		.loc 1 945 15 view .LVU587
 1955 0150 0028     		cmp	r0, #0
 1956 0152 CFD0     		beq	.L130
 947:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1957              		.loc 1 947 55 is_stmt 1 view .LVU588
 948:os/queue.c    **** 
 1958              		.loc 1 948 17 view .LVU589
 1959 0154 0199     		ldr	r1, [sp, #4]
 1960 0156 04F11000 		add	r0, r4, #16
 1961 015a FFF7FEFF 		bl	vTaskPlaceOnEventList
 1962              	.LVL148:
 955:os/queue.c    **** 
 1963              		.loc 1 955 17 view .LVU590
 1964 015e 2046     		mov	r0, r4
 1965 0160 FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 90


 1966              	.LVL149:
 962:os/queue.c    ****                 {
 1967              		.loc 1 962 17 view .LVU591
 962:os/queue.c    ****                 {
 1968              		.loc 1 962 21 is_stmt 0 view .LVU592
 1969 0164 FFF7FEFF 		bl	xTaskResumeAll
 1970              	.LVL150:
 962:os/queue.c    ****                 {
 1971              		.loc 1 962 19 view .LVU593
 1972 0168 0028     		cmp	r0, #0
 1973 016a C8D1     		bne	.L119
 964:os/queue.c    ****                 }
 1974              		.loc 1 964 21 is_stmt 1 view .LVU594
 1975 016c 074B     		ldr	r3, .L141
 1976 016e 4FF08052 		mov	r2, #268435456
 1977 0172 1A60     		str	r2, [r3]
 964:os/queue.c    ****                 }
 1978              		.loc 1 964 21 view .LVU595
 1979              		.syntax unified
 1980              	@ 964 "os/queue.c" 1
 1981 0174 BFF34F8F 		dsb
 1982              	@ 0 "" 2
 964:os/queue.c    ****                 }
 1983              		.loc 1 964 21 view .LVU596
 1984              	@ 964 "os/queue.c" 1
 1985 0178 BFF36F8F 		isb
 1986              	@ 0 "" 2
 1987              		.thumb
 1988              		.syntax unified
 1989 017c BFE7     		b	.L119
 1990              	.L129:
 977:os/queue.c    ****             ( void ) xTaskResumeAll();
 1991              		.loc 1 977 13 view .LVU597
 1992 017e 2046     		mov	r0, r4
 1993 0180 FFF7FEFF 		bl	prvUnlockQueue
 1994              	.LVL151:
 978:os/queue.c    **** 
 1995              		.loc 1 978 13 view .LVU598
 978:os/queue.c    **** 
 1996              		.loc 1 978 22 is_stmt 0 view .LVU599
 1997 0184 FFF7FEFF 		bl	xTaskResumeAll
 1998              	.LVL152:
 980:os/queue.c    ****             return errQUEUE_FULL;
 1999              		.loc 1 980 46 is_stmt 1 view .LVU600
 981:os/queue.c    ****         }
 2000              		.loc 1 981 13 view .LVU601
 981:os/queue.c    ****         }
 2001              		.loc 1 981 20 is_stmt 0 view .LVU602
 2002 0188 0020     		movs	r0, #0
 2003 018a 91E7     		b	.L110
 2004              	.L142:
 2005              		.align	2
 2006              	.L141:
 2007 018c 04ED00E0 		.word	-536810236
 2008              		.cfi_endproc
 2009              	.LFE17:
 2011              		.section	.text.prvInitialiseMutex,"ax",%progbits
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 91


 2012              		.align	1
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2016              		.fpu fpv5-d16
 2018              	prvInitialiseMutex:
 2019              	.LVL153:
 2020              	.LFB8:
 495:os/queue.c    ****         if( pxNewQueue != NULL )
 2021              		.loc 1 495 5 is_stmt 1 view -0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 496:os/queue.c    ****         {
 2025              		.loc 1 496 9 view .LVU604
 496:os/queue.c    ****         {
 2026              		.loc 1 496 11 is_stmt 0 view .LVU605
 2027 0000 48B1     		cbz	r0, .L146
 495:os/queue.c    ****         if( pxNewQueue != NULL )
 2028              		.loc 1 495 5 view .LVU606
 2029 0002 10B5     		push	{r4, lr}
 2030              	.LCFI25:
 2031              		.cfi_def_cfa_offset 8
 2032              		.cfi_offset 4, -8
 2033              		.cfi_offset 14, -4
 502:os/queue.c    ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 2034              		.loc 1 502 13 is_stmt 1 view .LVU607
 502:os/queue.c    ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 2035              		.loc 1 502 51 is_stmt 0 view .LVU608
 2036 0004 0021     		movs	r1, #0
 2037 0006 8160     		str	r1, [r0, #8]
 503:os/queue.c    **** 
 2038              		.loc 1 503 13 is_stmt 1 view .LVU609
 503:os/queue.c    **** 
 2039              		.loc 1 503 37 is_stmt 0 view .LVU610
 2040 0008 0160     		str	r1, [r0]
 506:os/queue.c    **** 
 2041              		.loc 1 506 13 is_stmt 1 view .LVU611
 506:os/queue.c    **** 
 2042              		.loc 1 506 59 is_stmt 0 view .LVU612
 2043 000a C160     		str	r1, [r0, #12]
 508:os/queue.c    **** 
 2044              		.loc 1 508 44 is_stmt 1 view .LVU613
 511:os/queue.c    ****         }
 2045              		.loc 1 511 13 view .LVU614
 511:os/queue.c    ****         }
 2046              		.loc 1 511 22 is_stmt 0 view .LVU615
 2047 000c 0B46     		mov	r3, r1
 2048 000e 0A46     		mov	r2, r1
 2049 0010 FFF7FEFF 		bl	xQueueGenericSend
 2050              	.LVL154:
 515:os/queue.c    ****         }
 2051              		.loc 1 515 39 is_stmt 1 view .LVU616
 517:os/queue.c    **** 
 2052              		.loc 1 517 5 is_stmt 0 view .LVU617
 2053 0014 10BD     		pop	{r4, pc}
 2054              	.LVL155:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 92


 2055              	.L146:
 2056              	.LCFI26:
 2057              		.cfi_def_cfa_offset 0
 2058              		.cfi_restore 4
 2059              		.cfi_restore 14
 517:os/queue.c    **** 
 2060              		.loc 1 517 5 view .LVU618
 2061 0016 7047     		bx	lr
 2062              		.cfi_endproc
 2063              	.LFE8:
 2065              		.section	.text.xQueueCreateMutex,"ax",%progbits
 2066              		.align	1
 2067              		.global	xQueueCreateMutex
 2068              		.syntax unified
 2069              		.thumb
 2070              		.thumb_func
 2071              		.fpu fpv5-d16
 2073              	xQueueCreateMutex:
 2074              	.LVL156:
 2075              	.LFB9:
 525:os/queue.c    ****         QueueHandle_t xNewQueue;
 2076              		.loc 1 525 5 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 525:os/queue.c    ****         QueueHandle_t xNewQueue;
 2080              		.loc 1 525 5 is_stmt 0 view .LVU620
 2081 0000 10B5     		push	{r4, lr}
 2082              	.LCFI27:
 2083              		.cfi_def_cfa_offset 8
 2084              		.cfi_offset 4, -8
 2085              		.cfi_offset 14, -4
 2086 0002 0246     		mov	r2, r0
 526:os/queue.c    ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 2087              		.loc 1 526 9 is_stmt 1 view .LVU621
 527:os/queue.c    **** 
 2088              		.loc 1 527 9 view .LVU622
 2089              	.LVL157:
 529:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2090              		.loc 1 529 9 view .LVU623
 529:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2091              		.loc 1 529 21 is_stmt 0 view .LVU624
 2092 0004 0021     		movs	r1, #0
 2093 0006 0120     		movs	r0, #1
 2094              	.LVL158:
 529:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2095              		.loc 1 529 21 view .LVU625
 2096 0008 FFF7FEFF 		bl	xQueueGenericCreate
 2097              	.LVL159:
 2098 000c 0446     		mov	r4, r0
 2099              	.LVL160:
 530:os/queue.c    **** 
 2100              		.loc 1 530 9 is_stmt 1 view .LVU626
 2101 000e FFF7FEFF 		bl	prvInitialiseMutex
 2102              	.LVL161:
 532:os/queue.c    ****     }
 2103              		.loc 1 532 9 view .LVU627
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 93


 533:os/queue.c    **** 
 2104              		.loc 1 533 5 is_stmt 0 view .LVU628
 2105 0012 2046     		mov	r0, r4
 2106 0014 10BD     		pop	{r4, pc}
 533:os/queue.c    **** 
 2107              		.loc 1 533 5 view .LVU629
 2108              		.cfi_endproc
 2109              	.LFE9:
 2111              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 2112              		.align	1
 2113              		.global	xQueueCreateMutexStatic
 2114              		.syntax unified
 2115              		.thumb
 2116              		.thumb_func
 2117              		.fpu fpv5-d16
 2119              	xQueueCreateMutexStatic:
 2120              	.LVL162:
 2121              	.LFB10:
 542:os/queue.c    ****         QueueHandle_t xNewQueue;
 2122              		.loc 1 542 5 is_stmt 1 view -0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 542:os/queue.c    ****         QueueHandle_t xNewQueue;
 2126              		.loc 1 542 5 is_stmt 0 view .LVU631
 2127 0000 10B5     		push	{r4, lr}
 2128              	.LCFI28:
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 4, -8
 2131              		.cfi_offset 14, -4
 2132 0002 82B0     		sub	sp, sp, #8
 2133              	.LCFI29:
 2134              		.cfi_def_cfa_offset 16
 2135 0004 0B46     		mov	r3, r1
 543:os/queue.c    ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 2136              		.loc 1 543 9 is_stmt 1 view .LVU632
 544:os/queue.c    **** 
 2137              		.loc 1 544 9 view .LVU633
 2138              	.LVL163:
 548:os/queue.c    **** 
 2139              		.loc 1 548 9 view .LVU634
 550:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2140              		.loc 1 550 9 view .LVU635
 550:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2141              		.loc 1 550 21 is_stmt 0 view .LVU636
 2142 0006 0090     		str	r0, [sp]
 2143 0008 0022     		movs	r2, #0
 2144 000a 1146     		mov	r1, r2
 2145              	.LVL164:
 550:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2146              		.loc 1 550 21 view .LVU637
 2147 000c 0120     		movs	r0, #1
 2148              	.LVL165:
 550:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2149              		.loc 1 550 21 view .LVU638
 2150 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 2151              	.LVL166:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 94


 550:os/queue.c    ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 2152              		.loc 1 550 21 view .LVU639
 2153 0012 0446     		mov	r4, r0
 2154              	.LVL167:
 551:os/queue.c    **** 
 2155              		.loc 1 551 9 is_stmt 1 view .LVU640
 2156 0014 FFF7FEFF 		bl	prvInitialiseMutex
 2157              	.LVL168:
 553:os/queue.c    ****     }
 2158              		.loc 1 553 9 view .LVU641
 554:os/queue.c    **** 
 2159              		.loc 1 554 5 is_stmt 0 view .LVU642
 2160 0018 2046     		mov	r0, r4
 2161 001a 02B0     		add	sp, sp, #8
 2162              	.LCFI30:
 2163              		.cfi_def_cfa_offset 8
 2164              		@ sp needed
 2165 001c 10BD     		pop	{r4, pc}
 554:os/queue.c    **** 
 2166              		.loc 1 554 5 view .LVU643
 2167              		.cfi_endproc
 2168              	.LFE10:
 2170              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 2171              		.align	1
 2172              		.global	xQueueGiveMutexRecursive
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2176              		.fpu fpv5-d16
 2178              	xQueueGiveMutexRecursive:
 2179              	.LVL169:
 2180              	.LFB13:
 621:os/queue.c    ****         BaseType_t xReturn;
 2181              		.loc 1 621 5 is_stmt 1 view -0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 0
 2184              		@ frame_needed = 0, uses_anonymous_args = 0
 621:os/queue.c    ****         BaseType_t xReturn;
 2185              		.loc 1 621 5 is_stmt 0 view .LVU645
 2186 0000 38B5     		push	{r3, r4, r5, lr}
 2187              	.LCFI31:
 2188              		.cfi_def_cfa_offset 16
 2189              		.cfi_offset 3, -16
 2190              		.cfi_offset 4, -12
 2191              		.cfi_offset 5, -8
 2192              		.cfi_offset 14, -4
 622:os/queue.c    ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 2193              		.loc 1 622 9 is_stmt 1 view .LVU646
 623:os/queue.c    **** 
 2194              		.loc 1 623 9 view .LVU647
 2195              	.LVL170:
 625:os/queue.c    **** 
 2196              		.loc 1 625 9 view .LVU648
 2197 0002 38B1     		cbz	r0, .L160
 2198 0004 0446     		mov	r4, r0
 625:os/queue.c    **** 
 2199              		.loc 1 625 32 discriminator 2 view .LVU649
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 95


 633:os/queue.c    ****         {
 2200              		.loc 1 633 9 discriminator 2 view .LVU650
 633:os/queue.c    ****         {
 2201              		.loc 1 633 34 is_stmt 0 discriminator 2 view .LVU651
 2202 0006 8568     		ldr	r5, [r0, #8]
 633:os/queue.c    ****         {
 2203              		.loc 1 633 51 discriminator 2 view .LVU652
 2204 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2205              	.LVL171:
 633:os/queue.c    ****         {
 2206              		.loc 1 633 11 discriminator 2 view .LVU653
 2207 000c 8542     		cmp	r5, r0
 2208 000e 0CD0     		beq	.L161
 662:os/queue.c    **** 
 2209              		.loc 1 662 21 view .LVU654
 2210 0010 0020     		movs	r0, #0
 2211              	.L153:
 668:os/queue.c    **** 
 2212              		.loc 1 668 5 view .LVU655
 2213 0012 38BD     		pop	{r3, r4, r5, pc}
 2214              	.LVL172:
 2215              	.L160:
 625:os/queue.c    **** 
 2216              		.loc 1 625 9 is_stmt 1 view .LVU656
 2217              	.LBB179:
 2218              	.LBI179:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2219              		.loc 2 193 34 view .LVU657
 2220              	.LBB180:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2221              		.loc 2 195 9 view .LVU658
 2222              		.loc 2 197 9 view .LVU659
 2223              		.syntax unified
 2224              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2225 0014 4FF05003 			mov r3, #80												
 2226 0018 72B6     		cpsid i													
 2227 001a 83F31188 		msr basepri, r3											
 2228 001e BFF36F8F 		isb														
 2229 0022 BFF34F8F 		dsb														
 2230 0026 62B6     		cpsie i													
 2231              	
 2232              	@ 0 "" 2
 2233              	.LVL173:
 2234              		.thumb
 2235              		.syntax unified
 2236              	.L155:
 2237              		.loc 2 197 9 is_stmt 0 view .LVU660
 2238              	.LBE180:
 2239              	.LBE179:
 625:os/queue.c    **** 
 2240              		.loc 1 625 9 is_stmt 1 discriminator 1 view .LVU661
 625:os/queue.c    **** 
 2241              		.loc 1 625 9 discriminator 1 view .LVU662
 625:os/queue.c    **** 
 2242              		.loc 1 625 9 discriminator 1 view .LVU663
 2243 0028 FEE7     		b	.L155
 2244              	.LVL174:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 96


 2245              	.L161:
 635:os/queue.c    **** 
 2246              		.loc 1 635 49 view .LVU664
 642:os/queue.c    **** 
 2247              		.loc 1 642 13 view .LVU665
 642:os/queue.c    **** 
 2248              		.loc 1 642 36 is_stmt 0 view .LVU666
 2249 002a E368     		ldr	r3, [r4, #12]
 642:os/queue.c    **** 
 2250              		.loc 1 642 59 view .LVU667
 2251 002c 013B     		subs	r3, r3, #1
 2252 002e E360     		str	r3, [r4, #12]
 645:os/queue.c    ****             {
 2253              		.loc 1 645 13 is_stmt 1 view .LVU668
 645:os/queue.c    ****             {
 2254              		.loc 1 645 15 is_stmt 0 view .LVU669
 2255 0030 0BB1     		cbz	r3, .L162
 656:os/queue.c    ****         }
 2256              		.loc 1 656 21 view .LVU670
 2257 0032 0120     		movs	r0, #1
 2258              	.LVL175:
 664:os/queue.c    ****         }
 2259              		.loc 1 664 56 is_stmt 1 view .LVU671
 667:os/queue.c    ****     }
 2260              		.loc 1 667 9 view .LVU672
 667:os/queue.c    ****     }
 2261              		.loc 1 667 16 is_stmt 0 view .LVU673
 2262 0034 EDE7     		b	.L153
 2263              	.LVL176:
 2264              	.L162:
 649:os/queue.c    ****             }
 2265              		.loc 1 649 17 is_stmt 1 view .LVU674
 649:os/queue.c    ****             }
 2266              		.loc 1 649 26 is_stmt 0 view .LVU675
 2267 0036 1A46     		mov	r2, r3
 2268 0038 1946     		mov	r1, r3
 2269 003a 2046     		mov	r0, r4
 2270 003c FFF7FEFF 		bl	xQueueGenericSend
 2271              	.LVL177:
 656:os/queue.c    ****         }
 2272              		.loc 1 656 21 view .LVU676
 2273 0040 0120     		movs	r0, #1
 2274 0042 E6E7     		b	.L153
 2275              		.cfi_endproc
 2276              	.LFE13:
 2278              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 2279              		.align	1
 2280              		.global	xQueueGenericSendFromISR
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2284              		.fpu fpv5-d16
 2286              	xQueueGenericSendFromISR:
 2287              	.LVL178:
 2288              	.LFB18:
 991:os/queue.c    ****     BaseType_t xReturn;
 2289              		.loc 1 991 1 is_stmt 1 view -0
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 97


 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 991:os/queue.c    ****     BaseType_t xReturn;
 2293              		.loc 1 991 1 is_stmt 0 view .LVU678
 2294 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2295              	.LCFI32:
 2296              		.cfi_def_cfa_offset 32
 2297              		.cfi_offset 3, -32
 2298              		.cfi_offset 4, -28
 2299              		.cfi_offset 5, -24
 2300              		.cfi_offset 6, -20
 2301              		.cfi_offset 7, -16
 2302              		.cfi_offset 8, -12
 2303              		.cfi_offset 9, -8
 2304              		.cfi_offset 14, -4
 992:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
 2305              		.loc 1 992 5 is_stmt 1 view .LVU679
 993:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 2306              		.loc 1 993 5 view .LVU680
 994:os/queue.c    **** 
 2307              		.loc 1 994 5 view .LVU681
 2308              	.LVL179:
 996:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2309              		.loc 1 996 5 view .LVU682
 2310 0004 A0B1     		cbz	r0, .L180
 2311 0006 8946     		mov	r9, r1
 2312 0008 9046     		mov	r8, r2
 2313 000a 1F46     		mov	r7, r3
 2314 000c 0446     		mov	r4, r0
 996:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2315              		.loc 1 996 28 discriminator 2 view .LVU683
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2316              		.loc 1 997 5 discriminator 2 view .LVU684
 2317 000e D1B1     		cbz	r1, .L181
 2318              	.LVL180:
 2319              	.L166:
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2320              		.loc 1 997 100 discriminator 8 view .LVU685
 998:os/queue.c    **** 
 2321              		.loc 1 998 5 discriminator 8 view .LVU686
 2322 0010 022F     		cmp	r7, #2
 2323 0012 26D1     		bne	.L168
 998:os/queue.c    **** 
 2324              		.loc 1 998 5 is_stmt 0 discriminator 2 view .LVU687
 2325 0014 E36B     		ldr	r3, [r4, #60]
 2326 0016 012B     		cmp	r3, #1
 2327 0018 23D0     		beq	.L168
 998:os/queue.c    **** 
 2328              		.loc 1 998 5 is_stmt 1 view .LVU688
 2329              	.LBB181:
 2330              	.LBI181:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2331              		.loc 2 193 34 view .LVU689
 2332              	.LBB182:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2333              		.loc 2 195 9 view .LVU690
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 98


 2334              		.loc 2 197 9 view .LVU691
 2335              		.syntax unified
 2336              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2337 001a 4FF05003 			mov r3, #80												
 2338 001e 72B6     		cpsid i													
 2339 0020 83F31188 		msr basepri, r3											
 2340 0024 BFF36F8F 		isb														
 2341 0028 BFF34F8F 		dsb														
 2342 002c 62B6     		cpsie i													
 2343              	
 2344              	@ 0 "" 2
 2345              	.LVL181:
 2346              		.thumb
 2347              		.syntax unified
 2348              	.L169:
 2349              		.loc 2 197 9 is_stmt 0 view .LVU692
 2350              	.LBE182:
 2351              	.LBE181:
 998:os/queue.c    **** 
 2352              		.loc 1 998 5 is_stmt 1 discriminator 3 view .LVU693
 998:os/queue.c    **** 
 2353              		.loc 1 998 5 discriminator 3 view .LVU694
 998:os/queue.c    **** 
 2354              		.loc 1 998 5 discriminator 3 view .LVU695
 2355 002e FEE7     		b	.L169
 2356              	.LVL182:
 2357              	.L180:
 996:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2358              		.loc 1 996 5 view .LVU696
 2359              	.LBB183:
 2360              	.LBI183:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2361              		.loc 2 193 34 view .LVU697
 2362              	.LBB184:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2363              		.loc 2 195 9 view .LVU698
 2364              		.loc 2 197 9 view .LVU699
 2365              		.syntax unified
 2366              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2367 0030 4FF05003 			mov r3, #80												
 2368 0034 72B6     		cpsid i													
 2369 0036 83F31188 		msr basepri, r3											
 2370 003a BFF36F8F 		isb														
 2371 003e BFF34F8F 		dsb														
 2372 0042 62B6     		cpsie i													
 2373              	
 2374              	@ 0 "" 2
 2375              	.LVL183:
 2376              		.thumb
 2377              		.syntax unified
 2378              	.L165:
 2379              		.loc 2 197 9 is_stmt 0 view .LVU700
 2380              	.LBE184:
 2381              	.LBE183:
 996:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2382              		.loc 1 996 5 is_stmt 1 discriminator 1 view .LVU701
 996:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 99


 2383              		.loc 1 996 5 discriminator 1 view .LVU702
 996:os/queue.c    ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2384              		.loc 1 996 5 discriminator 1 view .LVU703
 2385 0044 FEE7     		b	.L165
 2386              	.LVL184:
 2387              	.L181:
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2388              		.loc 1 997 5 is_stmt 0 discriminator 2 view .LVU704
 2389 0046 036C     		ldr	r3, [r0, #64]
 2390              	.LVL185:
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2391              		.loc 1 997 5 discriminator 2 view .LVU705
 2392 0048 002B     		cmp	r3, #0
 2393 004a E1D0     		beq	.L166
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2394              		.loc 1 997 5 is_stmt 1 view .LVU706
 2395              	.LBB185:
 2396              	.LBI185:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2397              		.loc 2 193 34 view .LVU707
 2398              	.LBB186:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2399              		.loc 2 195 9 view .LVU708
 2400              		.loc 2 197 9 view .LVU709
 2401              		.syntax unified
 2402              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2403 004c 4FF05003 			mov r3, #80												
 2404 0050 72B6     		cpsid i													
 2405 0052 83F31188 		msr basepri, r3											
 2406 0056 BFF36F8F 		isb														
 2407 005a BFF34F8F 		dsb														
 2408 005e 62B6     		cpsie i													
 2409              	
 2410              	@ 0 "" 2
 2411              	.LVL186:
 2412              		.thumb
 2413              		.syntax unified
 2414              	.L167:
 2415              		.loc 2 197 9 is_stmt 0 view .LVU710
 2416              	.LBE186:
 2417              	.LBE185:
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2418              		.loc 1 997 5 is_stmt 1 discriminator 2 view .LVU711
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2419              		.loc 1 997 5 discriminator 2 view .LVU712
 997:os/queue.c    ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2420              		.loc 1 997 5 discriminator 2 view .LVU713
 2421 0060 FEE7     		b	.L167
 2422              	.L168:
 998:os/queue.c    **** 
 2423              		.loc 1 998 91 discriminator 8 view .LVU714
1014:os/queue.c    **** 
 2424              		.loc 1 1014 5 discriminator 8 view .LVU715
 2425 0062 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2426              	.LVL187:
1021:os/queue.c    ****     {
 2427              		.loc 1 1021 5 discriminator 8 view .LVU716
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 100


 2428              	.LBB187:
 2429              	.LBI187:
 198:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 199:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	mov %0, %1												\n"\
 200:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	cpsid i													\n"\
 201:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	msr basepri, %0											\n"\
 202:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	isb														\n"\
 203:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	dsb														\n"\
 204:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	cpsie i													\n"\
 205:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 206:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         );
 207:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 208:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 209:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 210:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 211:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 2430              		.loc 2 211 38 discriminator 8 view .LVU717
 2431              	.LBB188:
 212:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 213:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 2432              		.loc 2 213 9 discriminator 8 view .LVU718
 214:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 215:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile
 2433              		.loc 2 215 9 discriminator 8 view .LVU719
 2434              		.syntax unified
 2435              	@ 215 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2436 0066 EFF31186 			mrs r6, basepri											
 2437 006a 4FF05003 		mov r3, #80												
 2438 006e 72B6     		cpsid i													
 2439 0070 83F31188 		msr basepri, r3											
 2440 0074 BFF36F8F 		isb														
 2441 0078 BFF34F8F 		dsb														
 2442 007c 62B6     		cpsie i													
 2443              	
 2444              	@ 0 "" 2
 2445              	.LVL188:
 216:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 217:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	mrs %0, basepri											\n"\
 218:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	mov %1, %2												\n"\
 219:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	cpsid i													\n"\
 220:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	msr basepri, %1											\n"\
 221:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	isb														\n"\
 222:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	dsb														\n"\
 223:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             "	cpsie i													\n"\
 224:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 225:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         );
 226:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 227:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 228:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****          * warnings. */
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         return ulOriginalBASEPRI;
 2446              		.loc 2 229 9 discriminator 8 view .LVU720
 2447              		.loc 2 229 9 is_stmt 0 discriminator 8 view .LVU721
 2448              		.thumb
 2449              		.syntax unified
 2450              	.LBE188:
 2451              	.LBE187:
1023:os/queue.c    ****         {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 101


 2452              		.loc 1 1023 9 is_stmt 1 discriminator 8 view .LVU722
1023:os/queue.c    ****         {
 2453              		.loc 1 1023 22 is_stmt 0 discriminator 8 view .LVU723
 2454 007e A26B     		ldr	r2, [r4, #56]
1023:os/queue.c    ****         {
 2455              		.loc 1 1023 51 discriminator 8 view .LVU724
 2456 0080 E36B     		ldr	r3, [r4, #60]
1023:os/queue.c    ****         {
 2457              		.loc 1 1023 11 discriminator 8 view .LVU725
 2458 0082 9A42     		cmp	r2, r3
 2459 0084 06D3     		bcc	.L170
1023:os/queue.c    ****         {
 2460              		.loc 1 1023 64 discriminator 1 view .LVU726
 2461 0086 022F     		cmp	r7, #2
 2462 0088 04D0     		beq	.L170
1145:os/queue.c    ****         }
 2463              		.loc 1 1145 21 view .LVU727
 2464 008a 0020     		movs	r0, #0
 2465              	.L171:
 2466              	.LVL189:
1148:os/queue.c    **** 
 2467              		.loc 1 1148 5 is_stmt 1 view .LVU728
 2468              	.LBB189:
 2469              	.LBI189:
 230:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 231:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 232:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 233:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 2470              		.loc 2 233 34 view .LVU729
 2471              	.LBB190:
 234:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 235:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         __asm volatile
 2472              		.loc 2 235 9 view .LVU730
 2473              		.syntax unified
 2474              	@ 235 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2475 008c 86F31188 			msr basepri, r6	
 2476              	@ 0 "" 2
 2477              	.LVL190:
 2478              		.loc 2 235 9 is_stmt 0 view .LVU731
 2479              		.thumb
 2480              		.syntax unified
 2481              	.LBE190:
 2482              	.LBE189:
1150:os/queue.c    **** }
 2483              		.loc 1 1150 5 is_stmt 1 view .LVU732
1151:os/queue.c    **** /*-----------------------------------------------------------*/
 2484              		.loc 1 1151 1 is_stmt 0 view .LVU733
 2485 0090 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2486              	.LVL191:
 2487              	.L170:
 2488              	.LBB191:
1025:os/queue.c    ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 2489              		.loc 1 1025 13 is_stmt 1 view .LVU734
1025:os/queue.c    ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 2490              		.loc 1 1025 26 is_stmt 0 view .LVU735
 2491 0094 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 2492 0098 6DB2     		sxtb	r5, r5
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 102


 2493              	.LVL192:
1026:os/queue.c    **** 
 2494              		.loc 1 1026 13 is_stmt 1 view .LVU736
1026:os/queue.c    **** 
 2495              		.loc 1 1026 31 is_stmt 0 view .LVU737
 2496 009a A36B     		ldr	r3, [r4, #56]
1028:os/queue.c    **** 
 2497              		.loc 1 1028 48 is_stmt 1 view .LVU738
1035:os/queue.c    **** 
 2498              		.loc 1 1035 13 view .LVU739
1035:os/queue.c    **** 
 2499              		.loc 1 1035 22 is_stmt 0 view .LVU740
 2500 009c 3A46     		mov	r2, r7
 2501 009e 4946     		mov	r1, r9
 2502 00a0 2046     		mov	r0, r4
 2503 00a2 FFF7FEFF 		bl	prvCopyDataToQueue
 2504              	.LVL193:
1039:os/queue.c    ****             {
 2505              		.loc 1 1039 13 is_stmt 1 view .LVU741
1039:os/queue.c    ****             {
 2506              		.loc 1 1039 15 is_stmt 0 view .LVU742
 2507 00a6 B5F1FF3F 		cmp	r5, #-1
 2508 00aa 07D0     		beq	.L182
1135:os/queue.c    **** 
 2509              		.loc 1 1135 17 is_stmt 1 view .LVU743
 2510 00ac 7F2D     		cmp	r5, #127
 2511 00ae 15D0     		beq	.L183
1135:os/queue.c    **** 
 2512              		.loc 1 1135 57 discriminator 2 view .LVU744
1137:os/queue.c    ****             }
 2513              		.loc 1 1137 17 discriminator 2 view .LVU745
1137:os/queue.c    ****             }
 2514              		.loc 1 1137 57 is_stmt 0 discriminator 2 view .LVU746
 2515 00b0 6B1C     		adds	r3, r5, #1
1137:os/queue.c    ****             }
 2516              		.loc 1 1137 36 discriminator 2 view .LVU747
 2517 00b2 5BB2     		sxtb	r3, r3
1137:os/queue.c    ****             }
 2518              		.loc 1 1137 34 discriminator 2 view .LVU748
 2519 00b4 84F84530 		strb	r3, [r4, #69]
1140:os/queue.c    ****         }
 2520              		.loc 1 1140 21 discriminator 2 view .LVU749
 2521 00b8 0120     		movs	r0, #1
 2522 00ba E7E7     		b	.L171
 2523              	.L182:
1101:os/queue.c    ****                         {
 2524              		.loc 1 1101 25 is_stmt 1 view .LVU750
1101:os/queue.c    ****                         {
 2525              		.loc 1 1101 29 is_stmt 0 view .LVU751
 2526 00bc 636A     		ldr	r3, [r4, #36]
1101:os/queue.c    ****                         {
 2527              		.loc 1 1101 27 view .LVU752
 2528 00be 0BB9     		cbnz	r3, .L184
1140:os/queue.c    ****         }
 2529              		.loc 1 1140 21 view .LVU753
 2530 00c0 0120     		movs	r0, #1
 2531 00c2 E3E7     		b	.L171
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 103


 2532              	.L184:
1103:os/queue.c    ****                             {
 2533              		.loc 1 1103 29 is_stmt 1 view .LVU754
1103:os/queue.c    ****                             {
 2534              		.loc 1 1103 33 is_stmt 0 view .LVU755
 2535 00c4 04F12400 		add	r0, r4, #36
 2536 00c8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2537              	.LVL194:
1103:os/queue.c    ****                             {
 2538              		.loc 1 1103 31 view .LVU756
 2539 00cc 88B1     		cbz	r0, .L177
1107:os/queue.c    ****                                 {
 2540              		.loc 1 1107 33 is_stmt 1 view .LVU757
1107:os/queue.c    ****                                 {
 2541              		.loc 1 1107 35 is_stmt 0 view .LVU758
 2542 00ce B8F1000F 		cmp	r8, #0
 2543 00d2 10D0     		beq	.L178
1109:os/queue.c    ****                                 }
 2544              		.loc 1 1109 37 is_stmt 1 view .LVU759
1109:os/queue.c    ****                                 }
 2545              		.loc 1 1109 64 is_stmt 0 view .LVU760
 2546 00d4 0120     		movs	r0, #1
 2547 00d6 C8F80000 		str	r0, [r8]
 2548 00da D7E7     		b	.L171
 2549              	.L183:
1135:os/queue.c    **** 
 2550              		.loc 1 1135 17 is_stmt 1 view .LVU761
 2551              	.LBB192:
 2552              	.LBI192:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2553              		.loc 2 193 34 view .LVU762
 2554              	.LBB193:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2555              		.loc 2 195 9 view .LVU763
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2556              		.loc 2 197 9 view .LVU764
 2557              		.syntax unified
 2558              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2559 00dc 4FF05003 			mov r3, #80												
 2560 00e0 72B6     		cpsid i													
 2561 00e2 83F31188 		msr basepri, r3											
 2562 00e6 BFF36F8F 		isb														
 2563 00ea BFF34F8F 		dsb														
 2564 00ee 62B6     		cpsie i													
 2565              	
 2566              	@ 0 "" 2
 2567              	.LVL195:
 2568              		.thumb
 2569              		.syntax unified
 2570              	.L174:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2571              		.loc 2 197 9 is_stmt 0 view .LVU765
 2572              	.LBE193:
 2573              	.LBE192:
1135:os/queue.c    **** 
 2574              		.loc 1 1135 17 is_stmt 1 discriminator 6 view .LVU766
1135:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 104


 2575              		.loc 1 1135 17 discriminator 6 view .LVU767
1135:os/queue.c    **** 
 2576              		.loc 1 1135 17 discriminator 6 view .LVU768
 2577 00f0 FEE7     		b	.L174
 2578              	.L177:
1140:os/queue.c    ****         }
 2579              		.loc 1 1140 21 is_stmt 0 view .LVU769
 2580 00f2 0120     		movs	r0, #1
 2581 00f4 CAE7     		b	.L171
 2582              	.L178:
 2583 00f6 0120     		movs	r0, #1
 2584 00f8 C8E7     		b	.L171
 2585              	.LBE191:
 2586              		.cfi_endproc
 2587              	.LFE18:
 2589              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 2590              		.align	1
 2591              		.global	xQueueGiveFromISR
 2592              		.syntax unified
 2593              		.thumb
 2594              		.thumb_func
 2595              		.fpu fpv5-d16
 2597              	xQueueGiveFromISR:
 2598              	.LVL196:
 2599              	.LFB19:
1156:os/queue.c    ****     BaseType_t xReturn;
 2600              		.loc 1 1156 1 is_stmt 1 view -0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
1157:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
 2604              		.loc 1 1157 5 view .LVU771
1158:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 2605              		.loc 1 1158 5 view .LVU772
1159:os/queue.c    **** 
 2606              		.loc 1 1159 5 view .LVU773
1167:os/queue.c    **** 
 2607              		.loc 1 1167 5 view .LVU774
 2608 0000 78B1     		cbz	r0, .L202
1156:os/queue.c    ****     BaseType_t xReturn;
 2609              		.loc 1 1156 1 is_stmt 0 discriminator 2 view .LVU775
 2610 0002 70B5     		push	{r4, r5, r6, lr}
 2611              	.LCFI33:
 2612              		.cfi_def_cfa_offset 16
 2613              		.cfi_offset 4, -16
 2614              		.cfi_offset 5, -12
 2615              		.cfi_offset 6, -8
 2616              		.cfi_offset 14, -4
 2617 0004 0E46     		mov	r6, r1
 2618 0006 0446     		mov	r4, r0
1167:os/queue.c    **** 
 2619              		.loc 1 1167 28 is_stmt 1 discriminator 2 view .LVU776
1171:os/queue.c    **** 
 2620              		.loc 1 1171 5 discriminator 2 view .LVU777
 2621 0008 036C     		ldr	r3, [r0, #64]
 2622 000a ABB1     		cbz	r3, .L188
1171:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 105


 2623              		.loc 1 1171 5 view .LVU778
 2624              	.LBB194:
 2625              	.LBI194:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2626              		.loc 2 193 34 view .LVU779
 2627              	.LBB195:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2628              		.loc 2 195 9 view .LVU780
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2629              		.loc 2 197 9 view .LVU781
 2630              		.syntax unified
 2631              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2632 000c 4FF05003 			mov r3, #80												
 2633 0010 72B6     		cpsid i													
 2634 0012 83F31188 		msr basepri, r3											
 2635 0016 BFF36F8F 		isb														
 2636 001a BFF34F8F 		dsb														
 2637 001e 62B6     		cpsie i													
 2638              	
 2639              	@ 0 "" 2
 2640              	.LVL197:
 2641              		.thumb
 2642              		.syntax unified
 2643              	.L189:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2644              		.loc 2 197 9 is_stmt 0 view .LVU782
 2645              	.LBE195:
 2646              	.LBE194:
1171:os/queue.c    **** 
 2647              		.loc 1 1171 5 is_stmt 1 discriminator 2 view .LVU783
1171:os/queue.c    **** 
 2648              		.loc 1 1171 5 discriminator 2 view .LVU784
1171:os/queue.c    **** 
 2649              		.loc 1 1171 5 discriminator 2 view .LVU785
 2650 0020 FEE7     		b	.L189
 2651              	.L202:
 2652              	.LCFI34:
 2653              		.cfi_def_cfa_offset 0
 2654              		.cfi_restore 4
 2655              		.cfi_restore 5
 2656              		.cfi_restore 6
 2657              		.cfi_restore 14
1167:os/queue.c    **** 
 2658              		.loc 1 1167 5 view .LVU786
 2659              	.LBB196:
 2660              	.LBI196:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2661              		.loc 2 193 34 view .LVU787
 2662              	.LBB197:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2663              		.loc 2 195 9 view .LVU788
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2664              		.loc 2 197 9 view .LVU789
 2665              		.syntax unified
 2666              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2667 0022 4FF05003 			mov r3, #80												
 2668 0026 72B6     		cpsid i													
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 106


 2669 0028 83F31188 		msr basepri, r3											
 2670 002c BFF36F8F 		isb														
 2671 0030 BFF34F8F 		dsb														
 2672 0034 62B6     		cpsie i													
 2673              	
 2674              	@ 0 "" 2
 2675              	.LVL198:
 2676              		.thumb
 2677              		.syntax unified
 2678              	.L187:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2679              		.loc 2 197 9 is_stmt 0 view .LVU790
 2680              	.LBE197:
 2681              	.LBE196:
1167:os/queue.c    **** 
 2682              		.loc 1 1167 5 is_stmt 1 discriminator 1 view .LVU791
1167:os/queue.c    **** 
 2683              		.loc 1 1167 5 discriminator 1 view .LVU792
1167:os/queue.c    **** 
 2684              		.loc 1 1167 5 discriminator 1 view .LVU793
 2685 0036 FEE7     		b	.L187
 2686              	.L188:
 2687              	.LCFI35:
 2688              		.cfi_def_cfa_offset 16
 2689              		.cfi_offset 4, -16
 2690              		.cfi_offset 5, -12
 2691              		.cfi_offset 6, -8
 2692              		.cfi_offset 14, -4
1171:os/queue.c    **** 
 2693              		.loc 1 1171 45 discriminator 2 view .LVU794
1176:os/queue.c    **** 
 2694              		.loc 1 1176 5 discriminator 2 view .LVU795
 2695 0038 0368     		ldr	r3, [r0]
 2696 003a 0BB3     		cbz	r3, .L203
 2697              	.L190:
1176:os/queue.c    **** 
 2698              		.loc 1 1176 123 discriminator 8 view .LVU796
1192:os/queue.c    **** 
 2699              		.loc 1 1192 5 discriminator 8 view .LVU797
 2700 003c FFF7FEFF 		bl	vPortValidateInterruptPriority
 2701              	.LVL199:
1194:os/queue.c    ****     {
 2702              		.loc 1 1194 5 discriminator 8 view .LVU798
 2703              	.LBB198:
 2704              	.LBI198:
 211:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2705              		.loc 2 211 38 discriminator 8 view .LVU799
 2706              	.LBB199:
 213:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2707              		.loc 2 213 9 discriminator 8 view .LVU800
 215:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2708              		.loc 2 215 9 discriminator 8 view .LVU801
 2709              		.syntax unified
 2710              	@ 215 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2711 0040 EFF31185 			mrs r5, basepri											
 2712 0044 4FF05003 		mov r3, #80												
 2713 0048 72B6     		cpsid i													
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 107


 2714 004a 83F31188 		msr basepri, r3											
 2715 004e BFF36F8F 		isb														
 2716 0052 BFF34F8F 		dsb														
 2717 0056 62B6     		cpsie i													
 2718              	
 2719              	@ 0 "" 2
 2720              	.LVL200:
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 2721              		.loc 2 229 9 discriminator 8 view .LVU802
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 2722              		.loc 2 229 9 is_stmt 0 discriminator 8 view .LVU803
 2723              		.thumb
 2724              		.syntax unified
 2725              	.LBE199:
 2726              	.LBE198:
 2727              	.LBB200:
1196:os/queue.c    **** 
 2728              		.loc 1 1196 9 is_stmt 1 discriminator 8 view .LVU804
1196:os/queue.c    **** 
 2729              		.loc 1 1196 27 is_stmt 0 discriminator 8 view .LVU805
 2730 0058 A26B     		ldr	r2, [r4, #56]
 2731              	.LVL201:
1201:os/queue.c    ****         {
 2732              		.loc 1 1201 9 is_stmt 1 discriminator 8 view .LVU806
1201:os/queue.c    ****         {
 2733              		.loc 1 1201 40 is_stmt 0 discriminator 8 view .LVU807
 2734 005a E36B     		ldr	r3, [r4, #60]
1201:os/queue.c    ****         {
 2735              		.loc 1 1201 11 discriminator 8 view .LVU808
 2736 005c 9342     		cmp	r3, r2
 2737 005e 35D9     		bls	.L196
 2738              	.LBB201:
1203:os/queue.c    **** 
 2739              		.loc 1 1203 13 is_stmt 1 view .LVU809
1203:os/queue.c    **** 
 2740              		.loc 1 1203 26 is_stmt 0 view .LVU810
 2741 0060 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2742 0064 5BB2     		sxtb	r3, r3
 2743              	.LVL202:
1205:os/queue.c    **** 
 2744              		.loc 1 1205 48 is_stmt 1 view .LVU811
1213:os/queue.c    **** 
 2745              		.loc 1 1213 13 view .LVU812
1213:os/queue.c    **** 
 2746              		.loc 1 1213 60 is_stmt 0 view .LVU813
 2747 0066 0132     		adds	r2, r2, #1
 2748              	.LVL203:
1213:os/queue.c    **** 
 2749              		.loc 1 1213 40 view .LVU814
 2750 0068 A263     		str	r2, [r4, #56]
1217:os/queue.c    ****             {
 2751              		.loc 1 1217 13 is_stmt 1 view .LVU815
1217:os/queue.c    ****             {
 2752              		.loc 1 1217 15 is_stmt 0 view .LVU816
 2753 006a B3F1FF3F 		cmp	r3, #-1
 2754 006e 15D0     		beq	.L204
1303:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 108


 2755              		.loc 1 1303 17 is_stmt 1 view .LVU817
 2756 0070 7F2B     		cmp	r3, #127
 2757 0072 20D0     		beq	.L205
1303:os/queue.c    **** 
 2758              		.loc 1 1303 57 discriminator 2 view .LVU818
1305:os/queue.c    ****             }
 2759              		.loc 1 1305 17 discriminator 2 view .LVU819
1305:os/queue.c    ****             }
 2760              		.loc 1 1305 57 is_stmt 0 discriminator 2 view .LVU820
 2761 0074 0133     		adds	r3, r3, #1
 2762              	.LVL204:
1305:os/queue.c    ****             }
 2763              		.loc 1 1305 36 discriminator 2 view .LVU821
 2764 0076 5BB2     		sxtb	r3, r3
 2765              	.LVL205:
1305:os/queue.c    ****             }
 2766              		.loc 1 1305 34 discriminator 2 view .LVU822
 2767 0078 84F84530 		strb	r3, [r4, #69]
1308:os/queue.c    ****         }
 2768              		.loc 1 1308 21 discriminator 2 view .LVU823
 2769 007c 0120     		movs	r0, #1
 2770 007e 26E0     		b	.L192
 2771              	.LVL206:
 2772              	.L203:
1308:os/queue.c    ****         }
 2773              		.loc 1 1308 21 discriminator 2 view .LVU824
 2774              	.LBE201:
 2775              	.LBE200:
1176:os/queue.c    **** 
 2776              		.loc 1 1176 5 discriminator 2 view .LVU825
 2777 0080 8368     		ldr	r3, [r0, #8]
 2778 0082 002B     		cmp	r3, #0
 2779 0084 DAD0     		beq	.L190
1176:os/queue.c    **** 
 2780              		.loc 1 1176 5 is_stmt 1 view .LVU826
 2781              	.LBB206:
 2782              	.LBI206:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2783              		.loc 2 193 34 view .LVU827
 2784              	.LBB207:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2785              		.loc 2 195 9 view .LVU828
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2786              		.loc 2 197 9 view .LVU829
 2787              		.syntax unified
 2788              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2789 0086 4FF05003 			mov r3, #80												
 2790 008a 72B6     		cpsid i													
 2791 008c 83F31188 		msr basepri, r3											
 2792 0090 BFF36F8F 		isb														
 2793 0094 BFF34F8F 		dsb														
 2794 0098 62B6     		cpsie i													
 2795              	
 2796              	@ 0 "" 2
 2797              	.LVL207:
 2798              		.thumb
 2799              		.syntax unified
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 109


 2800              	.L191:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2801              		.loc 2 197 9 is_stmt 0 view .LVU830
 2802              	.LBE207:
 2803              	.LBE206:
1176:os/queue.c    **** 
 2804              		.loc 1 1176 5 is_stmt 1 discriminator 3 view .LVU831
1176:os/queue.c    **** 
 2805              		.loc 1 1176 5 discriminator 3 view .LVU832
1176:os/queue.c    **** 
 2806              		.loc 1 1176 5 discriminator 3 view .LVU833
 2807 009a FEE7     		b	.L191
 2808              	.LVL208:
 2809              	.L204:
 2810              	.LBB208:
 2811              	.LBB204:
1272:os/queue.c    ****                         {
 2812              		.loc 1 1272 25 view .LVU834
1272:os/queue.c    ****                         {
 2813              		.loc 1 1272 29 is_stmt 0 view .LVU835
 2814 009c 636A     		ldr	r3, [r4, #36]
 2815              	.LVL209:
1272:os/queue.c    ****                         {
 2816              		.loc 1 1272 27 view .LVU836
 2817 009e 0BB9     		cbnz	r3, .L206
1308:os/queue.c    ****         }
 2818              		.loc 1 1308 21 view .LVU837
 2819 00a0 0120     		movs	r0, #1
 2820 00a2 14E0     		b	.L192
 2821              	.L206:
1274:os/queue.c    ****                             {
 2822              		.loc 1 1274 29 is_stmt 1 view .LVU838
1274:os/queue.c    ****                             {
 2823              		.loc 1 1274 33 is_stmt 0 view .LVU839
 2824 00a4 04F12400 		add	r0, r4, #36
 2825 00a8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2826              	.LVL210:
1274:os/queue.c    ****                             {
 2827              		.loc 1 1274 31 view .LVU840
 2828 00ac 90B1     		cbz	r0, .L198
1278:os/queue.c    ****                                 {
 2829              		.loc 1 1278 33 is_stmt 1 view .LVU841
1278:os/queue.c    ****                                 {
 2830              		.loc 1 1278 35 is_stmt 0 view .LVU842
 2831 00ae 9EB1     		cbz	r6, .L199
1280:os/queue.c    ****                                 }
 2832              		.loc 1 1280 37 is_stmt 1 view .LVU843
1280:os/queue.c    ****                                 }
 2833              		.loc 1 1280 64 is_stmt 0 view .LVU844
 2834 00b0 0120     		movs	r0, #1
 2835 00b2 3060     		str	r0, [r6]
 2836 00b4 0BE0     		b	.L192
 2837              	.LVL211:
 2838              	.L205:
1303:os/queue.c    **** 
 2839              		.loc 1 1303 17 is_stmt 1 view .LVU845
 2840              	.LBB202:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 110


 2841              	.LBI202:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2842              		.loc 2 193 34 view .LVU846
 2843              	.LBB203:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2844              		.loc 2 195 9 view .LVU847
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2845              		.loc 2 197 9 view .LVU848
 2846              		.syntax unified
 2847              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2848 00b6 4FF05003 			mov r3, #80												
 2849 00ba 72B6     		cpsid i													
 2850 00bc 83F31188 		msr basepri, r3											
 2851 00c0 BFF36F8F 		isb														
 2852 00c4 BFF34F8F 		dsb														
 2853 00c8 62B6     		cpsie i													
 2854              	
 2855              	@ 0 "" 2
 2856              	.LVL212:
 2857              		.thumb
 2858              		.syntax unified
 2859              	.L195:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2860              		.loc 2 197 9 is_stmt 0 view .LVU849
 2861              	.LBE203:
 2862              	.LBE202:
1303:os/queue.c    **** 
 2863              		.loc 1 1303 17 is_stmt 1 discriminator 6 view .LVU850
1303:os/queue.c    **** 
 2864              		.loc 1 1303 17 discriminator 6 view .LVU851
1303:os/queue.c    **** 
 2865              		.loc 1 1303 17 discriminator 6 view .LVU852
 2866 00ca FEE7     		b	.L195
 2867              	.LVL213:
 2868              	.L196:
1303:os/queue.c    **** 
 2869              		.loc 1 1303 17 is_stmt 0 discriminator 6 view .LVU853
 2870              	.LBE204:
1313:os/queue.c    ****         }
 2871              		.loc 1 1313 21 view .LVU854
 2872 00cc 0020     		movs	r0, #0
 2873              	.LVL214:
 2874              	.L192:
1313:os/queue.c    ****         }
 2875              		.loc 1 1313 21 view .LVU855
 2876              	.LBE208:
1316:os/queue.c    **** 
 2877              		.loc 1 1316 5 is_stmt 1 view .LVU856
 2878              	.LBB209:
 2879              	.LBI209:
 233:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2880              		.loc 2 233 34 view .LVU857
 2881              	.LBB210:
 2882              		.loc 2 235 9 view .LVU858
 2883              		.syntax unified
 2884              	@ 235 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2885 00ce 85F31188 			msr basepri, r5	
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 111


 2886              	@ 0 "" 2
 2887              	.LVL215:
 2888              		.loc 2 235 9 is_stmt 0 view .LVU859
 2889              		.thumb
 2890              		.syntax unified
 2891              	.LBE210:
 2892              	.LBE209:
1318:os/queue.c    **** }
 2893              		.loc 1 1318 5 is_stmt 1 view .LVU860
1319:os/queue.c    **** /*-----------------------------------------------------------*/
 2894              		.loc 1 1319 1 is_stmt 0 view .LVU861
 2895 00d2 70BD     		pop	{r4, r5, r6, pc}
 2896              	.LVL216:
 2897              	.L198:
 2898              	.LBB211:
 2899              	.LBB205:
1308:os/queue.c    ****         }
 2900              		.loc 1 1308 21 view .LVU862
 2901 00d4 0120     		movs	r0, #1
 2902 00d6 FAE7     		b	.L192
 2903              	.L199:
 2904 00d8 0120     		movs	r0, #1
 2905 00da F8E7     		b	.L192
 2906              	.LBE205:
 2907              	.LBE211:
 2908              		.cfi_endproc
 2909              	.LFE19:
 2911              		.section	.text.xQueueReceive,"ax",%progbits
 2912              		.align	1
 2913              		.global	xQueueReceive
 2914              		.syntax unified
 2915              		.thumb
 2916              		.thumb_func
 2917              		.fpu fpv5-d16
 2919              	xQueueReceive:
 2920              	.LVL217:
 2921              	.LFB20:
1325:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
 2922              		.loc 1 1325 1 is_stmt 1 view -0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 16
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
1325:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
 2926              		.loc 1 1325 1 is_stmt 0 view .LVU864
 2927 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2928              	.LCFI36:
 2929              		.cfi_def_cfa_offset 20
 2930              		.cfi_offset 4, -20
 2931              		.cfi_offset 5, -16
 2932              		.cfi_offset 6, -12
 2933              		.cfi_offset 7, -8
 2934              		.cfi_offset 14, -4
 2935 0002 85B0     		sub	sp, sp, #20
 2936              	.LCFI37:
 2937              		.cfi_def_cfa_offset 40
 2938 0004 0192     		str	r2, [sp, #4]
1326:os/queue.c    ****     TimeOut_t xTimeOut;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 112


 2939              		.loc 1 1326 5 is_stmt 1 view .LVU865
 2940              	.LVL218:
1327:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 2941              		.loc 1 1327 5 view .LVU866
1328:os/queue.c    **** 
 2942              		.loc 1 1328 5 view .LVU867
1331:os/queue.c    **** 
 2943              		.loc 1 1331 5 view .LVU868
 2944 0006 A0B1     		cbz	r0, .L227
 2945 0008 0E46     		mov	r6, r1
 2946 000a 0446     		mov	r4, r0
1331:os/queue.c    **** 
 2947              		.loc 1 1331 32 discriminator 2 view .LVU869
1335:os/queue.c    **** 
 2948              		.loc 1 1335 5 discriminator 2 view .LVU870
 2949 000c E1B1     		cbz	r1, .L228
 2950              	.L210:
1335:os/queue.c    **** 
 2951              		.loc 1 1335 103 discriminator 8 view .LVU871
1340:os/queue.c    ****         }
 2952              		.loc 1 1340 13 discriminator 8 view .LVU872
 2953 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 2954              	.LVL219:
1340:os/queue.c    ****         }
 2955              		.loc 1 1340 13 is_stmt 0 discriminator 8 view .LVU873
 2956 0012 0746     		mov	r7, r0
 2957 0014 30BB     		cbnz	r0, .L225
1340:os/queue.c    ****         }
 2958              		.loc 1 1340 13 discriminator 2 view .LVU874
 2959 0016 019B     		ldr	r3, [sp, #4]
 2960 0018 002B     		cmp	r3, #0
 2961 001a 62D0     		beq	.L214
1340:os/queue.c    ****         }
 2962              		.loc 1 1340 13 is_stmt 1 view .LVU875
 2963              	.LBB212:
 2964              	.LBI212:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2965              		.loc 2 193 34 view .LVU876
 2966              	.LBB213:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2967              		.loc 2 195 9 view .LVU877
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2968              		.loc 2 197 9 view .LVU878
 2969              		.syntax unified
 2970              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2971 001c 4FF05003 			mov r3, #80												
 2972 0020 72B6     		cpsid i													
 2973 0022 83F31188 		msr basepri, r3											
 2974 0026 BFF36F8F 		isb														
 2975 002a BFF34F8F 		dsb														
 2976 002e 62B6     		cpsie i													
 2977              	
 2978              	@ 0 "" 2
 2979              	.LVL220:
 2980              		.thumb
 2981              		.syntax unified
 2982              	.L213:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 113


 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2983              		.loc 2 197 9 is_stmt 0 view .LVU879
 2984              	.LBE213:
 2985              	.LBE212:
1340:os/queue.c    ****         }
 2986              		.loc 1 1340 13 is_stmt 1 discriminator 3 view .LVU880
1340:os/queue.c    ****         }
 2987              		.loc 1 1340 13 discriminator 3 view .LVU881
1340:os/queue.c    ****         }
 2988              		.loc 1 1340 13 discriminator 3 view .LVU882
 2989 0030 FEE7     		b	.L213
 2990              	.LVL221:
 2991              	.L227:
1331:os/queue.c    **** 
 2992              		.loc 1 1331 5 view .LVU883
 2993              	.LBB214:
 2994              	.LBI214:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 2995              		.loc 2 193 34 view .LVU884
 2996              	.LBB215:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2997              		.loc 2 195 9 view .LVU885
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 2998              		.loc 2 197 9 view .LVU886
 2999              		.syntax unified
 3000              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3001 0032 4FF05003 			mov r3, #80												
 3002 0036 72B6     		cpsid i													
 3003 0038 83F31188 		msr basepri, r3											
 3004 003c BFF36F8F 		isb														
 3005 0040 BFF34F8F 		dsb														
 3006 0044 62B6     		cpsie i													
 3007              	
 3008              	@ 0 "" 2
 3009              	.LVL222:
 3010              		.thumb
 3011              		.syntax unified
 3012              	.L209:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3013              		.loc 2 197 9 is_stmt 0 view .LVU887
 3014              	.LBE215:
 3015              	.LBE214:
1331:os/queue.c    **** 
 3016              		.loc 1 1331 5 is_stmt 1 discriminator 1 view .LVU888
1331:os/queue.c    **** 
 3017              		.loc 1 1331 5 discriminator 1 view .LVU889
1331:os/queue.c    **** 
 3018              		.loc 1 1331 5 discriminator 1 view .LVU890
 3019 0046 FEE7     		b	.L209
 3020              	.L228:
1335:os/queue.c    **** 
 3021              		.loc 1 1335 5 is_stmt 0 discriminator 2 view .LVU891
 3022 0048 036C     		ldr	r3, [r0, #64]
 3023 004a 002B     		cmp	r3, #0
 3024 004c DFD0     		beq	.L210
1335:os/queue.c    **** 
 3025              		.loc 1 1335 5 is_stmt 1 view .LVU892
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 114


 3026              	.LBB216:
 3027              	.LBI216:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3028              		.loc 2 193 34 view .LVU893
 3029              	.LBB217:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3030              		.loc 2 195 9 view .LVU894
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3031              		.loc 2 197 9 view .LVU895
 3032              		.syntax unified
 3033              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3034 004e 4FF05003 			mov r3, #80												
 3035 0052 72B6     		cpsid i													
 3036 0054 83F31188 		msr basepri, r3											
 3037 0058 BFF36F8F 		isb														
 3038 005c BFF34F8F 		dsb														
 3039 0060 62B6     		cpsie i													
 3040              	
 3041              	@ 0 "" 2
 3042              	.LVL223:
 3043              		.thumb
 3044              		.syntax unified
 3045              	.L211:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3046              		.loc 2 197 9 is_stmt 0 view .LVU896
 3047              	.LBE217:
 3048              	.LBE216:
1335:os/queue.c    **** 
 3049              		.loc 1 1335 5 is_stmt 1 discriminator 2 view .LVU897
1335:os/queue.c    **** 
 3050              		.loc 1 1335 5 discriminator 2 view .LVU898
1335:os/queue.c    **** 
 3051              		.loc 1 1335 5 discriminator 2 view .LVU899
 3052 0062 FEE7     		b	.L211
 3053              	.LVL224:
 3054              	.L225:
1335:os/queue.c    **** 
 3055              		.loc 1 1335 5 is_stmt 0 discriminator 2 view .LVU900
 3056 0064 0027     		movs	r7, #0
 3057 0066 3CE0     		b	.L214
 3058              	.LVL225:
 3059              	.L231:
 3060              	.LBB218:
1358:os/queue.c    ****                 traceQUEUE_RECEIVE( pxQueue );
 3061              		.loc 1 1358 17 is_stmt 1 view .LVU901
 3062 0068 3146     		mov	r1, r6
 3063 006a 2046     		mov	r0, r4
 3064 006c FFF7FEFF 		bl	prvCopyDataFromQueue
 3065              	.LVL226:
1359:os/queue.c    ****                 pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3066              		.loc 1 1359 46 view .LVU902
1360:os/queue.c    **** 
 3067              		.loc 1 1360 17 view .LVU903
1360:os/queue.c    **** 
 3068              		.loc 1 1360 64 is_stmt 0 view .LVU904
 3069 0070 013D     		subs	r5, r5, #1
 3070              	.LVL227:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 115


1360:os/queue.c    **** 
 3071              		.loc 1 1360 44 view .LVU905
 3072 0072 A563     		str	r5, [r4, #56]
1365:os/queue.c    ****                 {
 3073              		.loc 1 1365 17 is_stmt 1 view .LVU906
1365:os/queue.c    ****                 {
 3074              		.loc 1 1365 21 is_stmt 0 view .LVU907
 3075 0074 2369     		ldr	r3, [r4, #16]
1365:os/queue.c    ****                 {
 3076              		.loc 1 1365 19 view .LVU908
 3077 0076 23B9     		cbnz	r3, .L229
 3078              	.L216:
1378:os/queue.c    ****                 }
 3079              		.loc 1 1378 45 is_stmt 1 view .LVU909
1381:os/queue.c    ****                 return pdPASS;
 3080              		.loc 1 1381 17 view .LVU910
 3081 0078 FFF7FEFF 		bl	vPortExitCritical
 3082              	.LVL228:
1382:os/queue.c    ****             }
 3083              		.loc 1 1382 17 view .LVU911
1382:os/queue.c    ****             }
 3084              		.loc 1 1382 24 is_stmt 0 view .LVU912
 3085 007c 0120     		movs	r0, #1
 3086              	.LVL229:
 3087              	.L207:
1382:os/queue.c    ****             }
 3088              		.loc 1 1382 24 view .LVU913
 3089              	.LBE218:
1462:os/queue.c    **** /*-----------------------------------------------------------*/
 3090              		.loc 1 1462 1 view .LVU914
 3091 007e 05B0     		add	sp, sp, #20
 3092              	.LCFI38:
 3093              		.cfi_remember_state
 3094              		.cfi_def_cfa_offset 20
 3095              		@ sp needed
 3096 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 3097              	.LVL230:
 3098              	.L229:
 3099              	.LCFI39:
 3100              		.cfi_restore_state
 3101              	.LBB219:
1367:os/queue.c    ****                     {
 3102              		.loc 1 1367 21 is_stmt 1 view .LVU915
1367:os/queue.c    ****                     {
 3103              		.loc 1 1367 25 is_stmt 0 view .LVU916
 3104 0082 04F11000 		add	r0, r4, #16
 3105 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3106              	.LVL231:
1367:os/queue.c    ****                     {
 3107              		.loc 1 1367 23 view .LVU917
 3108 008a 0028     		cmp	r0, #0
 3109 008c F4D0     		beq	.L216
1369:os/queue.c    ****                     }
 3110              		.loc 1 1369 25 is_stmt 1 view .LVU918
 3111 008e 354B     		ldr	r3, .L236
 3112 0090 4FF08052 		mov	r2, #268435456
 3113 0094 1A60     		str	r2, [r3]
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 116


1369:os/queue.c    ****                     }
 3114              		.loc 1 1369 25 view .LVU919
 3115              		.syntax unified
 3116              	@ 1369 "os/queue.c" 1
 3117 0096 BFF34F8F 		dsb
 3118              	@ 0 "" 2
1369:os/queue.c    ****                     }
 3119              		.loc 1 1369 25 view .LVU920
 3120              	@ 1369 "os/queue.c" 1
 3121 009a BFF36F8F 		isb
 3122              	@ 0 "" 2
1369:os/queue.c    ****                     }
 3123              		.loc 1 1369 57 view .LVU921
 3124              		.thumb
 3125              		.syntax unified
 3126 009e EBE7     		b	.L216
 3127              	.LVL232:
 3128              	.L232:
1390:os/queue.c    ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
 3129              		.loc 1 1390 21 view .LVU922
 3130 00a0 FFF7FEFF 		bl	vPortExitCritical
 3131              	.LVL233:
1391:os/queue.c    ****                     return errQUEUE_EMPTY;
 3132              		.loc 1 1391 57 view .LVU923
1392:os/queue.c    ****                 }
 3133              		.loc 1 1392 21 view .LVU924
1392:os/queue.c    ****                 }
 3134              		.loc 1 1392 28 is_stmt 0 view .LVU925
 3135 00a4 0020     		movs	r0, #0
 3136 00a6 EAE7     		b	.L207
 3137              	.L233:
1398:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
 3138              		.loc 1 1398 21 is_stmt 1 view .LVU926
 3139 00a8 02A8     		add	r0, sp, #8
 3140 00aa FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3141              	.LVL234:
1399:os/queue.c    ****                 }
 3142              		.loc 1 1399 21 view .LVU927
1399:os/queue.c    ****                 }
 3143              		.loc 1 1399 35 is_stmt 0 view .LVU928
 3144 00ae 0127     		movs	r7, #1
 3145 00b0 21E0     		b	.L219
 3146              	.LVL235:
 3147              	.L234:
1399:os/queue.c    ****                 }
 3148              		.loc 1 1399 35 view .LVU929
 3149              	.LBE219:
1414:os/queue.c    **** 
 3150              		.loc 1 1414 9 is_stmt 1 discriminator 1 view .LVU930
 3151 00b2 0023     		movs	r3, #0
 3152 00b4 84F84430 		strb	r3, [r4, #68]
 3153 00b8 29E0     		b	.L220
 3154              	.L235:
1414:os/queue.c    **** 
 3155              		.loc 1 1414 9 discriminator 4 view .LVU931
 3156 00ba 0023     		movs	r3, #0
 3157 00bc 84F84530 		strb	r3, [r4, #69]
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 117


 3158 00c0 2BE0     		b	.L221
 3159              	.L223:
1440:os/queue.c    ****                 ( void ) xTaskResumeAll();
 3160              		.loc 1 1440 17 view .LVU932
 3161 00c2 2046     		mov	r0, r4
 3162 00c4 FFF7FEFF 		bl	prvUnlockQueue
 3163              	.LVL236:
1441:os/queue.c    ****             }
 3164              		.loc 1 1441 17 view .LVU933
1441:os/queue.c    ****             }
 3165              		.loc 1 1441 26 is_stmt 0 view .LVU934
 3166 00c8 FFF7FEFF 		bl	xTaskResumeAll
 3167              	.LVL237:
 3168 00cc 09E0     		b	.L214
 3169              	.L222:
1448:os/queue.c    ****             ( void ) xTaskResumeAll();
 3170              		.loc 1 1448 13 is_stmt 1 view .LVU935
 3171 00ce 2046     		mov	r0, r4
 3172 00d0 FFF7FEFF 		bl	prvUnlockQueue
 3173              	.LVL238:
1449:os/queue.c    **** 
 3174              		.loc 1 1449 13 view .LVU936
1449:os/queue.c    **** 
 3175              		.loc 1 1449 22 is_stmt 0 view .LVU937
 3176 00d4 FFF7FEFF 		bl	xTaskResumeAll
 3177              	.LVL239:
1451:os/queue.c    ****             {
 3178              		.loc 1 1451 13 is_stmt 1 view .LVU938
1451:os/queue.c    ****             {
 3179              		.loc 1 1451 17 is_stmt 0 view .LVU939
 3180 00d8 2046     		mov	r0, r4
 3181 00da FFF7FEFF 		bl	prvIsQueueEmpty
 3182              	.LVL240:
1451:os/queue.c    ****             {
 3183              		.loc 1 1451 15 view .LVU940
 3184 00de 0028     		cmp	r0, #0
 3185 00e0 3DD1     		bne	.L230
 3186              	.LVL241:
 3187              	.L214:
1340:os/queue.c    ****         }
 3188              		.loc 1 1340 114 is_stmt 1 discriminator 8 view .LVU941
1347:os/queue.c    ****     {
 3189              		.loc 1 1347 5 discriminator 8 view .LVU942
1349:os/queue.c    ****         {
 3190              		.loc 1 1349 9 discriminator 8 view .LVU943
 3191 00e2 FFF7FEFF 		bl	vPortEnterCritical
 3192              	.LVL242:
 3193              	.LBB220:
1351:os/queue.c    **** 
 3194              		.loc 1 1351 13 discriminator 8 view .LVU944
1351:os/queue.c    **** 
 3195              		.loc 1 1351 31 is_stmt 0 discriminator 8 view .LVU945
 3196 00e6 A56B     		ldr	r5, [r4, #56]
 3197              	.LVL243:
1355:os/queue.c    ****             {
 3198              		.loc 1 1355 13 is_stmt 1 discriminator 8 view .LVU946
1355:os/queue.c    ****             {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 118


 3199              		.loc 1 1355 15 is_stmt 0 discriminator 8 view .LVU947
 3200 00e8 002D     		cmp	r5, #0
 3201 00ea BDD1     		bne	.L231
1386:os/queue.c    ****                 {
 3202              		.loc 1 1386 17 is_stmt 1 view .LVU948
1386:os/queue.c    ****                 {
 3203              		.loc 1 1386 34 is_stmt 0 view .LVU949
 3204 00ec 019B     		ldr	r3, [sp, #4]
1386:os/queue.c    ****                 {
 3205              		.loc 1 1386 19 view .LVU950
 3206 00ee 002B     		cmp	r3, #0
 3207 00f0 D6D0     		beq	.L232
1394:os/queue.c    ****                 {
 3208              		.loc 1 1394 22 is_stmt 1 view .LVU951
1394:os/queue.c    ****                 {
 3209              		.loc 1 1394 24 is_stmt 0 view .LVU952
 3210 00f2 002F     		cmp	r7, #0
 3211 00f4 D8D0     		beq	.L233
 3212              	.LVL244:
 3213              	.L219:
1404:os/queue.c    ****                 }
 3214              		.loc 1 1404 45 is_stmt 1 view .LVU953
 3215              	.LBE220:
1408:os/queue.c    **** 
 3216              		.loc 1 1408 9 view .LVU954
 3217 00f6 FFF7FEFF 		bl	vPortExitCritical
 3218              	.LVL245:
1413:os/queue.c    ****         prvLockQueue( pxQueue );
 3219              		.loc 1 1413 9 view .LVU955
 3220 00fa FFF7FEFF 		bl	vTaskSuspendAll
 3221              	.LVL246:
1414:os/queue.c    **** 
 3222              		.loc 1 1414 9 view .LVU956
 3223 00fe FFF7FEFF 		bl	vPortEnterCritical
 3224              	.LVL247:
1414:os/queue.c    **** 
 3225              		.loc 1 1414 9 view .LVU957
 3226 0102 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3227 0106 5BB2     		sxtb	r3, r3
 3228 0108 B3F1FF3F 		cmp	r3, #-1
 3229 010c D1D0     		beq	.L234
 3230              	.L220:
1414:os/queue.c    **** 
 3231              		.loc 1 1414 9 discriminator 3 view .LVU958
 3232 010e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3233 0112 5BB2     		sxtb	r3, r3
 3234 0114 B3F1FF3F 		cmp	r3, #-1
 3235 0118 CFD0     		beq	.L235
 3236              	.L221:
1414:os/queue.c    **** 
 3237              		.loc 1 1414 9 discriminator 6 view .LVU959
 3238 011a FFF7FEFF 		bl	vPortExitCritical
 3239              	.LVL248:
1417:os/queue.c    ****         {
 3240              		.loc 1 1417 9 discriminator 6 view .LVU960
1417:os/queue.c    ****         {
 3241              		.loc 1 1417 13 is_stmt 0 discriminator 6 view .LVU961
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 119


 3242 011e 01A9     		add	r1, sp, #4
 3243 0120 02A8     		add	r0, sp, #8
 3244 0122 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3245              	.LVL249:
1417:os/queue.c    ****         {
 3246              		.loc 1 1417 11 discriminator 6 view .LVU962
 3247 0126 0028     		cmp	r0, #0
 3248 0128 D1D1     		bne	.L222
1421:os/queue.c    ****             {
 3249              		.loc 1 1421 13 is_stmt 1 view .LVU963
1421:os/queue.c    ****             {
 3250              		.loc 1 1421 17 is_stmt 0 view .LVU964
 3251 012a 2046     		mov	r0, r4
 3252 012c FFF7FEFF 		bl	prvIsQueueEmpty
 3253              	.LVL250:
1421:os/queue.c    ****             {
 3254              		.loc 1 1421 15 view .LVU965
 3255 0130 0028     		cmp	r0, #0
 3256 0132 C6D0     		beq	.L223
1423:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 3257              		.loc 1 1423 58 is_stmt 1 view .LVU966
1424:os/queue.c    ****                 prvUnlockQueue( pxQueue );
 3258              		.loc 1 1424 17 view .LVU967
 3259 0134 0199     		ldr	r1, [sp, #4]
 3260 0136 04F12400 		add	r0, r4, #36
 3261 013a FFF7FEFF 		bl	vTaskPlaceOnEventList
 3262              	.LVL251:
1425:os/queue.c    **** 
 3263              		.loc 1 1425 17 view .LVU968
 3264 013e 2046     		mov	r0, r4
 3265 0140 FFF7FEFF 		bl	prvUnlockQueue
 3266              	.LVL252:
1427:os/queue.c    ****                 {
 3267              		.loc 1 1427 17 view .LVU969
1427:os/queue.c    ****                 {
 3268              		.loc 1 1427 21 is_stmt 0 view .LVU970
 3269 0144 FFF7FEFF 		bl	xTaskResumeAll
 3270              	.LVL253:
1427:os/queue.c    ****                 {
 3271              		.loc 1 1427 19 view .LVU971
 3272 0148 0028     		cmp	r0, #0
 3273 014a CAD1     		bne	.L214
1429:os/queue.c    ****                 }
 3274              		.loc 1 1429 21 is_stmt 1 view .LVU972
 3275 014c 054B     		ldr	r3, .L236
 3276 014e 4FF08052 		mov	r2, #268435456
 3277 0152 1A60     		str	r2, [r3]
1429:os/queue.c    ****                 }
 3278              		.loc 1 1429 21 view .LVU973
 3279              		.syntax unified
 3280              	@ 1429 "os/queue.c" 1
 3281 0154 BFF34F8F 		dsb
 3282              	@ 0 "" 2
1429:os/queue.c    ****                 }
 3283              		.loc 1 1429 21 view .LVU974
 3284              	@ 1429 "os/queue.c" 1
 3285 0158 BFF36F8F 		isb
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 120


 3286              	@ 0 "" 2
1429:os/queue.c    ****                 }
 3287              		.loc 1 1429 43 view .LVU975
 3288              		.thumb
 3289              		.syntax unified
 3290 015c C1E7     		b	.L214
 3291              	.L230:
1454:os/queue.c    ****             }
 3292              		.loc 1 1454 24 is_stmt 0 view .LVU976
 3293 015e 0020     		movs	r0, #0
 3294 0160 8DE7     		b	.L207
 3295              	.L237:
 3296 0162 00BF     		.align	2
 3297              	.L236:
 3298 0164 04ED00E0 		.word	-536810236
 3299              		.cfi_endproc
 3300              	.LFE20:
 3302              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 3303              		.align	1
 3304              		.global	xQueueSemaphoreTake
 3305              		.syntax unified
 3306              		.thumb
 3307              		.thumb_func
 3308              		.fpu fpv5-d16
 3310              	xQueueSemaphoreTake:
 3311              	.LVL254:
 3312              	.LFB21:
1467:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
 3313              		.loc 1 1467 1 is_stmt 1 view -0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 16
 3316              		@ frame_needed = 0, uses_anonymous_args = 0
1467:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
 3317              		.loc 1 1467 1 is_stmt 0 view .LVU978
 3318 0000 70B5     		push	{r4, r5, r6, lr}
 3319              	.LCFI40:
 3320              		.cfi_def_cfa_offset 16
 3321              		.cfi_offset 4, -16
 3322              		.cfi_offset 5, -12
 3323              		.cfi_offset 6, -8
 3324              		.cfi_offset 14, -4
 3325 0002 84B0     		sub	sp, sp, #16
 3326              	.LCFI41:
 3327              		.cfi_def_cfa_offset 32
 3328 0004 0191     		str	r1, [sp, #4]
1468:os/queue.c    ****     TimeOut_t xTimeOut;
 3329              		.loc 1 1468 5 is_stmt 1 view .LVU979
 3330              	.LVL255:
1469:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 3331              		.loc 1 1469 5 view .LVU980
1470:os/queue.c    **** 
 3332              		.loc 1 1470 5 view .LVU981
1473:os/queue.c    ****     #endif
 3333              		.loc 1 1473 9 view .LVU982
1477:os/queue.c    **** 
 3334              		.loc 1 1477 5 view .LVU983
 3335 0006 68B1     		cbz	r0, .L264
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 121


 3336 0008 0446     		mov	r4, r0
1477:os/queue.c    **** 
 3337              		.loc 1 1477 32 discriminator 2 view .LVU984
1481:os/queue.c    **** 
 3338              		.loc 1 1481 5 discriminator 2 view .LVU985
 3339 000a 036C     		ldr	r3, [r0, #64]
 3340 000c ABB1     		cbz	r3, .L241
1481:os/queue.c    **** 
 3341              		.loc 1 1481 5 view .LVU986
 3342              	.LBB221:
 3343              	.LBI221:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3344              		.loc 2 193 34 view .LVU987
 3345              	.LBB222:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3346              		.loc 2 195 9 view .LVU988
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3347              		.loc 2 197 9 view .LVU989
 3348              		.syntax unified
 3349              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3350 000e 4FF05003 			mov r3, #80												
 3351 0012 72B6     		cpsid i													
 3352 0014 83F31188 		msr basepri, r3											
 3353 0018 BFF36F8F 		isb														
 3354 001c BFF34F8F 		dsb														
 3355 0020 62B6     		cpsie i													
 3356              	
 3357              	@ 0 "" 2
 3358              	.LVL256:
 3359              		.thumb
 3360              		.syntax unified
 3361              	.L242:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3362              		.loc 2 197 9 is_stmt 0 view .LVU990
 3363              	.LBE222:
 3364              	.LBE221:
1481:os/queue.c    **** 
 3365              		.loc 1 1481 5 is_stmt 1 discriminator 2 view .LVU991
1481:os/queue.c    **** 
 3366              		.loc 1 1481 5 discriminator 2 view .LVU992
1481:os/queue.c    **** 
 3367              		.loc 1 1481 5 discriminator 2 view .LVU993
 3368 0022 FEE7     		b	.L242
 3369              	.L264:
1477:os/queue.c    **** 
 3370              		.loc 1 1477 5 view .LVU994
 3371              	.LBB223:
 3372              	.LBI223:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3373              		.loc 2 193 34 view .LVU995
 3374              	.LBB224:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3375              		.loc 2 195 9 view .LVU996
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3376              		.loc 2 197 9 view .LVU997
 3377              		.syntax unified
 3378              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 122


 3379 0024 4FF05003 			mov r3, #80												
 3380 0028 72B6     		cpsid i													
 3381 002a 83F31188 		msr basepri, r3											
 3382 002e BFF36F8F 		isb														
 3383 0032 BFF34F8F 		dsb														
 3384 0036 62B6     		cpsie i													
 3385              	
 3386              	@ 0 "" 2
 3387              	.LVL257:
 3388              		.thumb
 3389              		.syntax unified
 3390              	.L240:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3391              		.loc 2 197 9 is_stmt 0 view .LVU998
 3392              	.LBE224:
 3393              	.LBE223:
1477:os/queue.c    **** 
 3394              		.loc 1 1477 5 is_stmt 1 discriminator 1 view .LVU999
1477:os/queue.c    **** 
 3395              		.loc 1 1477 5 discriminator 1 view .LVU1000
1477:os/queue.c    **** 
 3396              		.loc 1 1477 5 discriminator 1 view .LVU1001
 3397 0038 FEE7     		b	.L240
 3398              	.L241:
1481:os/queue.c    **** 
 3399              		.loc 1 1481 45 discriminator 2 view .LVU1002
1486:os/queue.c    ****         }
 3400              		.loc 1 1486 13 discriminator 2 view .LVU1003
 3401 003a FFF7FEFF 		bl	xTaskGetSchedulerState
 3402              	.LVL258:
1486:os/queue.c    ****         }
 3403              		.loc 1 1486 13 is_stmt 0 discriminator 2 view .LVU1004
 3404 003e 0646     		mov	r6, r0
 3405 0040 60B9     		cbnz	r0, .L261
 3406 0042 019B     		ldr	r3, [sp, #4]
 3407 0044 6BB1     		cbz	r3, .L262
1486:os/queue.c    ****         }
 3408              		.loc 1 1486 13 is_stmt 1 view .LVU1005
 3409              	.LBB225:
 3410              	.LBI225:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3411              		.loc 2 193 34 view .LVU1006
 3412              	.LBB226:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3413              		.loc 2 195 9 view .LVU1007
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3414              		.loc 2 197 9 view .LVU1008
 3415              		.syntax unified
 3416              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3417 0046 4FF05003 			mov r3, #80												
 3418 004a 72B6     		cpsid i													
 3419 004c 83F31188 		msr basepri, r3											
 3420 0050 BFF36F8F 		isb														
 3421 0054 BFF34F8F 		dsb														
 3422 0058 62B6     		cpsie i													
 3423              	
 3424              	@ 0 "" 2
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 123


 3425              	.LVL259:
 3426              		.thumb
 3427              		.syntax unified
 3428              	.L244:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3429              		.loc 2 197 9 is_stmt 0 view .LVU1009
 3430              	.LBE226:
 3431              	.LBE225:
1486:os/queue.c    ****         }
 3432              		.loc 1 1486 13 is_stmt 1 discriminator 3 view .LVU1010
1486:os/queue.c    ****         }
 3433              		.loc 1 1486 13 discriminator 3 view .LVU1011
1486:os/queue.c    ****         }
 3434              		.loc 1 1486 13 discriminator 3 view .LVU1012
 3435 005a FEE7     		b	.L244
 3436              	.L261:
 3437 005c 0025     		movs	r5, #0
 3438 005e 2E46     		mov	r6, r5
 3439 0060 55E0     		b	.L245
 3440              	.L262:
 3441 0062 0546     		mov	r5, r0
 3442 0064 53E0     		b	.L245
 3443              	.LVL260:
 3444              	.L268:
 3445              	.LBB227:
1505:os/queue.c    **** 
 3446              		.loc 1 1505 46 view .LVU1013
1509:os/queue.c    **** 
 3447              		.loc 1 1509 17 view .LVU1014
1509:os/queue.c    **** 
 3448              		.loc 1 1509 63 is_stmt 0 view .LVU1015
 3449 0066 013B     		subs	r3, r3, #1
 3450              	.LVL261:
1509:os/queue.c    **** 
 3451              		.loc 1 1509 44 view .LVU1016
 3452 0068 A363     		str	r3, [r4, #56]
1513:os/queue.c    ****                         {
 3453              		.loc 1 1513 25 is_stmt 1 view .LVU1017
1513:os/queue.c    ****                         {
 3454              		.loc 1 1513 36 is_stmt 0 view .LVU1018
 3455 006a 2368     		ldr	r3, [r4]
 3456              	.LVL262:
1513:os/queue.c    ****                         {
 3457              		.loc 1 1513 27 view .LVU1019
 3458 006c 3BB1     		cbz	r3, .L265
 3459              	.LVL263:
 3460              	.L247:
1521:os/queue.c    ****                         }
 3461              		.loc 1 1521 53 is_stmt 1 view .LVU1020
1528:os/queue.c    ****                 {
 3462              		.loc 1 1528 17 view .LVU1021
1528:os/queue.c    ****                 {
 3463              		.loc 1 1528 21 is_stmt 0 view .LVU1022
 3464 006e 2369     		ldr	r3, [r4, #16]
1528:os/queue.c    ****                 {
 3465              		.loc 1 1528 19 view .LVU1023
 3466 0070 4BB9     		cbnz	r3, .L266
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 124


 3467              	.L248:
1541:os/queue.c    ****                 }
 3468              		.loc 1 1541 45 is_stmt 1 view .LVU1024
1544:os/queue.c    ****                 return pdPASS;
 3469              		.loc 1 1544 17 view .LVU1025
 3470 0072 FFF7FEFF 		bl	vPortExitCritical
 3471              	.LVL264:
1545:os/queue.c    ****             }
 3472              		.loc 1 1545 17 view .LVU1026
1545:os/queue.c    ****             }
 3473              		.loc 1 1545 24 is_stmt 0 view .LVU1027
 3474 0076 0125     		movs	r5, #1
 3475              	.LVL265:
 3476              	.L238:
1545:os/queue.c    ****             }
 3477              		.loc 1 1545 24 view .LVU1028
 3478              	.LBE227:
1681:os/queue.c    **** /*-----------------------------------------------------------*/
 3479              		.loc 1 1681 1 view .LVU1029
 3480 0078 2846     		mov	r0, r5
 3481 007a 04B0     		add	sp, sp, #16
 3482              	.LCFI42:
 3483              		.cfi_remember_state
 3484              		.cfi_def_cfa_offset 16
 3485              		@ sp needed
 3486 007c 70BD     		pop	{r4, r5, r6, pc}
 3487              	.LVL266:
 3488              	.L265:
 3489              	.LCFI43:
 3490              		.cfi_restore_state
 3491              	.LBB230:
1517:os/queue.c    ****                         }
 3492              		.loc 1 1517 29 is_stmt 1 view .LVU1030
1517:os/queue.c    ****                         }
 3493              		.loc 1 1517 66 is_stmt 0 view .LVU1031
 3494 007e FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 3495              	.LVL267:
1517:os/queue.c    ****                         }
 3496              		.loc 1 1517 64 view .LVU1032
 3497 0082 A060     		str	r0, [r4, #8]
 3498 0084 F3E7     		b	.L247
 3499              	.L266:
1530:os/queue.c    ****                     {
 3500              		.loc 1 1530 21 is_stmt 1 view .LVU1033
1530:os/queue.c    ****                     {
 3501              		.loc 1 1530 25 is_stmt 0 view .LVU1034
 3502 0086 04F11000 		add	r0, r4, #16
 3503 008a FFF7FEFF 		bl	xTaskRemoveFromEventList
 3504              	.LVL268:
1530:os/queue.c    ****                     {
 3505              		.loc 1 1530 23 view .LVU1035
 3506 008e 0028     		cmp	r0, #0
 3507 0090 EFD0     		beq	.L248
1532:os/queue.c    ****                     }
 3508              		.loc 1 1532 25 is_stmt 1 view .LVU1036
 3509 0092 474B     		ldr	r3, .L275
 3510 0094 4FF08052 		mov	r2, #268435456
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 125


 3511 0098 1A60     		str	r2, [r3]
1532:os/queue.c    ****                     }
 3512              		.loc 1 1532 25 view .LVU1037
 3513              		.syntax unified
 3514              	@ 1532 "os/queue.c" 1
 3515 009a BFF34F8F 		dsb
 3516              	@ 0 "" 2
1532:os/queue.c    ****                     }
 3517              		.loc 1 1532 25 view .LVU1038
 3518              	@ 1532 "os/queue.c" 1
 3519 009e BFF36F8F 		isb
 3520              	@ 0 "" 2
1532:os/queue.c    ****                     }
 3521              		.loc 1 1532 57 view .LVU1039
 3522              		.thumb
 3523              		.syntax unified
 3524 00a2 E6E7     		b	.L248
 3525              	.L269:
1556:os/queue.c    ****                         }
 3526              		.loc 1 1556 29 view .LVU1040
 3527 00a4 55B1     		cbz	r5, .L251
1556:os/queue.c    ****                         }
 3528              		.loc 1 1556 29 view .LVU1041
 3529              	.LBB228:
 3530              	.LBI228:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3531              		.loc 2 193 34 view .LVU1042
 3532              	.LBB229:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3533              		.loc 2 195 9 view .LVU1043
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3534              		.loc 2 197 9 view .LVU1044
 3535              		.syntax unified
 3536              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3537 00a6 4FF05003 			mov r3, #80												
 3538 00aa 72B6     		cpsid i													
 3539 00ac 83F31188 		msr basepri, r3											
 3540 00b0 BFF36F8F 		isb														
 3541 00b4 BFF34F8F 		dsb														
 3542 00b8 62B6     		cpsie i													
 3543              	
 3544              	@ 0 "" 2
 3545              	.LVL269:
 3546              		.thumb
 3547              		.syntax unified
 3548              	.L252:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3549              		.loc 2 197 9 is_stmt 0 view .LVU1045
 3550              	.LBE229:
 3551              	.LBE228:
1556:os/queue.c    ****                         }
 3552              		.loc 1 1556 29 is_stmt 1 discriminator 4 view .LVU1046
1556:os/queue.c    ****                         }
 3553              		.loc 1 1556 29 discriminator 4 view .LVU1047
1556:os/queue.c    ****                         }
 3554              		.loc 1 1556 29 discriminator 4 view .LVU1048
 3555 00ba FEE7     		b	.L252
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 126


 3556              	.L251:
1556:os/queue.c    ****                         }
 3557              		.loc 1 1556 76 discriminator 2 view .LVU1049
1562:os/queue.c    ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
 3558              		.loc 1 1562 21 discriminator 2 view .LVU1050
 3559 00bc FFF7FEFF 		bl	vPortExitCritical
 3560              	.LVL270:
1563:os/queue.c    ****                     return errQUEUE_EMPTY;
 3561              		.loc 1 1563 57 discriminator 2 view .LVU1051
1564:os/queue.c    ****                 }
 3562              		.loc 1 1564 21 discriminator 2 view .LVU1052
1564:os/queue.c    ****                 }
 3563              		.loc 1 1564 28 is_stmt 0 discriminator 2 view .LVU1053
 3564 00c0 DAE7     		b	.L238
 3565              	.L270:
1570:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
 3566              		.loc 1 1570 21 is_stmt 1 view .LVU1054
 3567 00c2 02A8     		add	r0, sp, #8
 3568 00c4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3569              	.LVL271:
1571:os/queue.c    ****                 }
 3570              		.loc 1 1571 21 view .LVU1055
1571:os/queue.c    ****                 }
 3571              		.loc 1 1571 35 is_stmt 0 view .LVU1056
 3572 00c8 0126     		movs	r6, #1
 3573 00ca 2AE0     		b	.L253
 3574              	.LVL272:
 3575              	.L271:
1571:os/queue.c    ****                 }
 3576              		.loc 1 1571 35 view .LVU1057
 3577              	.LBE230:
1586:os/queue.c    **** 
 3578              		.loc 1 1586 9 is_stmt 1 discriminator 1 view .LVU1058
 3579 00cc 0023     		movs	r3, #0
 3580 00ce 84F84430 		strb	r3, [r4, #68]
 3581 00d2 32E0     		b	.L254
 3582              	.L272:
1586:os/queue.c    **** 
 3583              		.loc 1 1586 9 discriminator 4 view .LVU1059
 3584 00d4 0023     		movs	r3, #0
 3585 00d6 84F84530 		strb	r3, [r4, #69]
 3586 00da 34E0     		b	.L255
 3587              	.L273:
1603:os/queue.c    ****                             {
 3588              		.loc 1 1603 29 view .LVU1060
 3589 00dc FFF7FEFF 		bl	vPortEnterCritical
 3590              	.LVL273:
1605:os/queue.c    ****                             }
 3591              		.loc 1 1605 33 view .LVU1061
1605:os/queue.c    ****                             }
 3592              		.loc 1 1605 56 is_stmt 0 view .LVU1062
 3593 00e0 A068     		ldr	r0, [r4, #8]
 3594 00e2 FFF7FEFF 		bl	xTaskPriorityInherit
 3595              	.LVL274:
 3596 00e6 0546     		mov	r5, r0
 3597              	.LVL275:
1607:os/queue.c    ****                         }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 127


 3598              		.loc 1 1607 29 is_stmt 1 view .LVU1063
 3599 00e8 FFF7FEFF 		bl	vPortExitCritical
 3600              	.LVL276:
1607:os/queue.c    ****                         }
 3601              		.loc 1 1607 29 is_stmt 0 view .LVU1064
 3602 00ec 3BE0     		b	.L258
 3603              	.L257:
1632:os/queue.c    ****                 ( void ) xTaskResumeAll();
 3604              		.loc 1 1632 17 is_stmt 1 view .LVU1065
 3605 00ee 2046     		mov	r0, r4
 3606 00f0 FFF7FEFF 		bl	prvUnlockQueue
 3607              	.LVL277:
1633:os/queue.c    ****             }
 3608              		.loc 1 1633 17 view .LVU1066
1633:os/queue.c    ****             }
 3609              		.loc 1 1633 26 is_stmt 0 view .LVU1067
 3610 00f4 FFF7FEFF 		bl	xTaskResumeAll
 3611              	.LVL278:
 3612 00f8 09E0     		b	.L245
 3613              	.L256:
1639:os/queue.c    ****             ( void ) xTaskResumeAll();
 3614              		.loc 1 1639 13 is_stmt 1 view .LVU1068
 3615 00fa 2046     		mov	r0, r4
 3616 00fc FFF7FEFF 		bl	prvUnlockQueue
 3617              	.LVL279:
1640:os/queue.c    **** 
 3618              		.loc 1 1640 13 view .LVU1069
1640:os/queue.c    **** 
 3619              		.loc 1 1640 22 is_stmt 0 view .LVU1070
 3620 0100 FFF7FEFF 		bl	xTaskResumeAll
 3621              	.LVL280:
1646:os/queue.c    ****             {
 3622              		.loc 1 1646 13 is_stmt 1 view .LVU1071
1646:os/queue.c    ****             {
 3623              		.loc 1 1646 17 is_stmt 0 view .LVU1072
 3624 0104 2046     		mov	r0, r4
 3625 0106 FFF7FEFF 		bl	prvIsQueueEmpty
 3626              	.LVL281:
1646:os/queue.c    ****             {
 3627              		.loc 1 1646 15 view .LVU1073
 3628 010a 0028     		cmp	r0, #0
 3629 010c 40D1     		bne	.L267
 3630              	.LVL282:
 3631              	.L245:
1486:os/queue.c    ****         }
 3632              		.loc 1 1486 114 is_stmt 1 discriminator 8 view .LVU1074
1493:os/queue.c    ****     {
 3633              		.loc 1 1493 5 discriminator 8 view .LVU1075
1495:os/queue.c    ****         {
 3634              		.loc 1 1495 9 discriminator 8 view .LVU1076
 3635 010e FFF7FEFF 		bl	vPortEnterCritical
 3636              	.LVL283:
 3637              	.LBB231:
1499:os/queue.c    **** 
 3638              		.loc 1 1499 13 discriminator 8 view .LVU1077
1499:os/queue.c    **** 
 3639              		.loc 1 1499 31 is_stmt 0 discriminator 8 view .LVU1078
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 128


 3640 0112 A36B     		ldr	r3, [r4, #56]
 3641              	.LVL284:
1503:os/queue.c    ****             {
 3642              		.loc 1 1503 13 is_stmt 1 discriminator 8 view .LVU1079
1503:os/queue.c    ****             {
 3643              		.loc 1 1503 15 is_stmt 0 discriminator 8 view .LVU1080
 3644 0114 002B     		cmp	r3, #0
 3645 0116 A6D1     		bne	.L268
1549:os/queue.c    ****                 {
 3646              		.loc 1 1549 17 is_stmt 1 view .LVU1081
1549:os/queue.c    ****                 {
 3647              		.loc 1 1549 34 is_stmt 0 view .LVU1082
 3648 0118 019B     		ldr	r3, [sp, #4]
 3649              	.LVL285:
1549:os/queue.c    ****                 {
 3650              		.loc 1 1549 19 view .LVU1083
 3651 011a 002B     		cmp	r3, #0
 3652 011c C2D0     		beq	.L269
1566:os/queue.c    ****                 {
 3653              		.loc 1 1566 22 is_stmt 1 view .LVU1084
1566:os/queue.c    ****                 {
 3654              		.loc 1 1566 24 is_stmt 0 view .LVU1085
 3655 011e 002E     		cmp	r6, #0
 3656 0120 CFD0     		beq	.L270
 3657              	.LVL286:
 3658              	.L253:
1576:os/queue.c    ****                 }
 3659              		.loc 1 1576 45 is_stmt 1 view .LVU1086
 3660              	.LBE231:
1580:os/queue.c    **** 
 3661              		.loc 1 1580 9 view .LVU1087
 3662 0122 FFF7FEFF 		bl	vPortExitCritical
 3663              	.LVL287:
1585:os/queue.c    ****         prvLockQueue( pxQueue );
 3664              		.loc 1 1585 9 view .LVU1088
 3665 0126 FFF7FEFF 		bl	vTaskSuspendAll
 3666              	.LVL288:
1586:os/queue.c    **** 
 3667              		.loc 1 1586 9 view .LVU1089
 3668 012a FFF7FEFF 		bl	vPortEnterCritical
 3669              	.LVL289:
1586:os/queue.c    **** 
 3670              		.loc 1 1586 9 view .LVU1090
 3671 012e 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3672 0132 5BB2     		sxtb	r3, r3
 3673 0134 B3F1FF3F 		cmp	r3, #-1
 3674 0138 C8D0     		beq	.L271
 3675              	.L254:
1586:os/queue.c    **** 
 3676              		.loc 1 1586 9 discriminator 3 view .LVU1091
 3677 013a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3678 013e 5BB2     		sxtb	r3, r3
 3679 0140 B3F1FF3F 		cmp	r3, #-1
 3680 0144 C6D0     		beq	.L272
 3681              	.L255:
1586:os/queue.c    **** 
 3682              		.loc 1 1586 9 discriminator 6 view .LVU1092
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 129


 3683 0146 FFF7FEFF 		bl	vPortExitCritical
 3684              	.LVL290:
1589:os/queue.c    ****         {
 3685              		.loc 1 1589 9 discriminator 6 view .LVU1093
1589:os/queue.c    ****         {
 3686              		.loc 1 1589 13 is_stmt 0 discriminator 6 view .LVU1094
 3687 014a 01A9     		add	r1, sp, #4
 3688 014c 02A8     		add	r0, sp, #8
 3689 014e FFF7FEFF 		bl	xTaskCheckForTimeOut
 3690              	.LVL291:
1589:os/queue.c    ****         {
 3691              		.loc 1 1589 11 discriminator 6 view .LVU1095
 3692 0152 0028     		cmp	r0, #0
 3693 0154 D1D1     		bne	.L256
1595:os/queue.c    ****             {
 3694              		.loc 1 1595 13 is_stmt 1 view .LVU1096
1595:os/queue.c    ****             {
 3695              		.loc 1 1595 17 is_stmt 0 view .LVU1097
 3696 0156 2046     		mov	r0, r4
 3697 0158 FFF7FEFF 		bl	prvIsQueueEmpty
 3698              	.LVL292:
1595:os/queue.c    ****             {
 3699              		.loc 1 1595 15 view .LVU1098
 3700 015c 0028     		cmp	r0, #0
 3701 015e C6D0     		beq	.L257
1597:os/queue.c    **** 
 3702              		.loc 1 1597 58 is_stmt 1 view .LVU1099
1601:os/queue.c    ****                         {
 3703              		.loc 1 1601 25 view .LVU1100
1601:os/queue.c    ****                         {
 3704              		.loc 1 1601 36 is_stmt 0 view .LVU1101
 3705 0160 2368     		ldr	r3, [r4]
1601:os/queue.c    ****                         {
 3706              		.loc 1 1601 27 view .LVU1102
 3707 0162 002B     		cmp	r3, #0
 3708 0164 BAD0     		beq	.L273
 3709              	.L258:
1611:os/queue.c    ****                         }
 3710              		.loc 1 1611 53 is_stmt 1 view .LVU1103
1616:os/queue.c    ****                 prvUnlockQueue( pxQueue );
 3711              		.loc 1 1616 17 view .LVU1104
 3712 0166 0199     		ldr	r1, [sp, #4]
 3713 0168 04F12400 		add	r0, r4, #36
 3714 016c FFF7FEFF 		bl	vTaskPlaceOnEventList
 3715              	.LVL293:
1617:os/queue.c    **** 
 3716              		.loc 1 1617 17 view .LVU1105
 3717 0170 2046     		mov	r0, r4
 3718 0172 FFF7FEFF 		bl	prvUnlockQueue
 3719              	.LVL294:
1619:os/queue.c    ****                 {
 3720              		.loc 1 1619 17 view .LVU1106
1619:os/queue.c    ****                 {
 3721              		.loc 1 1619 21 is_stmt 0 view .LVU1107
 3722 0176 FFF7FEFF 		bl	xTaskResumeAll
 3723              	.LVL295:
1619:os/queue.c    ****                 {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 130


 3724              		.loc 1 1619 19 view .LVU1108
 3725 017a 0028     		cmp	r0, #0
 3726 017c C7D1     		bne	.L245
1621:os/queue.c    ****                 }
 3727              		.loc 1 1621 21 is_stmt 1 view .LVU1109
 3728 017e 0C4B     		ldr	r3, .L275
 3729 0180 4FF08052 		mov	r2, #268435456
 3730 0184 1A60     		str	r2, [r3]
1621:os/queue.c    ****                 }
 3731              		.loc 1 1621 21 view .LVU1110
 3732              		.syntax unified
 3733              	@ 1621 "os/queue.c" 1
 3734 0186 BFF34F8F 		dsb
 3735              	@ 0 "" 2
1621:os/queue.c    ****                 }
 3736              		.loc 1 1621 21 view .LVU1111
 3737              	@ 1621 "os/queue.c" 1
 3738 018a BFF36F8F 		isb
 3739              	@ 0 "" 2
1621:os/queue.c    ****                 }
 3740              		.loc 1 1621 43 view .LVU1112
 3741              		.thumb
 3742              		.syntax unified
 3743 018e BEE7     		b	.L245
 3744              	.L267:
1653:os/queue.c    ****                         {
 3745              		.loc 1 1653 25 view .LVU1113
1653:os/queue.c    ****                         {
 3746              		.loc 1 1653 27 is_stmt 0 view .LVU1114
 3747 0190 0DB9     		cbnz	r5, .L274
 3748              	.L260:
1672:os/queue.c    ****                 return errQUEUE_EMPTY;
 3749              		.loc 1 1672 53 is_stmt 1 view .LVU1115
1673:os/queue.c    ****             }
 3750              		.loc 1 1673 17 view .LVU1116
1673:os/queue.c    ****             }
 3751              		.loc 1 1673 24 is_stmt 0 view .LVU1117
 3752 0192 0025     		movs	r5, #0
 3753              	.LVL296:
1673:os/queue.c    ****             }
 3754              		.loc 1 1673 24 view .LVU1118
 3755 0194 70E7     		b	.L238
 3756              	.LVL297:
 3757              	.L274:
1655:os/queue.c    ****                             {
 3758              		.loc 1 1655 29 is_stmt 1 view .LVU1119
 3759 0196 FFF7FEFF 		bl	vPortEnterCritical
 3760              	.LVL298:
 3761              	.LBB232:
1657:os/queue.c    **** 
 3762              		.loc 1 1657 33 view .LVU1120
1664:os/queue.c    ****                                 vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHo
 3763              		.loc 1 1664 33 view .LVU1121
1664:os/queue.c    ****                                 vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHo
 3764              		.loc 1 1664 60 is_stmt 0 view .LVU1122
 3765 019a 2046     		mov	r0, r4
 3766 019c FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 131


 3767              	.LVL299:
 3768 01a0 0146     		mov	r1, r0
 3769              	.LVL300:
1665:os/queue.c    ****                             }
 3770              		.loc 1 1665 33 is_stmt 1 view .LVU1123
 3771 01a2 A068     		ldr	r0, [r4, #8]
 3772              	.LVL301:
1665:os/queue.c    ****                             }
 3773              		.loc 1 1665 33 is_stmt 0 view .LVU1124
 3774 01a4 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 3775              	.LVL302:
1665:os/queue.c    ****                             }
 3776              		.loc 1 1665 33 view .LVU1125
 3777              	.LBE232:
1667:os/queue.c    ****                         }
 3778              		.loc 1 1667 29 is_stmt 1 view .LVU1126
 3779 01a8 FFF7FEFF 		bl	vPortExitCritical
 3780              	.LVL303:
 3781 01ac F1E7     		b	.L260
 3782              	.L276:
 3783 01ae 00BF     		.align	2
 3784              	.L275:
 3785 01b0 04ED00E0 		.word	-536810236
 3786              		.cfi_endproc
 3787              	.LFE21:
 3789              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 3790              		.align	1
 3791              		.global	xQueueTakeMutexRecursive
 3792              		.syntax unified
 3793              		.thumb
 3794              		.thumb_func
 3795              		.fpu fpv5-d16
 3797              	xQueueTakeMutexRecursive:
 3798              	.LVL304:
 3799              	.LFB14:
 677:os/queue.c    ****         BaseType_t xReturn;
 3800              		.loc 1 677 5 view -0
 3801              		.cfi_startproc
 3802              		@ args = 0, pretend = 0, frame = 0
 3803              		@ frame_needed = 0, uses_anonymous_args = 0
 678:os/queue.c    ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 3804              		.loc 1 678 9 view .LVU1128
 679:os/queue.c    **** 
 3805              		.loc 1 679 9 view .LVU1129
 681:os/queue.c    **** 
 3806              		.loc 1 681 9 view .LVU1130
 3807 0000 88B1     		cbz	r0, .L284
 677:os/queue.c    ****         BaseType_t xReturn;
 3808              		.loc 1 677 5 is_stmt 0 discriminator 2 view .LVU1131
 3809 0002 70B5     		push	{r4, r5, r6, lr}
 3810              	.LCFI44:
 3811              		.cfi_def_cfa_offset 16
 3812              		.cfi_offset 4, -16
 3813              		.cfi_offset 5, -12
 3814              		.cfi_offset 6, -8
 3815              		.cfi_offset 14, -4
 3816 0004 0D46     		mov	r5, r1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 132


 3817 0006 0446     		mov	r4, r0
 681:os/queue.c    **** 
 3818              		.loc 1 681 32 is_stmt 1 discriminator 2 view .LVU1132
 686:os/queue.c    **** 
 3819              		.loc 1 686 45 discriminator 2 view .LVU1133
 688:os/queue.c    ****         {
 3820              		.loc 1 688 9 discriminator 2 view .LVU1134
 688:os/queue.c    ****         {
 3821              		.loc 1 688 34 is_stmt 0 discriminator 2 view .LVU1135
 3822 0008 8668     		ldr	r6, [r0, #8]
 688:os/queue.c    ****         {
 3823              		.loc 1 688 51 discriminator 2 view .LVU1136
 3824 000a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 3825              	.LVL305:
 688:os/queue.c    ****         {
 3826              		.loc 1 688 11 discriminator 2 view .LVU1137
 3827 000e 8642     		cmp	r6, r0
 3828 0010 14D0     		beq	.L285
 695:os/queue.c    **** 
 3829              		.loc 1 695 13 is_stmt 1 view .LVU1138
 695:os/queue.c    **** 
 3830              		.loc 1 695 23 is_stmt 0 view .LVU1139
 3831 0012 2946     		mov	r1, r5
 3832 0014 2046     		mov	r0, r4
 3833 0016 FFF7FEFF 		bl	xQueueSemaphoreTake
 3834              	.LVL306:
 700:os/queue.c    ****             {
 3835              		.loc 1 700 13 is_stmt 1 view .LVU1140
 700:os/queue.c    ****             {
 3836              		.loc 1 700 15 is_stmt 0 view .LVU1141
 3837 001a 0246     		mov	r2, r0
 3838 001c 90B1     		cbz	r0, .L277
 702:os/queue.c    ****             }
 3839              		.loc 1 702 17 is_stmt 1 view .LVU1142
 702:os/queue.c    ****             }
 3840              		.loc 1 702 40 is_stmt 0 view .LVU1143
 3841 001e E368     		ldr	r3, [r4, #12]
 702:os/queue.c    ****             }
 3842              		.loc 1 702 63 view .LVU1144
 3843 0020 0133     		adds	r3, r3, #1
 3844 0022 E360     		str	r3, [r4, #12]
 706:os/queue.c    ****             }
 3845              		.loc 1 706 60 is_stmt 1 view .LVU1145
 710:os/queue.c    ****     }
 3846              		.loc 1 710 9 view .LVU1146
 710:os/queue.c    ****     }
 3847              		.loc 1 710 16 is_stmt 0 view .LVU1147
 3848 0024 0EE0     		b	.L277
 3849              	.LVL307:
 3850              	.L284:
 3851              	.LCFI45:
 3852              		.cfi_def_cfa_offset 0
 3853              		.cfi_restore 4
 3854              		.cfi_restore 5
 3855              		.cfi_restore 6
 3856              		.cfi_restore 14
 681:os/queue.c    **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 133


 3857              		.loc 1 681 9 is_stmt 1 view .LVU1148
 3858              	.LBB233:
 3859              	.LBI233:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3860              		.loc 2 193 34 view .LVU1149
 3861              	.LBB234:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3862              		.loc 2 195 9 view .LVU1150
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3863              		.loc 2 197 9 view .LVU1151
 3864              		.syntax unified
 3865              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3866 0026 4FF05003 			mov r3, #80												
 3867 002a 72B6     		cpsid i													
 3868 002c 83F31188 		msr basepri, r3											
 3869 0030 BFF36F8F 		isb														
 3870 0034 BFF34F8F 		dsb														
 3871 0038 62B6     		cpsie i													
 3872              	
 3873              	@ 0 "" 2
 3874              	.LVL308:
 3875              		.thumb
 3876              		.syntax unified
 3877              	.L279:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3878              		.loc 2 197 9 is_stmt 0 view .LVU1152
 3879              	.LBE234:
 3880              	.LBE233:
 681:os/queue.c    **** 
 3881              		.loc 1 681 9 is_stmt 1 discriminator 1 view .LVU1153
 681:os/queue.c    **** 
 3882              		.loc 1 681 9 discriminator 1 view .LVU1154
 681:os/queue.c    **** 
 3883              		.loc 1 681 9 discriminator 1 view .LVU1155
 3884 003a FEE7     		b	.L279
 3885              	.LVL309:
 3886              	.L285:
 3887              	.LCFI46:
 3888              		.cfi_def_cfa_offset 16
 3889              		.cfi_offset 4, -16
 3890              		.cfi_offset 5, -12
 3891              		.cfi_offset 6, -8
 3892              		.cfi_offset 14, -4
 690:os/queue.c    ****             xReturn = pdPASS;
 3893              		.loc 1 690 13 view .LVU1156
 690:os/queue.c    ****             xReturn = pdPASS;
 3894              		.loc 1 690 36 is_stmt 0 view .LVU1157
 3895 003c E368     		ldr	r3, [r4, #12]
 690:os/queue.c    ****             xReturn = pdPASS;
 3896              		.loc 1 690 59 view .LVU1158
 3897 003e 0133     		adds	r3, r3, #1
 3898 0040 E360     		str	r3, [r4, #12]
 691:os/queue.c    ****         }
 3899              		.loc 1 691 13 is_stmt 1 view .LVU1159
 3900              	.LVL310:
 691:os/queue.c    ****         }
 3901              		.loc 1 691 21 is_stmt 0 view .LVU1160
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 134


 3902 0042 0122     		movs	r2, #1
 3903              	.LVL311:
 3904              	.L277:
 711:os/queue.c    **** 
 3905              		.loc 1 711 5 view .LVU1161
 3906 0044 1046     		mov	r0, r2
 3907 0046 70BD     		pop	{r4, r5, r6, pc}
 711:os/queue.c    **** 
 3908              		.loc 1 711 5 view .LVU1162
 3909              		.cfi_endproc
 3910              	.LFE14:
 3912              		.section	.text.xQueuePeek,"ax",%progbits
 3913              		.align	1
 3914              		.global	xQueuePeek
 3915              		.syntax unified
 3916              		.thumb
 3917              		.thumb_func
 3918              		.fpu fpv5-d16
 3920              	xQueuePeek:
 3921              	.LVL312:
 3922              	.LFB22:
1687:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
 3923              		.loc 1 1687 1 is_stmt 1 view -0
 3924              		.cfi_startproc
 3925              		@ args = 0, pretend = 0, frame = 16
 3926              		@ frame_needed = 0, uses_anonymous_args = 0
1687:os/queue.c    ****     BaseType_t xEntryTimeSet = pdFALSE;
 3927              		.loc 1 1687 1 is_stmt 0 view .LVU1164
 3928 0000 70B5     		push	{r4, r5, r6, lr}
 3929              	.LCFI47:
 3930              		.cfi_def_cfa_offset 16
 3931              		.cfi_offset 4, -16
 3932              		.cfi_offset 5, -12
 3933              		.cfi_offset 6, -8
 3934              		.cfi_offset 14, -4
 3935 0002 84B0     		sub	sp, sp, #16
 3936              	.LCFI48:
 3937              		.cfi_def_cfa_offset 32
 3938 0004 0192     		str	r2, [sp, #4]
1688:os/queue.c    ****     TimeOut_t xTimeOut;
 3939              		.loc 1 1688 5 is_stmt 1 view .LVU1165
 3940              	.LVL313:
1689:os/queue.c    ****     int8_t * pcOriginalReadPosition;
 3941              		.loc 1 1689 5 view .LVU1166
1690:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 3942              		.loc 1 1690 5 view .LVU1167
1691:os/queue.c    **** 
 3943              		.loc 1 1691 5 view .LVU1168
1694:os/queue.c    **** 
 3944              		.loc 1 1694 5 view .LVU1169
 3945 0006 A0B1     		cbz	r0, .L306
 3946 0008 0D46     		mov	r5, r1
 3947 000a 0446     		mov	r4, r0
1694:os/queue.c    **** 
 3948              		.loc 1 1694 32 discriminator 2 view .LVU1170
1698:os/queue.c    **** 
 3949              		.loc 1 1698 5 discriminator 2 view .LVU1171
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 135


 3950 000c E1B1     		cbz	r1, .L307
 3951              	.L289:
1698:os/queue.c    **** 
 3952              		.loc 1 1698 103 discriminator 8 view .LVU1172
1703:os/queue.c    ****         }
 3953              		.loc 1 1703 13 discriminator 8 view .LVU1173
 3954 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 3955              	.LVL314:
1703:os/queue.c    ****         }
 3956              		.loc 1 1703 13 is_stmt 0 discriminator 8 view .LVU1174
 3957 0012 0646     		mov	r6, r0
 3958 0014 30BB     		cbnz	r0, .L304
1703:os/queue.c    ****         }
 3959              		.loc 1 1703 13 discriminator 2 view .LVU1175
 3960 0016 019B     		ldr	r3, [sp, #4]
 3961 0018 002B     		cmp	r3, #0
 3962 001a 62D0     		beq	.L293
1703:os/queue.c    ****         }
 3963              		.loc 1 1703 13 is_stmt 1 view .LVU1176
 3964              	.LBB235:
 3965              	.LBI235:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3966              		.loc 2 193 34 view .LVU1177
 3967              	.LBB236:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3968              		.loc 2 195 9 view .LVU1178
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3969              		.loc 2 197 9 view .LVU1179
 3970              		.syntax unified
 3971              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3972 001c 4FF05003 			mov r3, #80												
 3973 0020 72B6     		cpsid i													
 3974 0022 83F31188 		msr basepri, r3											
 3975 0026 BFF36F8F 		isb														
 3976 002a BFF34F8F 		dsb														
 3977 002e 62B6     		cpsie i													
 3978              	
 3979              	@ 0 "" 2
 3980              	.LVL315:
 3981              		.thumb
 3982              		.syntax unified
 3983              	.L292:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3984              		.loc 2 197 9 is_stmt 0 view .LVU1180
 3985              	.LBE236:
 3986              	.LBE235:
1703:os/queue.c    ****         }
 3987              		.loc 1 1703 13 is_stmt 1 discriminator 3 view .LVU1181
1703:os/queue.c    ****         }
 3988              		.loc 1 1703 13 discriminator 3 view .LVU1182
1703:os/queue.c    ****         }
 3989              		.loc 1 1703 13 discriminator 3 view .LVU1183
 3990 0030 FEE7     		b	.L292
 3991              	.LVL316:
 3992              	.L306:
1694:os/queue.c    **** 
 3993              		.loc 1 1694 5 view .LVU1184
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 136


 3994              	.LBB237:
 3995              	.LBI237:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 3996              		.loc 2 193 34 view .LVU1185
 3997              	.LBB238:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3998              		.loc 2 195 9 view .LVU1186
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 3999              		.loc 2 197 9 view .LVU1187
 4000              		.syntax unified
 4001              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4002 0032 4FF05003 			mov r3, #80												
 4003 0036 72B6     		cpsid i													
 4004 0038 83F31188 		msr basepri, r3											
 4005 003c BFF36F8F 		isb														
 4006 0040 BFF34F8F 		dsb														
 4007 0044 62B6     		cpsie i													
 4008              	
 4009              	@ 0 "" 2
 4010              	.LVL317:
 4011              		.thumb
 4012              		.syntax unified
 4013              	.L288:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4014              		.loc 2 197 9 is_stmt 0 view .LVU1188
 4015              	.LBE238:
 4016              	.LBE237:
1694:os/queue.c    **** 
 4017              		.loc 1 1694 5 is_stmt 1 discriminator 1 view .LVU1189
1694:os/queue.c    **** 
 4018              		.loc 1 1694 5 discriminator 1 view .LVU1190
1694:os/queue.c    **** 
 4019              		.loc 1 1694 5 discriminator 1 view .LVU1191
 4020 0046 FEE7     		b	.L288
 4021              	.L307:
1698:os/queue.c    **** 
 4022              		.loc 1 1698 5 is_stmt 0 discriminator 2 view .LVU1192
 4023 0048 036C     		ldr	r3, [r0, #64]
 4024 004a 002B     		cmp	r3, #0
 4025 004c DFD0     		beq	.L289
1698:os/queue.c    **** 
 4026              		.loc 1 1698 5 is_stmt 1 view .LVU1193
 4027              	.LBB239:
 4028              	.LBI239:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4029              		.loc 2 193 34 view .LVU1194
 4030              	.LBB240:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4031              		.loc 2 195 9 view .LVU1195
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4032              		.loc 2 197 9 view .LVU1196
 4033              		.syntax unified
 4034              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4035 004e 4FF05003 			mov r3, #80												
 4036 0052 72B6     		cpsid i													
 4037 0054 83F31188 		msr basepri, r3											
 4038 0058 BFF36F8F 		isb														
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 137


 4039 005c BFF34F8F 		dsb														
 4040 0060 62B6     		cpsie i													
 4041              	
 4042              	@ 0 "" 2
 4043              	.LVL318:
 4044              		.thumb
 4045              		.syntax unified
 4046              	.L290:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4047              		.loc 2 197 9 is_stmt 0 view .LVU1197
 4048              	.LBE240:
 4049              	.LBE239:
1698:os/queue.c    **** 
 4050              		.loc 1 1698 5 is_stmt 1 discriminator 2 view .LVU1198
1698:os/queue.c    **** 
 4051              		.loc 1 1698 5 discriminator 2 view .LVU1199
1698:os/queue.c    **** 
 4052              		.loc 1 1698 5 discriminator 2 view .LVU1200
 4053 0062 FEE7     		b	.L290
 4054              	.LVL319:
 4055              	.L304:
1698:os/queue.c    **** 
 4056              		.loc 1 1698 5 is_stmt 0 discriminator 2 view .LVU1201
 4057 0064 0026     		movs	r6, #0
 4058 0066 3CE0     		b	.L293
 4059              	.LVL320:
 4060              	.L310:
 4061              	.LBB241:
1723:os/queue.c    **** 
 4062              		.loc 1 1723 17 is_stmt 1 view .LVU1202
1723:os/queue.c    **** 
 4063              		.loc 1 1723 40 is_stmt 0 view .LVU1203
 4064 0068 E668     		ldr	r6, [r4, #12]
 4065              	.LVL321:
1725:os/queue.c    ****                 traceQUEUE_PEEK( pxQueue );
 4066              		.loc 1 1725 17 is_stmt 1 view .LVU1204
 4067 006a 2946     		mov	r1, r5
 4068 006c 2046     		mov	r0, r4
 4069 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 4070              	.LVL322:
1726:os/queue.c    **** 
 4071              		.loc 1 1726 43 view .LVU1205
1729:os/queue.c    **** 
 4072              		.loc 1 1729 17 view .LVU1206
1729:os/queue.c    **** 
 4073              		.loc 1 1729 46 is_stmt 0 view .LVU1207
 4074 0072 E660     		str	r6, [r4, #12]
1733:os/queue.c    ****                 {
 4075              		.loc 1 1733 17 is_stmt 1 view .LVU1208
1733:os/queue.c    ****                 {
 4076              		.loc 1 1733 21 is_stmt 0 view .LVU1209
 4077 0074 636A     		ldr	r3, [r4, #36]
1733:os/queue.c    ****                 {
 4078              		.loc 1 1733 19 view .LVU1210
 4079 0076 23B9     		cbnz	r3, .L308
 4080              	.L295:
1747:os/queue.c    ****                 }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 138


 4081              		.loc 1 1747 45 is_stmt 1 view .LVU1211
1750:os/queue.c    ****                 return pdPASS;
 4082              		.loc 1 1750 17 view .LVU1212
 4083 0078 FFF7FEFF 		bl	vPortExitCritical
 4084              	.LVL323:
1751:os/queue.c    ****             }
 4085              		.loc 1 1751 17 view .LVU1213
1751:os/queue.c    ****             }
 4086              		.loc 1 1751 24 is_stmt 0 view .LVU1214
 4087 007c 0120     		movs	r0, #1
 4088              	.LVL324:
 4089              	.L286:
1751:os/queue.c    ****             }
 4090              		.loc 1 1751 24 view .LVU1215
 4091              	.LBE241:
1832:os/queue.c    **** /*-----------------------------------------------------------*/
 4092              		.loc 1 1832 1 view .LVU1216
 4093 007e 04B0     		add	sp, sp, #16
 4094              	.LCFI49:
 4095              		.cfi_remember_state
 4096              		.cfi_def_cfa_offset 16
 4097              		@ sp needed
 4098 0080 70BD     		pop	{r4, r5, r6, pc}
 4099              	.LVL325:
 4100              	.L308:
 4101              	.LCFI50:
 4102              		.cfi_restore_state
 4103              	.LBB242:
1735:os/queue.c    ****                     {
 4104              		.loc 1 1735 21 is_stmt 1 view .LVU1217
1735:os/queue.c    ****                     {
 4105              		.loc 1 1735 25 is_stmt 0 view .LVU1218
 4106 0082 04F12400 		add	r0, r4, #36
 4107 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 4108              	.LVL326:
1735:os/queue.c    ****                     {
 4109              		.loc 1 1735 23 view .LVU1219
 4110 008a 0028     		cmp	r0, #0
 4111 008c F4D0     		beq	.L295
1738:os/queue.c    ****                     }
 4112              		.loc 1 1738 25 is_stmt 1 view .LVU1220
 4113 008e 354B     		ldr	r3, .L315
 4114 0090 4FF08052 		mov	r2, #268435456
 4115 0094 1A60     		str	r2, [r3]
1738:os/queue.c    ****                     }
 4116              		.loc 1 1738 25 view .LVU1221
 4117              		.syntax unified
 4118              	@ 1738 "os/queue.c" 1
 4119 0096 BFF34F8F 		dsb
 4120              	@ 0 "" 2
1738:os/queue.c    ****                     }
 4121              		.loc 1 1738 25 view .LVU1222
 4122              	@ 1738 "os/queue.c" 1
 4123 009a BFF36F8F 		isb
 4124              	@ 0 "" 2
1738:os/queue.c    ****                     }
 4125              		.loc 1 1738 57 view .LVU1223
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 139


 4126              		.thumb
 4127              		.syntax unified
 4128 009e EBE7     		b	.L295
 4129              	.LVL327:
 4130              	.L311:
1759:os/queue.c    ****                     traceQUEUE_PEEK_FAILED( pxQueue );
 4131              		.loc 1 1759 21 view .LVU1224
 4132 00a0 FFF7FEFF 		bl	vPortExitCritical
 4133              	.LVL328:
1760:os/queue.c    ****                     return errQUEUE_EMPTY;
 4134              		.loc 1 1760 54 view .LVU1225
1761:os/queue.c    ****                 }
 4135              		.loc 1 1761 21 view .LVU1226
1761:os/queue.c    ****                 }
 4136              		.loc 1 1761 28 is_stmt 0 view .LVU1227
 4137 00a4 0020     		movs	r0, #0
 4138 00a6 EAE7     		b	.L286
 4139              	.L312:
1768:os/queue.c    ****                     xEntryTimeSet = pdTRUE;
 4140              		.loc 1 1768 21 is_stmt 1 view .LVU1228
 4141 00a8 02A8     		add	r0, sp, #8
 4142 00aa FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4143              	.LVL329:
1769:os/queue.c    ****                 }
 4144              		.loc 1 1769 21 view .LVU1229
1769:os/queue.c    ****                 }
 4145              		.loc 1 1769 35 is_stmt 0 view .LVU1230
 4146 00ae 0126     		movs	r6, #1
 4147 00b0 21E0     		b	.L298
 4148              	.LVL330:
 4149              	.L313:
1769:os/queue.c    ****                 }
 4150              		.loc 1 1769 35 view .LVU1231
 4151              	.LBE242:
1784:os/queue.c    **** 
 4152              		.loc 1 1784 9 is_stmt 1 discriminator 1 view .LVU1232
 4153 00b2 0023     		movs	r3, #0
 4154 00b4 84F84430 		strb	r3, [r4, #68]
 4155 00b8 29E0     		b	.L299
 4156              	.L314:
1784:os/queue.c    **** 
 4157              		.loc 1 1784 9 discriminator 4 view .LVU1233
 4158 00ba 0023     		movs	r3, #0
 4159 00bc 84F84530 		strb	r3, [r4, #69]
 4160 00c0 2BE0     		b	.L300
 4161              	.L302:
1810:os/queue.c    ****                 ( void ) xTaskResumeAll();
 4162              		.loc 1 1810 17 view .LVU1234
 4163 00c2 2046     		mov	r0, r4
 4164 00c4 FFF7FEFF 		bl	prvUnlockQueue
 4165              	.LVL331:
1811:os/queue.c    ****             }
 4166              		.loc 1 1811 17 view .LVU1235
1811:os/queue.c    ****             }
 4167              		.loc 1 1811 26 is_stmt 0 view .LVU1236
 4168 00c8 FFF7FEFF 		bl	xTaskResumeAll
 4169              	.LVL332:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 140


 4170 00cc 09E0     		b	.L293
 4171              	.L301:
1818:os/queue.c    ****             ( void ) xTaskResumeAll();
 4172              		.loc 1 1818 13 is_stmt 1 view .LVU1237
 4173 00ce 2046     		mov	r0, r4
 4174 00d0 FFF7FEFF 		bl	prvUnlockQueue
 4175              	.LVL333:
1819:os/queue.c    **** 
 4176              		.loc 1 1819 13 view .LVU1238
1819:os/queue.c    **** 
 4177              		.loc 1 1819 22 is_stmt 0 view .LVU1239
 4178 00d4 FFF7FEFF 		bl	xTaskResumeAll
 4179              	.LVL334:
1821:os/queue.c    ****             {
 4180              		.loc 1 1821 13 is_stmt 1 view .LVU1240
1821:os/queue.c    ****             {
 4181              		.loc 1 1821 17 is_stmt 0 view .LVU1241
 4182 00d8 2046     		mov	r0, r4
 4183 00da FFF7FEFF 		bl	prvIsQueueEmpty
 4184              	.LVL335:
1821:os/queue.c    ****             {
 4185              		.loc 1 1821 15 view .LVU1242
 4186 00de 0028     		cmp	r0, #0
 4187 00e0 3DD1     		bne	.L309
 4188              	.LVL336:
 4189              	.L293:
1703:os/queue.c    ****         }
 4190              		.loc 1 1703 114 is_stmt 1 discriminator 8 view .LVU1243
1710:os/queue.c    ****     {
 4191              		.loc 1 1710 5 discriminator 8 view .LVU1244
1712:os/queue.c    ****         {
 4192              		.loc 1 1712 9 discriminator 8 view .LVU1245
 4193 00e2 FFF7FEFF 		bl	vPortEnterCritical
 4194              	.LVL337:
 4195              	.LBB243:
1714:os/queue.c    **** 
 4196              		.loc 1 1714 13 discriminator 8 view .LVU1246
1714:os/queue.c    **** 
 4197              		.loc 1 1714 31 is_stmt 0 discriminator 8 view .LVU1247
 4198 00e6 A36B     		ldr	r3, [r4, #56]
 4199              	.LVL338:
1718:os/queue.c    ****             {
 4200              		.loc 1 1718 13 is_stmt 1 discriminator 8 view .LVU1248
1718:os/queue.c    ****             {
 4201              		.loc 1 1718 15 is_stmt 0 discriminator 8 view .LVU1249
 4202 00e8 002B     		cmp	r3, #0
 4203 00ea BDD1     		bne	.L310
1755:os/queue.c    ****                 {
 4204              		.loc 1 1755 17 is_stmt 1 view .LVU1250
1755:os/queue.c    ****                 {
 4205              		.loc 1 1755 34 is_stmt 0 view .LVU1251
 4206 00ec 019B     		ldr	r3, [sp, #4]
 4207              	.LVL339:
1755:os/queue.c    ****                 {
 4208              		.loc 1 1755 19 view .LVU1252
 4209 00ee 002B     		cmp	r3, #0
 4210 00f0 D6D0     		beq	.L311
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 141


1763:os/queue.c    ****                 {
 4211              		.loc 1 1763 22 is_stmt 1 view .LVU1253
1763:os/queue.c    ****                 {
 4212              		.loc 1 1763 24 is_stmt 0 view .LVU1254
 4213 00f2 002E     		cmp	r6, #0
 4214 00f4 D8D0     		beq	.L312
 4215              	.LVL340:
 4216              	.L298:
1774:os/queue.c    ****                 }
 4217              		.loc 1 1774 45 is_stmt 1 view .LVU1255
 4218              	.LBE243:
1778:os/queue.c    **** 
 4219              		.loc 1 1778 9 view .LVU1256
 4220 00f6 FFF7FEFF 		bl	vPortExitCritical
 4221              	.LVL341:
1783:os/queue.c    ****         prvLockQueue( pxQueue );
 4222              		.loc 1 1783 9 view .LVU1257
 4223 00fa FFF7FEFF 		bl	vTaskSuspendAll
 4224              	.LVL342:
1784:os/queue.c    **** 
 4225              		.loc 1 1784 9 view .LVU1258
 4226 00fe FFF7FEFF 		bl	vPortEnterCritical
 4227              	.LVL343:
1784:os/queue.c    **** 
 4228              		.loc 1 1784 9 view .LVU1259
 4229 0102 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4230 0106 5BB2     		sxtb	r3, r3
 4231 0108 B3F1FF3F 		cmp	r3, #-1
 4232 010c D1D0     		beq	.L313
 4233              	.L299:
1784:os/queue.c    **** 
 4234              		.loc 1 1784 9 discriminator 3 view .LVU1260
 4235 010e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4236 0112 5BB2     		sxtb	r3, r3
 4237 0114 B3F1FF3F 		cmp	r3, #-1
 4238 0118 CFD0     		beq	.L314
 4239              	.L300:
1784:os/queue.c    **** 
 4240              		.loc 1 1784 9 discriminator 6 view .LVU1261
 4241 011a FFF7FEFF 		bl	vPortExitCritical
 4242              	.LVL344:
1787:os/queue.c    ****         {
 4243              		.loc 1 1787 9 discriminator 6 view .LVU1262
1787:os/queue.c    ****         {
 4244              		.loc 1 1787 13 is_stmt 0 discriminator 6 view .LVU1263
 4245 011e 01A9     		add	r1, sp, #4
 4246 0120 02A8     		add	r0, sp, #8
 4247 0122 FFF7FEFF 		bl	xTaskCheckForTimeOut
 4248              	.LVL345:
1787:os/queue.c    ****         {
 4249              		.loc 1 1787 11 discriminator 6 view .LVU1264
 4250 0126 0028     		cmp	r0, #0
 4251 0128 D1D1     		bne	.L301
1791:os/queue.c    ****             {
 4252              		.loc 1 1791 13 is_stmt 1 view .LVU1265
1791:os/queue.c    ****             {
 4253              		.loc 1 1791 17 is_stmt 0 view .LVU1266
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 142


 4254 012a 2046     		mov	r0, r4
 4255 012c FFF7FEFF 		bl	prvIsQueueEmpty
 4256              	.LVL346:
1791:os/queue.c    ****             {
 4257              		.loc 1 1791 15 view .LVU1267
 4258 0130 0028     		cmp	r0, #0
 4259 0132 C6D0     		beq	.L302
1793:os/queue.c    ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 4260              		.loc 1 1793 55 is_stmt 1 view .LVU1268
1794:os/queue.c    ****                 prvUnlockQueue( pxQueue );
 4261              		.loc 1 1794 17 view .LVU1269
 4262 0134 0199     		ldr	r1, [sp, #4]
 4263 0136 04F12400 		add	r0, r4, #36
 4264 013a FFF7FEFF 		bl	vTaskPlaceOnEventList
 4265              	.LVL347:
1795:os/queue.c    **** 
 4266              		.loc 1 1795 17 view .LVU1270
 4267 013e 2046     		mov	r0, r4
 4268 0140 FFF7FEFF 		bl	prvUnlockQueue
 4269              	.LVL348:
1797:os/queue.c    ****                 {
 4270              		.loc 1 1797 17 view .LVU1271
1797:os/queue.c    ****                 {
 4271              		.loc 1 1797 21 is_stmt 0 view .LVU1272
 4272 0144 FFF7FEFF 		bl	xTaskResumeAll
 4273              	.LVL349:
1797:os/queue.c    ****                 {
 4274              		.loc 1 1797 19 view .LVU1273
 4275 0148 0028     		cmp	r0, #0
 4276 014a CAD1     		bne	.L293
1799:os/queue.c    ****                 }
 4277              		.loc 1 1799 21 is_stmt 1 view .LVU1274
 4278 014c 054B     		ldr	r3, .L315
 4279 014e 4FF08052 		mov	r2, #268435456
 4280 0152 1A60     		str	r2, [r3]
1799:os/queue.c    ****                 }
 4281              		.loc 1 1799 21 view .LVU1275
 4282              		.syntax unified
 4283              	@ 1799 "os/queue.c" 1
 4284 0154 BFF34F8F 		dsb
 4285              	@ 0 "" 2
1799:os/queue.c    ****                 }
 4286              		.loc 1 1799 21 view .LVU1276
 4287              	@ 1799 "os/queue.c" 1
 4288 0158 BFF36F8F 		isb
 4289              	@ 0 "" 2
1799:os/queue.c    ****                 }
 4290              		.loc 1 1799 43 view .LVU1277
 4291              		.thumb
 4292              		.syntax unified
 4293 015c C1E7     		b	.L293
 4294              	.L309:
1824:os/queue.c    ****             }
 4295              		.loc 1 1824 24 is_stmt 0 view .LVU1278
 4296 015e 0020     		movs	r0, #0
 4297 0160 8DE7     		b	.L286
 4298              	.L316:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 143


 4299 0162 00BF     		.align	2
 4300              	.L315:
 4301 0164 04ED00E0 		.word	-536810236
 4302              		.cfi_endproc
 4303              	.LFE22:
 4305              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 4306              		.align	1
 4307              		.global	xQueueReceiveFromISR
 4308              		.syntax unified
 4309              		.thumb
 4310              		.thumb_func
 4311              		.fpu fpv5-d16
 4313              	xQueueReceiveFromISR:
 4314              	.LVL350:
 4315              	.LFB23:
1838:os/queue.c    ****     BaseType_t xReturn;
 4316              		.loc 1 1838 1 is_stmt 1 view -0
 4317              		.cfi_startproc
 4318              		@ args = 0, pretend = 0, frame = 0
 4319              		@ frame_needed = 0, uses_anonymous_args = 0
1838:os/queue.c    ****     BaseType_t xReturn;
 4320              		.loc 1 1838 1 is_stmt 0 view .LVU1280
 4321 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4322              	.LCFI51:
 4323              		.cfi_def_cfa_offset 32
 4324              		.cfi_offset 3, -32
 4325              		.cfi_offset 4, -28
 4326              		.cfi_offset 5, -24
 4327              		.cfi_offset 6, -20
 4328              		.cfi_offset 7, -16
 4329              		.cfi_offset 8, -12
 4330              		.cfi_offset 9, -8
 4331              		.cfi_offset 14, -4
1839:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
 4332              		.loc 1 1839 5 is_stmt 1 view .LVU1281
1840:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 4333              		.loc 1 1840 5 view .LVU1282
1841:os/queue.c    **** 
 4334              		.loc 1 1841 5 view .LVU1283
 4335              	.LVL351:
1843:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4336              		.loc 1 1843 5 view .LVU1284
 4337 0004 D8B1     		cbz	r0, .L331
 4338 0006 8946     		mov	r9, r1
 4339 0008 1746     		mov	r7, r2
 4340 000a 0546     		mov	r5, r0
1843:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4341              		.loc 1 1843 28 discriminator 2 view .LVU1285
1844:os/queue.c    **** 
 4342              		.loc 1 1844 5 discriminator 2 view .LVU1286
 4343 000c 11B3     		cbz	r1, .L332
 4344              	.L320:
1844:os/queue.c    **** 
 4345              		.loc 1 1844 95 discriminator 8 view .LVU1287
1860:os/queue.c    **** 
 4346              		.loc 1 1860 5 discriminator 8 view .LVU1288
 4347 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 144


 4348              	.LVL352:
1862:os/queue.c    ****     {
 4349              		.loc 1 1862 5 discriminator 8 view .LVU1289
 4350              	.LBB244:
 4351              	.LBI244:
 211:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4352              		.loc 2 211 38 discriminator 8 view .LVU1290
 4353              	.LBB245:
 213:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4354              		.loc 2 213 9 discriminator 8 view .LVU1291
 215:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4355              		.loc 2 215 9 discriminator 8 view .LVU1292
 4356              		.syntax unified
 4357              	@ 215 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4358 0012 EFF31186 			mrs r6, basepri											
 4359 0016 4FF05003 		mov r3, #80												
 4360 001a 72B6     		cpsid i													
 4361 001c 83F31188 		msr basepri, r3											
 4362 0020 BFF36F8F 		isb														
 4363 0024 BFF34F8F 		dsb														
 4364 0028 62B6     		cpsie i													
 4365              	
 4366              	@ 0 "" 2
 4367              	.LVL353:
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 4368              		.loc 2 229 9 discriminator 8 view .LVU1293
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 4369              		.loc 2 229 9 is_stmt 0 discriminator 8 view .LVU1294
 4370              		.thumb
 4371              		.syntax unified
 4372              	.LBE245:
 4373              	.LBE244:
 4374              	.LBB246:
1864:os/queue.c    **** 
 4375              		.loc 1 1864 9 is_stmt 1 discriminator 8 view .LVU1295
1864:os/queue.c    **** 
 4376              		.loc 1 1864 27 is_stmt 0 discriminator 8 view .LVU1296
 4377 002a D5F83880 		ldr	r8, [r5, #56]
 4378              	.LVL354:
1867:os/queue.c    ****         {
 4379              		.loc 1 1867 9 is_stmt 1 discriminator 8 view .LVU1297
1867:os/queue.c    ****         {
 4380              		.loc 1 1867 11 is_stmt 0 discriminator 8 view .LVU1298
 4381 002e B8F1000F 		cmp	r8, #0
 4382 0032 1DD1     		bne	.L333
1920:os/queue.c    ****             traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 4383              		.loc 1 1920 21 view .LVU1299
 4384 0034 0020     		movs	r0, #0
 4385              	.L322:
 4386              	.LVL355:
1921:os/queue.c    ****         }
 4387              		.loc 1 1921 58 is_stmt 1 view .LVU1300
 4388              	.LBE246:
1924:os/queue.c    **** 
 4389              		.loc 1 1924 5 view .LVU1301
 4390              	.LBB250:
 4391              	.LBI250:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 145


 233:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4392              		.loc 2 233 34 view .LVU1302
 4393              	.LBB251:
 4394              		.loc 2 235 9 view .LVU1303
 4395              		.syntax unified
 4396              	@ 235 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4397 0036 86F31188 			msr basepri, r6	
 4398              	@ 0 "" 2
 4399              	.LVL356:
 4400              		.loc 2 235 9 is_stmt 0 view .LVU1304
 4401              		.thumb
 4402              		.syntax unified
 4403              	.LBE251:
 4404              	.LBE250:
1926:os/queue.c    **** }
 4405              		.loc 1 1926 5 is_stmt 1 view .LVU1305
1927:os/queue.c    **** /*-----------------------------------------------------------*/
 4406              		.loc 1 1927 1 is_stmt 0 view .LVU1306
 4407 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4408              	.LVL357:
 4409              	.L331:
1843:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4410              		.loc 1 1843 5 is_stmt 1 view .LVU1307
 4411              	.LBB252:
 4412              	.LBI252:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4413              		.loc 2 193 34 view .LVU1308
 4414              	.LBB253:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4415              		.loc 2 195 9 view .LVU1309
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4416              		.loc 2 197 9 view .LVU1310
 4417              		.syntax unified
 4418              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4419 003e 4FF05003 			mov r3, #80												
 4420 0042 72B6     		cpsid i													
 4421 0044 83F31188 		msr basepri, r3											
 4422 0048 BFF36F8F 		isb														
 4423 004c BFF34F8F 		dsb														
 4424 0050 62B6     		cpsie i													
 4425              	
 4426              	@ 0 "" 2
 4427              	.LVL358:
 4428              		.thumb
 4429              		.syntax unified
 4430              	.L319:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4431              		.loc 2 197 9 is_stmt 0 view .LVU1311
 4432              	.LBE253:
 4433              	.LBE252:
1843:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4434              		.loc 1 1843 5 is_stmt 1 discriminator 1 view .LVU1312
1843:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4435              		.loc 1 1843 5 discriminator 1 view .LVU1313
1843:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4436              		.loc 1 1843 5 discriminator 1 view .LVU1314
 4437 0052 FEE7     		b	.L319
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 146


 4438              	.L332:
1844:os/queue.c    **** 
 4439              		.loc 1 1844 5 is_stmt 0 discriminator 2 view .LVU1315
 4440 0054 036C     		ldr	r3, [r0, #64]
 4441 0056 002B     		cmp	r3, #0
 4442 0058 D9D0     		beq	.L320
1844:os/queue.c    **** 
 4443              		.loc 1 1844 5 is_stmt 1 view .LVU1316
 4444              	.LBB254:
 4445              	.LBI254:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4446              		.loc 2 193 34 view .LVU1317
 4447              	.LBB255:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4448              		.loc 2 195 9 view .LVU1318
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4449              		.loc 2 197 9 view .LVU1319
 4450              		.syntax unified
 4451              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4452 005a 4FF05003 			mov r3, #80												
 4453 005e 72B6     		cpsid i													
 4454 0060 83F31188 		msr basepri, r3											
 4455 0064 BFF36F8F 		isb														
 4456 0068 BFF34F8F 		dsb														
 4457 006c 62B6     		cpsie i													
 4458              	
 4459              	@ 0 "" 2
 4460              	.LVL359:
 4461              		.thumb
 4462              		.syntax unified
 4463              	.L321:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4464              		.loc 2 197 9 is_stmt 0 view .LVU1320
 4465              	.LBE255:
 4466              	.LBE254:
1844:os/queue.c    **** 
 4467              		.loc 1 1844 5 is_stmt 1 discriminator 2 view .LVU1321
1844:os/queue.c    **** 
 4468              		.loc 1 1844 5 discriminator 2 view .LVU1322
1844:os/queue.c    **** 
 4469              		.loc 1 1844 5 discriminator 2 view .LVU1323
 4470 006e FEE7     		b	.L321
 4471              	.LVL360:
 4472              	.L333:
 4473              	.LBB256:
 4474              	.LBB247:
1869:os/queue.c    **** 
 4475              		.loc 1 1869 13 view .LVU1324
1869:os/queue.c    **** 
 4476              		.loc 1 1869 26 is_stmt 0 view .LVU1325
 4477 0070 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 4478 0074 64B2     		sxtb	r4, r4
 4479              	.LVL361:
1871:os/queue.c    **** 
 4480              		.loc 1 1871 51 is_stmt 1 view .LVU1326
1873:os/queue.c    ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 4481              		.loc 1 1873 13 view .LVU1327
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 147


 4482 0076 4946     		mov	r1, r9
 4483 0078 2846     		mov	r0, r5
 4484 007a FFF7FEFF 		bl	prvCopyDataFromQueue
 4485              	.LVL362:
1874:os/queue.c    **** 
 4486              		.loc 1 1874 13 view .LVU1328
1874:os/queue.c    **** 
 4487              		.loc 1 1874 60 is_stmt 0 view .LVU1329
 4488 007e 08F1FF33 		add	r3, r8, #-1
1874:os/queue.c    **** 
 4489              		.loc 1 1874 40 view .LVU1330
 4490 0082 AB63     		str	r3, [r5, #56]
1880:os/queue.c    ****             {
 4491              		.loc 1 1880 13 is_stmt 1 view .LVU1331
1880:os/queue.c    ****             {
 4492              		.loc 1 1880 15 is_stmt 0 view .LVU1332
 4493 0084 B4F1FF3F 		cmp	r4, #-1
 4494 0088 07D0     		beq	.L334
1911:os/queue.c    **** 
 4495              		.loc 1 1911 17 is_stmt 1 view .LVU1333
 4496 008a 7F2C     		cmp	r4, #127
 4497 008c 12D0     		beq	.L335
1911:os/queue.c    **** 
 4498              		.loc 1 1911 57 discriminator 2 view .LVU1334
1913:os/queue.c    ****             }
 4499              		.loc 1 1913 17 discriminator 2 view .LVU1335
1913:os/queue.c    ****             }
 4500              		.loc 1 1913 57 is_stmt 0 discriminator 2 view .LVU1336
 4501 008e 631C     		adds	r3, r4, #1
1913:os/queue.c    ****             }
 4502              		.loc 1 1913 36 discriminator 2 view .LVU1337
 4503 0090 5BB2     		sxtb	r3, r3
1913:os/queue.c    ****             }
 4504              		.loc 1 1913 34 discriminator 2 view .LVU1338
 4505 0092 85F84430 		strb	r3, [r5, #68]
1916:os/queue.c    ****         }
 4506              		.loc 1 1916 21 discriminator 2 view .LVU1339
 4507 0096 0120     		movs	r0, #1
 4508 0098 CDE7     		b	.L322
 4509              	.L334:
1882:os/queue.c    ****                 {
 4510              		.loc 1 1882 17 is_stmt 1 view .LVU1340
1882:os/queue.c    ****                 {
 4511              		.loc 1 1882 21 is_stmt 0 view .LVU1341
 4512 009a 2B69     		ldr	r3, [r5, #16]
1882:os/queue.c    ****                 {
 4513              		.loc 1 1882 19 view .LVU1342
 4514 009c 0BB9     		cbnz	r3, .L336
1916:os/queue.c    ****         }
 4515              		.loc 1 1916 21 view .LVU1343
 4516 009e 0120     		movs	r0, #1
 4517 00a0 C9E7     		b	.L322
 4518              	.L336:
1884:os/queue.c    ****                     {
 4519              		.loc 1 1884 21 is_stmt 1 view .LVU1344
1884:os/queue.c    ****                     {
 4520              		.loc 1 1884 25 is_stmt 0 view .LVU1345
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 148


 4521 00a2 05F11000 		add	r0, r5, #16
 4522 00a6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 4523              	.LVL363:
1884:os/queue.c    ****                     {
 4524              		.loc 1 1884 23 view .LVU1346
 4525 00aa 70B1     		cbz	r0, .L328
1888:os/queue.c    ****                         {
 4526              		.loc 1 1888 25 is_stmt 1 view .LVU1347
1888:os/queue.c    ****                         {
 4527              		.loc 1 1888 27 is_stmt 0 view .LVU1348
 4528 00ac 7FB1     		cbz	r7, .L329
1890:os/queue.c    ****                         }
 4529              		.loc 1 1890 29 is_stmt 1 view .LVU1349
1890:os/queue.c    ****                         }
 4530              		.loc 1 1890 56 is_stmt 0 view .LVU1350
 4531 00ae 0120     		movs	r0, #1
 4532 00b0 3860     		str	r0, [r7]
 4533 00b2 C0E7     		b	.L322
 4534              	.L335:
1911:os/queue.c    **** 
 4535              		.loc 1 1911 17 is_stmt 1 view .LVU1351
 4536              	.LBB248:
 4537              	.LBI248:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4538              		.loc 2 193 34 view .LVU1352
 4539              	.LBB249:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4540              		.loc 2 195 9 view .LVU1353
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4541              		.loc 2 197 9 view .LVU1354
 4542              		.syntax unified
 4543              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4544 00b4 4FF05003 			mov r3, #80												
 4545 00b8 72B6     		cpsid i													
 4546 00ba 83F31188 		msr basepri, r3											
 4547 00be BFF36F8F 		isb														
 4548 00c2 BFF34F8F 		dsb														
 4549 00c6 62B6     		cpsie i													
 4550              	
 4551              	@ 0 "" 2
 4552              	.LVL364:
 4553              		.thumb
 4554              		.syntax unified
 4555              	.L325:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4556              		.loc 2 197 9 is_stmt 0 view .LVU1355
 4557              	.LBE249:
 4558              	.LBE248:
1911:os/queue.c    **** 
 4559              		.loc 1 1911 17 is_stmt 1 discriminator 5 view .LVU1356
1911:os/queue.c    **** 
 4560              		.loc 1 1911 17 discriminator 5 view .LVU1357
1911:os/queue.c    **** 
 4561              		.loc 1 1911 17 discriminator 5 view .LVU1358
 4562 00c8 FEE7     		b	.L325
 4563              	.L328:
1916:os/queue.c    ****         }
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 149


 4564              		.loc 1 1916 21 is_stmt 0 view .LVU1359
 4565 00ca 0120     		movs	r0, #1
 4566 00cc B3E7     		b	.L322
 4567              	.L329:
 4568 00ce 0120     		movs	r0, #1
 4569 00d0 B1E7     		b	.L322
 4570              	.LBE247:
 4571              	.LBE256:
 4572              		.cfi_endproc
 4573              	.LFE23:
 4575              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 4576              		.align	1
 4577              		.global	xQueuePeekFromISR
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu fpv5-d16
 4583              	xQueuePeekFromISR:
 4584              	.LVL365:
 4585              	.LFB24:
1932:os/queue.c    ****     BaseType_t xReturn;
 4586              		.loc 1 1932 1 is_stmt 1 view -0
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 0
 4589              		@ frame_needed = 0, uses_anonymous_args = 0
1932:os/queue.c    ****     BaseType_t xReturn;
 4590              		.loc 1 1932 1 is_stmt 0 view .LVU1361
 4591 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4592              	.LCFI52:
 4593              		.cfi_def_cfa_offset 24
 4594              		.cfi_offset 3, -24
 4595              		.cfi_offset 4, -20
 4596              		.cfi_offset 5, -16
 4597              		.cfi_offset 6, -12
 4598              		.cfi_offset 7, -8
 4599              		.cfi_offset 14, -4
1933:os/queue.c    ****     UBaseType_t uxSavedInterruptStatus;
 4600              		.loc 1 1933 5 is_stmt 1 view .LVU1362
1934:os/queue.c    ****     int8_t * pcOriginalReadPosition;
 4601              		.loc 1 1934 5 view .LVU1363
1935:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 4602              		.loc 1 1935 5 view .LVU1364
1936:os/queue.c    **** 
 4603              		.loc 1 1936 5 view .LVU1365
 4604              	.LVL366:
1938:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4605              		.loc 1 1938 5 view .LVU1366
 4606 0002 78B1     		cbz	r0, .L347
 4607 0004 0D46     		mov	r5, r1
 4608 0006 0446     		mov	r4, r0
1938:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4609              		.loc 1 1938 28 discriminator 2 view .LVU1367
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4610              		.loc 1 1939 5 discriminator 2 view .LVU1368
 4611 0008 B9B1     		cbz	r1, .L348
 4612              	.L340:
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 150


 4613              		.loc 1 1939 95 discriminator 8 view .LVU1369
1940:os/queue.c    **** 
 4614              		.loc 1 1940 5 discriminator 8 view .LVU1370
 4615 000a 236C     		ldr	r3, [r4, #64]
 4616 000c 1BBB     		cbnz	r3, .L342
1940:os/queue.c    **** 
 4617              		.loc 1 1940 5 view .LVU1371
 4618              	.LBB257:
 4619              	.LBI257:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4620              		.loc 2 193 34 view .LVU1372
 4621              	.LBB258:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4622              		.loc 2 195 9 view .LVU1373
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4623              		.loc 2 197 9 view .LVU1374
 4624              		.syntax unified
 4625              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4626 000e 4FF05003 			mov r3, #80												
 4627 0012 72B6     		cpsid i													
 4628 0014 83F31188 		msr basepri, r3											
 4629 0018 BFF36F8F 		isb														
 4630 001c BFF34F8F 		dsb														
 4631 0020 62B6     		cpsie i													
 4632              	
 4633              	@ 0 "" 2
 4634              	.LVL367:
 4635              		.thumb
 4636              		.syntax unified
 4637              	.L343:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4638              		.loc 2 197 9 is_stmt 0 view .LVU1375
 4639              	.LBE258:
 4640              	.LBE257:
1940:os/queue.c    **** 
 4641              		.loc 1 1940 5 is_stmt 1 discriminator 3 view .LVU1376
1940:os/queue.c    **** 
 4642              		.loc 1 1940 5 discriminator 3 view .LVU1377
1940:os/queue.c    **** 
 4643              		.loc 1 1940 5 discriminator 3 view .LVU1378
 4644 0022 FEE7     		b	.L343
 4645              	.L347:
1938:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4646              		.loc 1 1938 5 view .LVU1379
 4647              	.LBB259:
 4648              	.LBI259:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4649              		.loc 2 193 34 view .LVU1380
 4650              	.LBB260:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4651              		.loc 2 195 9 view .LVU1381
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4652              		.loc 2 197 9 view .LVU1382
 4653              		.syntax unified
 4654              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4655 0024 4FF05003 			mov r3, #80												
 4656 0028 72B6     		cpsid i													
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 151


 4657 002a 83F31188 		msr basepri, r3											
 4658 002e BFF36F8F 		isb														
 4659 0032 BFF34F8F 		dsb														
 4660 0036 62B6     		cpsie i													
 4661              	
 4662              	@ 0 "" 2
 4663              	.LVL368:
 4664              		.thumb
 4665              		.syntax unified
 4666              	.L339:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4667              		.loc 2 197 9 is_stmt 0 view .LVU1383
 4668              	.LBE260:
 4669              	.LBE259:
1938:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4670              		.loc 1 1938 5 is_stmt 1 discriminator 1 view .LVU1384
1938:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4671              		.loc 1 1938 5 discriminator 1 view .LVU1385
1938:os/queue.c    ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4672              		.loc 1 1938 5 discriminator 1 view .LVU1386
 4673 0038 FEE7     		b	.L339
 4674              	.L348:
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4675              		.loc 1 1939 5 is_stmt 0 discriminator 2 view .LVU1387
 4676 003a 036C     		ldr	r3, [r0, #64]
 4677 003c 002B     		cmp	r3, #0
 4678 003e E4D0     		beq	.L340
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4679              		.loc 1 1939 5 is_stmt 1 view .LVU1388
 4680              	.LBB261:
 4681              	.LBI261:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4682              		.loc 2 193 34 view .LVU1389
 4683              	.LBB262:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4684              		.loc 2 195 9 view .LVU1390
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4685              		.loc 2 197 9 view .LVU1391
 4686              		.syntax unified
 4687              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4688 0040 4FF05003 			mov r3, #80												
 4689 0044 72B6     		cpsid i													
 4690 0046 83F31188 		msr basepri, r3											
 4691 004a BFF36F8F 		isb														
 4692 004e BFF34F8F 		dsb														
 4693 0052 62B6     		cpsie i													
 4694              	
 4695              	@ 0 "" 2
 4696              	.LVL369:
 4697              		.thumb
 4698              		.syntax unified
 4699              	.L341:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4700              		.loc 2 197 9 is_stmt 0 view .LVU1392
 4701              	.LBE262:
 4702              	.LBE261:
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 152


 4703              		.loc 1 1939 5 is_stmt 1 discriminator 2 view .LVU1393
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4704              		.loc 1 1939 5 discriminator 2 view .LVU1394
1939:os/queue.c    ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4705              		.loc 1 1939 5 discriminator 2 view .LVU1395
 4706 0054 FEE7     		b	.L341
 4707              	.L342:
1940:os/queue.c    **** 
 4708              		.loc 1 1940 45 discriminator 2 view .LVU1396
1956:os/queue.c    **** 
 4709              		.loc 1 1956 5 discriminator 2 view .LVU1397
 4710 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4711              	.LVL370:
1958:os/queue.c    ****     {
 4712              		.loc 1 1958 5 discriminator 2 view .LVU1398
 4713              	.LBB263:
 4714              	.LBI263:
 211:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4715              		.loc 2 211 38 discriminator 2 view .LVU1399
 4716              	.LBB264:
 213:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4717              		.loc 2 213 9 discriminator 2 view .LVU1400
 215:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4718              		.loc 2 215 9 discriminator 2 view .LVU1401
 4719              		.syntax unified
 4720              	@ 215 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4721 005a EFF31186 			mrs r6, basepri											
 4722 005e 4FF05003 		mov r3, #80												
 4723 0062 72B6     		cpsid i													
 4724 0064 83F31188 		msr basepri, r3											
 4725 0068 BFF36F8F 		isb														
 4726 006c BFF34F8F 		dsb														
 4727 0070 62B6     		cpsie i													
 4728              	
 4729              	@ 0 "" 2
 4730              	.LVL371:
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 4731              		.loc 2 229 9 discriminator 2 view .LVU1402
 229:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     }
 4732              		.loc 2 229 9 is_stmt 0 discriminator 2 view .LVU1403
 4733              		.thumb
 4734              		.syntax unified
 4735              	.LBE264:
 4736              	.LBE263:
1961:os/queue.c    ****         {
 4737              		.loc 1 1961 9 is_stmt 1 discriminator 2 view .LVU1404
1961:os/queue.c    ****         {
 4738              		.loc 1 1961 20 is_stmt 0 discriminator 2 view .LVU1405
 4739 0072 A36B     		ldr	r3, [r4, #56]
1961:os/queue.c    ****         {
 4740              		.loc 1 1961 11 discriminator 2 view .LVU1406
 4741 0074 1BB9     		cbnz	r3, .L349
1975:os/queue.c    ****             traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 4742              		.loc 1 1975 21 view .LVU1407
 4743 0076 0020     		movs	r0, #0
 4744              	.L344:
 4745              	.LVL372:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 153


1976:os/queue.c    ****         }
 4746              		.loc 1 1976 55 is_stmt 1 view .LVU1408
1979:os/queue.c    **** 
 4747              		.loc 1 1979 5 view .LVU1409
 4748              	.LBB265:
 4749              	.LBI265:
 233:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4750              		.loc 2 233 34 view .LVU1410
 4751              	.LBB266:
 4752              		.loc 2 235 9 view .LVU1411
 4753              		.syntax unified
 4754              	@ 235 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4755 0078 86F31188 			msr basepri, r6	
 4756              	@ 0 "" 2
 4757              	.LVL373:
 4758              		.loc 2 235 9 is_stmt 0 view .LVU1412
 4759              		.thumb
 4760              		.syntax unified
 4761              	.LBE266:
 4762              	.LBE265:
1981:os/queue.c    **** }
 4763              		.loc 1 1981 5 is_stmt 1 view .LVU1413
1982:os/queue.c    **** /*-----------------------------------------------------------*/
 4764              		.loc 1 1982 1 is_stmt 0 view .LVU1414
 4765 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4766              	.LVL374:
 4767              	.L349:
1963:os/queue.c    **** 
 4768              		.loc 1 1963 48 is_stmt 1 view .LVU1415
1967:os/queue.c    ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
 4769              		.loc 1 1967 13 view .LVU1416
1967:os/queue.c    ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
 4770              		.loc 1 1967 36 is_stmt 0 view .LVU1417
 4771 007e E768     		ldr	r7, [r4, #12]
 4772              	.LVL375:
1968:os/queue.c    ****             pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 4773              		.loc 1 1968 13 is_stmt 1 view .LVU1418
 4774 0080 2946     		mov	r1, r5
 4775 0082 2046     		mov	r0, r4
 4776 0084 FFF7FEFF 		bl	prvCopyDataFromQueue
 4777              	.LVL376:
1969:os/queue.c    **** 
 4778              		.loc 1 1969 13 view .LVU1419
1969:os/queue.c    **** 
 4779              		.loc 1 1969 42 is_stmt 0 view .LVU1420
 4780 0088 E760     		str	r7, [r4, #12]
1971:os/queue.c    ****         }
 4781              		.loc 1 1971 13 is_stmt 1 view .LVU1421
 4782              	.LVL377:
1971:os/queue.c    ****         }
 4783              		.loc 1 1971 21 is_stmt 0 view .LVU1422
 4784 008a 0120     		movs	r0, #1
 4785 008c F4E7     		b	.L344
 4786              		.cfi_endproc
 4787              	.LFE24:
 4789              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 4790              		.align	1
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 154


 4791              		.global	uxQueueMessagesWaiting
 4792              		.syntax unified
 4793              		.thumb
 4794              		.thumb_func
 4795              		.fpu fpv5-d16
 4797              	uxQueueMessagesWaiting:
 4798              	.LVL378:
 4799              	.LFB25:
1986:os/queue.c    ****     UBaseType_t uxReturn;
 4800              		.loc 1 1986 1 is_stmt 1 view -0
 4801              		.cfi_startproc
 4802              		@ args = 0, pretend = 0, frame = 0
 4803              		@ frame_needed = 0, uses_anonymous_args = 0
1987:os/queue.c    **** 
 4804              		.loc 1 1987 5 view .LVU1424
1989:os/queue.c    **** 
 4805              		.loc 1 1989 5 view .LVU1425
 4806 0000 40B1     		cbz	r0, .L355
1986:os/queue.c    ****     UBaseType_t uxReturn;
 4807              		.loc 1 1986 1 is_stmt 0 discriminator 2 view .LVU1426
 4808 0002 10B5     		push	{r4, lr}
 4809              	.LCFI53:
 4810              		.cfi_def_cfa_offset 8
 4811              		.cfi_offset 4, -8
 4812              		.cfi_offset 14, -4
 4813 0004 0446     		mov	r4, r0
1989:os/queue.c    **** 
 4814              		.loc 1 1989 27 is_stmt 1 discriminator 2 view .LVU1427
1991:os/queue.c    ****     {
 4815              		.loc 1 1991 5 discriminator 2 view .LVU1428
 4816 0006 FFF7FEFF 		bl	vPortEnterCritical
 4817              	.LVL379:
1993:os/queue.c    ****     }
 4818              		.loc 1 1993 9 discriminator 2 view .LVU1429
1993:os/queue.c    ****     }
 4819              		.loc 1 1993 18 is_stmt 0 discriminator 2 view .LVU1430
 4820 000a A46B     		ldr	r4, [r4, #56]
 4821              	.LVL380:
1995:os/queue.c    **** 
 4822              		.loc 1 1995 5 is_stmt 1 discriminator 2 view .LVU1431
 4823 000c FFF7FEFF 		bl	vPortExitCritical
 4824              	.LVL381:
1997:os/queue.c    **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4825              		.loc 1 1997 5 discriminator 2 view .LVU1432
1998:os/queue.c    **** /*-----------------------------------------------------------*/
 4826              		.loc 1 1998 1 is_stmt 0 discriminator 2 view .LVU1433
 4827 0010 2046     		mov	r0, r4
 4828 0012 10BD     		pop	{r4, pc}
 4829              	.LVL382:
 4830              	.L355:
 4831              	.LCFI54:
 4832              		.cfi_def_cfa_offset 0
 4833              		.cfi_restore 4
 4834              		.cfi_restore 14
1989:os/queue.c    **** 
 4835              		.loc 1 1989 5 is_stmt 1 view .LVU1434
 4836              	.LBB267:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 155


 4837              	.LBI267:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4838              		.loc 2 193 34 view .LVU1435
 4839              	.LBB268:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4840              		.loc 2 195 9 view .LVU1436
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4841              		.loc 2 197 9 view .LVU1437
 4842              		.syntax unified
 4843              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4844 0014 4FF05003 			mov r3, #80												
 4845 0018 72B6     		cpsid i													
 4846 001a 83F31188 		msr basepri, r3											
 4847 001e BFF36F8F 		isb														
 4848 0022 BFF34F8F 		dsb														
 4849 0026 62B6     		cpsie i													
 4850              	
 4851              	@ 0 "" 2
 4852              	.LVL383:
 4853              		.thumb
 4854              		.syntax unified
 4855              	.L352:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4856              		.loc 2 197 9 is_stmt 0 view .LVU1438
 4857              	.LBE268:
 4858              	.LBE267:
1989:os/queue.c    **** 
 4859              		.loc 1 1989 5 is_stmt 1 discriminator 1 view .LVU1439
1989:os/queue.c    **** 
 4860              		.loc 1 1989 5 discriminator 1 view .LVU1440
1989:os/queue.c    **** 
 4861              		.loc 1 1989 5 discriminator 1 view .LVU1441
 4862 0028 FEE7     		b	.L352
 4863              		.cfi_endproc
 4864              	.LFE25:
 4866              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 4867              		.align	1
 4868              		.global	uxQueueSpacesAvailable
 4869              		.syntax unified
 4870              		.thumb
 4871              		.thumb_func
 4872              		.fpu fpv5-d16
 4874              	uxQueueSpacesAvailable:
 4875              	.LVL384:
 4876              	.LFB26:
2002:os/queue.c    ****     UBaseType_t uxReturn;
 4877              		.loc 1 2002 1 view -0
 4878              		.cfi_startproc
 4879              		@ args = 0, pretend = 0, frame = 0
 4880              		@ frame_needed = 0, uses_anonymous_args = 0
2002:os/queue.c    ****     UBaseType_t uxReturn;
 4881              		.loc 1 2002 1 is_stmt 0 view .LVU1443
 4882 0000 38B5     		push	{r3, r4, r5, lr}
 4883              	.LCFI55:
 4884              		.cfi_def_cfa_offset 16
 4885              		.cfi_offset 3, -16
 4886              		.cfi_offset 4, -12
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 156


 4887              		.cfi_offset 5, -8
 4888              		.cfi_offset 14, -4
2003:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 4889              		.loc 1 2003 5 is_stmt 1 view .LVU1444
2004:os/queue.c    **** 
 4890              		.loc 1 2004 5 view .LVU1445
 4891              	.LVL385:
2006:os/queue.c    **** 
 4892              		.loc 1 2006 5 view .LVU1446
 4893 0002 48B1     		cbz	r0, .L360
 4894 0004 0546     		mov	r5, r0
2006:os/queue.c    **** 
 4895              		.loc 1 2006 28 discriminator 2 view .LVU1447
2008:os/queue.c    ****     {
 4896              		.loc 1 2008 5 discriminator 2 view .LVU1448
 4897 0006 FFF7FEFF 		bl	vPortEnterCritical
 4898              	.LVL386:
2010:os/queue.c    ****     }
 4899              		.loc 1 2010 9 discriminator 2 view .LVU1449
2010:os/queue.c    ****     }
 4900              		.loc 1 2010 27 is_stmt 0 discriminator 2 view .LVU1450
 4901 000a EC6B     		ldr	r4, [r5, #60]
2010:os/queue.c    ****     }
 4902              		.loc 1 2010 47 discriminator 2 view .LVU1451
 4903 000c AB6B     		ldr	r3, [r5, #56]
2010:os/queue.c    ****     }
 4904              		.loc 1 2010 18 discriminator 2 view .LVU1452
 4905 000e E41A     		subs	r4, r4, r3
 4906              	.LVL387:
2012:os/queue.c    **** 
 4907              		.loc 1 2012 5 is_stmt 1 discriminator 2 view .LVU1453
 4908 0010 FFF7FEFF 		bl	vPortExitCritical
 4909              	.LVL388:
2014:os/queue.c    **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4910              		.loc 1 2014 5 discriminator 2 view .LVU1454
2015:os/queue.c    **** /*-----------------------------------------------------------*/
 4911              		.loc 1 2015 1 is_stmt 0 discriminator 2 view .LVU1455
 4912 0014 2046     		mov	r0, r4
 4913 0016 38BD     		pop	{r3, r4, r5, pc}
 4914              	.LVL389:
 4915              	.L360:
2006:os/queue.c    **** 
 4916              		.loc 1 2006 5 is_stmt 1 view .LVU1456
 4917              	.LBB269:
 4918              	.LBI269:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4919              		.loc 2 193 34 view .LVU1457
 4920              	.LBB270:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4921              		.loc 2 195 9 view .LVU1458
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4922              		.loc 2 197 9 view .LVU1459
 4923              		.syntax unified
 4924              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4925 0018 4FF05003 			mov r3, #80												
 4926 001c 72B6     		cpsid i													
 4927 001e 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 157


 4928 0022 BFF36F8F 		isb														
 4929 0026 BFF34F8F 		dsb														
 4930 002a 62B6     		cpsie i													
 4931              	
 4932              	@ 0 "" 2
 4933              	.LVL390:
 4934              		.thumb
 4935              		.syntax unified
 4936              	.L358:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4937              		.loc 2 197 9 is_stmt 0 view .LVU1460
 4938              	.LBE270:
 4939              	.LBE269:
2006:os/queue.c    **** 
 4940              		.loc 1 2006 5 is_stmt 1 discriminator 1 view .LVU1461
2006:os/queue.c    **** 
 4941              		.loc 1 2006 5 discriminator 1 view .LVU1462
2006:os/queue.c    **** 
 4942              		.loc 1 2006 5 discriminator 1 view .LVU1463
 4943 002c FEE7     		b	.L358
 4944              		.cfi_endproc
 4945              	.LFE26:
 4947              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 4948              		.align	1
 4949              		.global	uxQueueMessagesWaitingFromISR
 4950              		.syntax unified
 4951              		.thumb
 4952              		.thumb_func
 4953              		.fpu fpv5-d16
 4955              	uxQueueMessagesWaitingFromISR:
 4956              	.LVL391:
 4957              	.LFB27:
2019:os/queue.c    ****     UBaseType_t uxReturn;
 4958              		.loc 1 2019 1 view -0
 4959              		.cfi_startproc
 4960              		@ args = 0, pretend = 0, frame = 0
 4961              		@ frame_needed = 0, uses_anonymous_args = 0
 4962              		@ link register save eliminated.
2020:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 4963              		.loc 1 2020 5 view .LVU1465
2021:os/queue.c    **** 
 4964              		.loc 1 2021 5 view .LVU1466
2023:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
 4965              		.loc 1 2023 5 view .LVU1467
 4966 0000 08B1     		cbz	r0, .L364
2023:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
 4967              		.loc 1 2023 28 discriminator 2 view .LVU1468
2024:os/queue.c    **** 
 4968              		.loc 1 2024 5 discriminator 2 view .LVU1469
2024:os/queue.c    **** 
 4969              		.loc 1 2024 14 is_stmt 0 discriminator 2 view .LVU1470
 4970 0002 806B     		ldr	r0, [r0, #56]
 4971              	.LVL392:
2026:os/queue.c    **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4972              		.loc 1 2026 5 is_stmt 1 discriminator 2 view .LVU1471
2027:os/queue.c    **** /*-----------------------------------------------------------*/
 4973              		.loc 1 2027 1 is_stmt 0 discriminator 2 view .LVU1472
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 158


 4974 0004 7047     		bx	lr
 4975              	.LVL393:
 4976              	.L364:
2023:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
 4977              		.loc 1 2023 5 is_stmt 1 view .LVU1473
 4978              	.LBB271:
 4979              	.LBI271:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 4980              		.loc 2 193 34 view .LVU1474
 4981              	.LBB272:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4982              		.loc 2 195 9 view .LVU1475
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4983              		.loc 2 197 9 view .LVU1476
 4984              		.syntax unified
 4985              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4986 0006 4FF05003 			mov r3, #80												
 4987 000a 72B6     		cpsid i													
 4988 000c 83F31188 		msr basepri, r3											
 4989 0010 BFF36F8F 		isb														
 4990 0014 BFF34F8F 		dsb														
 4991 0018 62B6     		cpsie i													
 4992              	
 4993              	@ 0 "" 2
 4994              	.LVL394:
 4995              		.thumb
 4996              		.syntax unified
 4997              	.L363:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 4998              		.loc 2 197 9 is_stmt 0 view .LVU1477
 4999              	.LBE272:
 5000              	.LBE271:
2023:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
 5001              		.loc 1 2023 5 is_stmt 1 discriminator 1 view .LVU1478
2023:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
 5002              		.loc 1 2023 5 discriminator 1 view .LVU1479
2023:os/queue.c    ****     uxReturn = pxQueue->uxMessagesWaiting;
 5003              		.loc 1 2023 5 discriminator 1 view .LVU1480
 5004 001a FEE7     		b	.L363
 5005              		.cfi_endproc
 5006              	.LFE27:
 5008              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 5009              		.align	1
 5010              		.global	uxQueueGetQueueNumber
 5011              		.syntax unified
 5012              		.thumb
 5013              		.thumb_func
 5014              		.fpu fpv5-d16
 5016              	uxQueueGetQueueNumber:
 5017              	.LVL395:
 5018              	.LFB29:
2075:os/queue.c    ****         return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 5019              		.loc 1 2075 5 view -0
 5020              		.cfi_startproc
 5021              		@ args = 0, pretend = 0, frame = 0
 5022              		@ frame_needed = 0, uses_anonymous_args = 0
 5023              		@ link register save eliminated.
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 159


2076:os/queue.c    ****     }
 5024              		.loc 1 2076 9 view .LVU1482
2077:os/queue.c    **** 
 5025              		.loc 1 2077 5 is_stmt 0 view .LVU1483
 5026 0000 806C     		ldr	r0, [r0, #72]
 5027              	.LVL396:
2077:os/queue.c    **** 
 5028              		.loc 1 2077 5 view .LVU1484
 5029 0002 7047     		bx	lr
 5030              		.cfi_endproc
 5031              	.LFE29:
 5033              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 5034              		.align	1
 5035              		.global	vQueueSetQueueNumber
 5036              		.syntax unified
 5037              		.thumb
 5038              		.thumb_func
 5039              		.fpu fpv5-d16
 5041              	vQueueSetQueueNumber:
 5042              	.LVL397:
 5043              	.LFB30:
2086:os/queue.c    ****         ( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 5044              		.loc 1 2086 5 is_stmt 1 view -0
 5045              		.cfi_startproc
 5046              		@ args = 0, pretend = 0, frame = 0
 5047              		@ frame_needed = 0, uses_anonymous_args = 0
 5048              		@ link register save eliminated.
2087:os/queue.c    ****     }
 5049              		.loc 1 2087 9 view .LVU1486
2087:os/queue.c    ****     }
 5050              		.loc 1 2087 49 is_stmt 0 view .LVU1487
 5051 0000 8164     		str	r1, [r0, #72]
2088:os/queue.c    **** 
 5052              		.loc 1 2088 5 view .LVU1488
 5053 0002 7047     		bx	lr
 5054              		.cfi_endproc
 5055              	.LFE30:
 5057              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 5058              		.align	1
 5059              		.global	ucQueueGetQueueType
 5060              		.syntax unified
 5061              		.thumb
 5062              		.thumb_func
 5063              		.fpu fpv5-d16
 5065              	ucQueueGetQueueType:
 5066              	.LVL398:
 5067              	.LFB31:
2096:os/queue.c    ****         return ( ( Queue_t * ) xQueue )->ucQueueType;
 5068              		.loc 1 2096 5 is_stmt 1 view -0
 5069              		.cfi_startproc
 5070              		@ args = 0, pretend = 0, frame = 0
 5071              		@ frame_needed = 0, uses_anonymous_args = 0
 5072              		@ link register save eliminated.
2097:os/queue.c    ****     }
 5073              		.loc 1 2097 9 view .LVU1490
2098:os/queue.c    **** 
 5074              		.loc 1 2098 5 is_stmt 0 view .LVU1491
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 160


 5075 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 5076              	.LVL399:
2098:os/queue.c    **** 
 5077              		.loc 1 2098 5 view .LVU1492
 5078 0004 7047     		bx	lr
 5079              		.cfi_endproc
 5080              	.LFE31:
 5082              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 5083              		.align	1
 5084              		.global	xQueueIsQueueEmptyFromISR
 5085              		.syntax unified
 5086              		.thumb
 5087              		.thumb_func
 5088              		.fpu fpv5-d16
 5090              	xQueueIsQueueEmptyFromISR:
 5091              	.LVL400:
 5092              	.LFB37:
2376:os/queue.c    ****     BaseType_t xReturn;
 5093              		.loc 1 2376 1 is_stmt 1 view -0
 5094              		.cfi_startproc
 5095              		@ args = 0, pretend = 0, frame = 0
 5096              		@ frame_needed = 0, uses_anonymous_args = 0
 5097              		@ link register save eliminated.
2377:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 5098              		.loc 1 2377 5 view .LVU1494
2378:os/queue.c    **** 
 5099              		.loc 1 2378 5 view .LVU1495
2380:os/queue.c    **** 
 5100              		.loc 1 2380 5 view .LVU1496
 5101 0000 18B1     		cbz	r0, .L373
2380:os/queue.c    **** 
 5102              		.loc 1 2380 28 discriminator 2 view .LVU1497
2382:os/queue.c    ****     {
 5103              		.loc 1 2382 5 discriminator 2 view .LVU1498
2382:os/queue.c    ****     {
 5104              		.loc 1 2382 16 is_stmt 0 discriminator 2 view .LVU1499
 5105 0002 836B     		ldr	r3, [r0, #56]
2382:os/queue.c    ****     {
 5106              		.loc 1 2382 7 discriminator 2 view .LVU1500
 5107 0004 63B9     		cbnz	r3, .L372
2384:os/queue.c    ****     }
 5108              		.loc 1 2384 17 view .LVU1501
 5109 0006 0120     		movs	r0, #1
 5110              	.LVL401:
2384:os/queue.c    ****     }
 5111              		.loc 1 2384 17 view .LVU1502
 5112 0008 7047     		bx	lr
 5113              	.LVL402:
 5114              	.L373:
2380:os/queue.c    **** 
 5115              		.loc 1 2380 5 is_stmt 1 view .LVU1503
 5116              	.LBB273:
 5117              	.LBI273:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5118              		.loc 2 193 34 view .LVU1504
 5119              	.LBB274:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 161


 5120              		.loc 2 195 9 view .LVU1505
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5121              		.loc 2 197 9 view .LVU1506
 5122              		.syntax unified
 5123              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5124 000a 4FF05003 			mov r3, #80												
 5125 000e 72B6     		cpsid i													
 5126 0010 83F31188 		msr basepri, r3											
 5127 0014 BFF36F8F 		isb														
 5128 0018 BFF34F8F 		dsb														
 5129 001c 62B6     		cpsie i													
 5130              	
 5131              	@ 0 "" 2
 5132              	.LVL403:
 5133              		.thumb
 5134              		.syntax unified
 5135              	.L370:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5136              		.loc 2 197 9 is_stmt 0 view .LVU1507
 5137              	.LBE274:
 5138              	.LBE273:
2380:os/queue.c    **** 
 5139              		.loc 1 2380 5 is_stmt 1 discriminator 1 view .LVU1508
2380:os/queue.c    **** 
 5140              		.loc 1 2380 5 discriminator 1 view .LVU1509
2380:os/queue.c    **** 
 5141              		.loc 1 2380 5 discriminator 1 view .LVU1510
 5142 001e FEE7     		b	.L370
 5143              	.L372:
2388:os/queue.c    ****     }
 5144              		.loc 1 2388 17 is_stmt 0 view .LVU1511
 5145 0020 0020     		movs	r0, #0
 5146              	.LVL404:
2391:os/queue.c    **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 5147              		.loc 1 2391 5 is_stmt 1 view .LVU1512
2392:os/queue.c    **** /*-----------------------------------------------------------*/
 5148              		.loc 1 2392 1 is_stmt 0 view .LVU1513
 5149 0022 7047     		bx	lr
 5150              		.cfi_endproc
 5151              	.LFE37:
 5153              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 5154              		.align	1
 5155              		.global	xQueueIsQueueFullFromISR
 5156              		.syntax unified
 5157              		.thumb
 5158              		.thumb_func
 5159              		.fpu fpv5-d16
 5161              	xQueueIsQueueFullFromISR:
 5162              	.LVL405:
 5163              	.LFB39:
2414:os/queue.c    **** /*-----------------------------------------------------------*/
2415:os/queue.c    **** 
2416:os/queue.c    **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2417:os/queue.c    **** {
 5164              		.loc 1 2417 1 is_stmt 1 view -0
 5165              		.cfi_startproc
 5166              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 162


 5167              		@ frame_needed = 0, uses_anonymous_args = 0
 5168              		@ link register save eliminated.
2418:os/queue.c    ****     BaseType_t xReturn;
 5169              		.loc 1 2418 5 view .LVU1515
2419:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 5170              		.loc 1 2419 5 view .LVU1516
2420:os/queue.c    **** 
2421:os/queue.c    ****     configASSERT( pxQueue );
 5171              		.loc 1 2421 5 view .LVU1517
 5172 0000 28B1     		cbz	r0, .L379
 5173              		.loc 1 2421 28 discriminator 2 view .LVU1518
2422:os/queue.c    **** 
2423:os/queue.c    ****     if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 5174              		.loc 1 2423 5 discriminator 2 view .LVU1519
 5175              		.loc 1 2423 16 is_stmt 0 discriminator 2 view .LVU1520
 5176 0002 826B     		ldr	r2, [r0, #56]
 5177              		.loc 1 2423 46 discriminator 2 view .LVU1521
 5178 0004 C36B     		ldr	r3, [r0, #60]
 5179              		.loc 1 2423 7 discriminator 2 view .LVU1522
 5180 0006 9A42     		cmp	r2, r3
 5181 0008 0CD0     		beq	.L380
2424:os/queue.c    ****     {
2425:os/queue.c    ****         xReturn = pdTRUE;
2426:os/queue.c    ****     }
2427:os/queue.c    ****     else
2428:os/queue.c    ****     {
2429:os/queue.c    ****         xReturn = pdFALSE;
 5182              		.loc 1 2429 17 view .LVU1523
 5183 000a 0020     		movs	r0, #0
 5184              	.LVL406:
2430:os/queue.c    ****     }
2431:os/queue.c    **** 
2432:os/queue.c    ****     return xReturn;
 5185              		.loc 1 2432 5 is_stmt 1 view .LVU1524
2433:os/queue.c    **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 5186              		.loc 1 2433 1 is_stmt 0 view .LVU1525
 5187 000c 7047     		bx	lr
 5188              	.LVL407:
 5189              	.L379:
2421:os/queue.c    **** 
 5190              		.loc 1 2421 5 is_stmt 1 view .LVU1526
 5191              	.LBB275:
 5192              	.LBI275:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5193              		.loc 2 193 34 view .LVU1527
 5194              	.LBB276:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 5195              		.loc 2 195 9 view .LVU1528
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5196              		.loc 2 197 9 view .LVU1529
 5197              		.syntax unified
 5198              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5199 000e 4FF05003 			mov r3, #80												
 5200 0012 72B6     		cpsid i													
 5201 0014 83F31188 		msr basepri, r3											
 5202 0018 BFF36F8F 		isb														
 5203 001c BFF34F8F 		dsb														
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 163


 5204 0020 62B6     		cpsie i													
 5205              	
 5206              	@ 0 "" 2
 5207              	.LVL408:
 5208              		.thumb
 5209              		.syntax unified
 5210              	.L376:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5211              		.loc 2 197 9 is_stmt 0 view .LVU1530
 5212              	.LBE276:
 5213              	.LBE275:
2421:os/queue.c    **** 
 5214              		.loc 1 2421 5 is_stmt 1 discriminator 1 view .LVU1531
2421:os/queue.c    **** 
 5215              		.loc 1 2421 5 discriminator 1 view .LVU1532
2421:os/queue.c    **** 
 5216              		.loc 1 2421 5 discriminator 1 view .LVU1533
 5217 0022 FEE7     		b	.L376
 5218              	.L380:
2425:os/queue.c    ****     }
 5219              		.loc 1 2425 17 is_stmt 0 view .LVU1534
 5220 0024 0120     		movs	r0, #1
 5221              	.LVL409:
2425:os/queue.c    ****     }
 5222              		.loc 1 2425 17 view .LVU1535
 5223 0026 7047     		bx	lr
 5224              		.cfi_endproc
 5225              	.LFE39:
 5227              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 5228              		.align	1
 5229              		.global	vQueueAddToRegistry
 5230              		.syntax unified
 5231              		.thumb
 5232              		.thumb_func
 5233              		.fpu fpv5-d16
 5235              	vQueueAddToRegistry:
 5236              	.LVL410:
 5237              	.LFB40:
2434:os/queue.c    **** /*-----------------------------------------------------------*/
2435:os/queue.c    **** 
2436:os/queue.c    **** #if ( configUSE_CO_ROUTINES == 1 )
2437:os/queue.c    **** 
2438:os/queue.c    ****     BaseType_t xQueueCRSend( QueueHandle_t xQueue,
2439:os/queue.c    ****                              const void * pvItemToQueue,
2440:os/queue.c    ****                              TickType_t xTicksToWait )
2441:os/queue.c    ****     {
2442:os/queue.c    ****         BaseType_t xReturn;
2443:os/queue.c    ****         Queue_t * const pxQueue = xQueue;
2444:os/queue.c    **** 
2445:os/queue.c    ****         /* If the queue is already full we may have to block.  A critical section
2446:os/queue.c    ****          * is required to prevent an interrupt removing something from the queue
2447:os/queue.c    ****          * between the check to see if the queue is full and blocking on the queue. */
2448:os/queue.c    ****         portDISABLE_INTERRUPTS();
2449:os/queue.c    ****         {
2450:os/queue.c    ****             if( prvIsQueueFull( pxQueue ) != pdFALSE )
2451:os/queue.c    ****             {
2452:os/queue.c    ****                 /* The queue is full - do we want to block or just leave without
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 164


2453:os/queue.c    ****                  * posting? */
2454:os/queue.c    ****                 if( xTicksToWait > ( TickType_t ) 0 )
2455:os/queue.c    ****                 {
2456:os/queue.c    ****                     /* As this is called from a coroutine we cannot block directly, but
2457:os/queue.c    ****                      * return indicating that we need to block. */
2458:os/queue.c    ****                     vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2459:os/queue.c    ****                     portENABLE_INTERRUPTS();
2460:os/queue.c    ****                     return errQUEUE_BLOCKED;
2461:os/queue.c    ****                 }
2462:os/queue.c    ****                 else
2463:os/queue.c    ****                 {
2464:os/queue.c    ****                     portENABLE_INTERRUPTS();
2465:os/queue.c    ****                     return errQUEUE_FULL;
2466:os/queue.c    ****                 }
2467:os/queue.c    ****             }
2468:os/queue.c    ****         }
2469:os/queue.c    ****         portENABLE_INTERRUPTS();
2470:os/queue.c    **** 
2471:os/queue.c    ****         portDISABLE_INTERRUPTS();
2472:os/queue.c    ****         {
2473:os/queue.c    ****             if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2474:os/queue.c    ****             {
2475:os/queue.c    ****                 /* There is room in the queue, copy the data into the queue. */
2476:os/queue.c    ****                 prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2477:os/queue.c    ****                 xReturn = pdPASS;
2478:os/queue.c    **** 
2479:os/queue.c    ****                 /* Were any co-routines waiting for data to become available? */
2480:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2481:os/queue.c    ****                 {
2482:os/queue.c    ****                     /* In this instance the co-routine could be placed directly
2483:os/queue.c    ****                      * into the ready list as we are within a critical section.
2484:os/queue.c    ****                      * Instead the same pending ready list mechanism is used as if
2485:os/queue.c    ****                      * the event were caused from within an interrupt. */
2486:os/queue.c    ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pd
2487:os/queue.c    ****                     {
2488:os/queue.c    ****                         /* The co-routine waiting has a higher priority so record
2489:os/queue.c    ****                          * that a yield might be appropriate. */
2490:os/queue.c    ****                         xReturn = errQUEUE_YIELD;
2491:os/queue.c    ****                     }
2492:os/queue.c    ****                     else
2493:os/queue.c    ****                     {
2494:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
2495:os/queue.c    ****                     }
2496:os/queue.c    ****                 }
2497:os/queue.c    ****                 else
2498:os/queue.c    ****                 {
2499:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2500:os/queue.c    ****                 }
2501:os/queue.c    ****             }
2502:os/queue.c    ****             else
2503:os/queue.c    ****             {
2504:os/queue.c    ****                 xReturn = errQUEUE_FULL;
2505:os/queue.c    ****             }
2506:os/queue.c    ****         }
2507:os/queue.c    ****         portENABLE_INTERRUPTS();
2508:os/queue.c    **** 
2509:os/queue.c    ****         return xReturn;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 165


2510:os/queue.c    ****     }
2511:os/queue.c    **** 
2512:os/queue.c    **** #endif /* configUSE_CO_ROUTINES */
2513:os/queue.c    **** /*-----------------------------------------------------------*/
2514:os/queue.c    **** 
2515:os/queue.c    **** #if ( configUSE_CO_ROUTINES == 1 )
2516:os/queue.c    **** 
2517:os/queue.c    ****     BaseType_t xQueueCRReceive( QueueHandle_t xQueue,
2518:os/queue.c    ****                                 void * pvBuffer,
2519:os/queue.c    ****                                 TickType_t xTicksToWait )
2520:os/queue.c    ****     {
2521:os/queue.c    ****         BaseType_t xReturn;
2522:os/queue.c    ****         Queue_t * const pxQueue = xQueue;
2523:os/queue.c    **** 
2524:os/queue.c    ****         /* If the queue is already empty we may have to block.  A critical section
2525:os/queue.c    ****          * is required to prevent an interrupt adding something to the queue
2526:os/queue.c    ****          * between the check to see if the queue is empty and blocking on the queue. */
2527:os/queue.c    ****         portDISABLE_INTERRUPTS();
2528:os/queue.c    ****         {
2529:os/queue.c    ****             if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2530:os/queue.c    ****             {
2531:os/queue.c    ****                 /* There are no messages in the queue, do we want to block or just
2532:os/queue.c    ****                  * leave with nothing? */
2533:os/queue.c    ****                 if( xTicksToWait > ( TickType_t ) 0 )
2534:os/queue.c    ****                 {
2535:os/queue.c    ****                     /* As this is a co-routine we cannot block directly, but return
2536:os/queue.c    ****                      * indicating that we need to block. */
2537:os/queue.c    ****                     vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) 
2538:os/queue.c    ****                     portENABLE_INTERRUPTS();
2539:os/queue.c    ****                     return errQUEUE_BLOCKED;
2540:os/queue.c    ****                 }
2541:os/queue.c    ****                 else
2542:os/queue.c    ****                 {
2543:os/queue.c    ****                     portENABLE_INTERRUPTS();
2544:os/queue.c    ****                     return errQUEUE_FULL;
2545:os/queue.c    ****                 }
2546:os/queue.c    ****             }
2547:os/queue.c    ****             else
2548:os/queue.c    ****             {
2549:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
2550:os/queue.c    ****             }
2551:os/queue.c    ****         }
2552:os/queue.c    ****         portENABLE_INTERRUPTS();
2553:os/queue.c    **** 
2554:os/queue.c    ****         portDISABLE_INTERRUPTS();
2555:os/queue.c    ****         {
2556:os/queue.c    ****             if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2557:os/queue.c    ****             {
2558:os/queue.c    ****                 /* Data is available from the queue. */
2559:os/queue.c    ****                 pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2560:os/queue.c    **** 
2561:os/queue.c    ****                 if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2562:os/queue.c    ****                 {
2563:os/queue.c    ****                     pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2564:os/queue.c    ****                 }
2565:os/queue.c    ****                 else
2566:os/queue.c    ****                 {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 166


2567:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2568:os/queue.c    ****                 }
2569:os/queue.c    **** 
2570:os/queue.c    ****                 --( pxQueue->uxMessagesWaiting );
2571:os/queue.c    ****                 ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( un
2572:os/queue.c    **** 
2573:os/queue.c    ****                 xReturn = pdPASS;
2574:os/queue.c    **** 
2575:os/queue.c    ****                 /* Were any co-routines waiting for space to become available? */
2576:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2577:os/queue.c    ****                 {
2578:os/queue.c    ****                     /* In this instance the co-routine could be placed directly
2579:os/queue.c    ****                      * into the ready list as we are within a critical section.
2580:os/queue.c    ****                      * Instead the same pending ready list mechanism is used as if
2581:os/queue.c    ****                      * the event were caused from within an interrupt. */
2582:os/queue.c    ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFAL
2583:os/queue.c    ****                     {
2584:os/queue.c    ****                         xReturn = errQUEUE_YIELD;
2585:os/queue.c    ****                     }
2586:os/queue.c    ****                     else
2587:os/queue.c    ****                     {
2588:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
2589:os/queue.c    ****                     }
2590:os/queue.c    ****                 }
2591:os/queue.c    ****                 else
2592:os/queue.c    ****                 {
2593:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2594:os/queue.c    ****                 }
2595:os/queue.c    ****             }
2596:os/queue.c    ****             else
2597:os/queue.c    ****             {
2598:os/queue.c    ****                 xReturn = pdFAIL;
2599:os/queue.c    ****             }
2600:os/queue.c    ****         }
2601:os/queue.c    ****         portENABLE_INTERRUPTS();
2602:os/queue.c    **** 
2603:os/queue.c    ****         return xReturn;
2604:os/queue.c    ****     }
2605:os/queue.c    **** 
2606:os/queue.c    **** #endif /* configUSE_CO_ROUTINES */
2607:os/queue.c    **** /*-----------------------------------------------------------*/
2608:os/queue.c    **** 
2609:os/queue.c    **** #if ( configUSE_CO_ROUTINES == 1 )
2610:os/queue.c    **** 
2611:os/queue.c    ****     BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue,
2612:os/queue.c    ****                                     const void * pvItemToQueue,
2613:os/queue.c    ****                                     BaseType_t xCoRoutinePreviouslyWoken )
2614:os/queue.c    ****     {
2615:os/queue.c    ****         Queue_t * const pxQueue = xQueue;
2616:os/queue.c    **** 
2617:os/queue.c    ****         /* Cannot block within an ISR so if there is no space on the queue then
2618:os/queue.c    ****          * exit without doing anything. */
2619:os/queue.c    ****         if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2620:os/queue.c    ****         {
2621:os/queue.c    ****             prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2622:os/queue.c    **** 
2623:os/queue.c    ****             /* We only want to wake one co-routine per ISR, so check that a
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 167


2624:os/queue.c    ****              * co-routine has not already been woken. */
2625:os/queue.c    ****             if( xCoRoutinePreviouslyWoken == pdFALSE )
2626:os/queue.c    ****             {
2627:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2628:os/queue.c    ****                 {
2629:os/queue.c    ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pd
2630:os/queue.c    ****                     {
2631:os/queue.c    ****                         return pdTRUE;
2632:os/queue.c    ****                     }
2633:os/queue.c    ****                     else
2634:os/queue.c    ****                     {
2635:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
2636:os/queue.c    ****                     }
2637:os/queue.c    ****                 }
2638:os/queue.c    ****                 else
2639:os/queue.c    ****                 {
2640:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2641:os/queue.c    ****                 }
2642:os/queue.c    ****             }
2643:os/queue.c    ****             else
2644:os/queue.c    ****             {
2645:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
2646:os/queue.c    ****             }
2647:os/queue.c    ****         }
2648:os/queue.c    ****         else
2649:os/queue.c    ****         {
2650:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
2651:os/queue.c    ****         }
2652:os/queue.c    **** 
2653:os/queue.c    ****         return xCoRoutinePreviouslyWoken;
2654:os/queue.c    ****     }
2655:os/queue.c    **** 
2656:os/queue.c    **** #endif /* configUSE_CO_ROUTINES */
2657:os/queue.c    **** /*-----------------------------------------------------------*/
2658:os/queue.c    **** 
2659:os/queue.c    **** #if ( configUSE_CO_ROUTINES == 1 )
2660:os/queue.c    **** 
2661:os/queue.c    ****     BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue,
2662:os/queue.c    ****                                        void * pvBuffer,
2663:os/queue.c    ****                                        BaseType_t * pxCoRoutineWoken )
2664:os/queue.c    ****     {
2665:os/queue.c    ****         BaseType_t xReturn;
2666:os/queue.c    ****         Queue_t * const pxQueue = xQueue;
2667:os/queue.c    **** 
2668:os/queue.c    ****         /* We cannot block from an ISR, so check there is data available. If
2669:os/queue.c    ****          * not then just leave without doing anything. */
2670:os/queue.c    ****         if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2671:os/queue.c    ****         {
2672:os/queue.c    ****             /* Copy the data from the queue. */
2673:os/queue.c    ****             pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2674:os/queue.c    **** 
2675:os/queue.c    ****             if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2676:os/queue.c    ****             {
2677:os/queue.c    ****                 pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2678:os/queue.c    ****             }
2679:os/queue.c    ****             else
2680:os/queue.c    ****             {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 168


2681:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
2682:os/queue.c    ****             }
2683:os/queue.c    **** 
2684:os/queue.c    ****             --( pxQueue->uxMessagesWaiting );
2685:os/queue.c    ****             ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsign
2686:os/queue.c    **** 
2687:os/queue.c    ****             if( ( *pxCoRoutineWoken ) == pdFALSE )
2688:os/queue.c    ****             {
2689:os/queue.c    ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2690:os/queue.c    ****                 {
2691:os/queue.c    ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFAL
2692:os/queue.c    ****                     {
2693:os/queue.c    ****                         *pxCoRoutineWoken = pdTRUE;
2694:os/queue.c    ****                     }
2695:os/queue.c    ****                     else
2696:os/queue.c    ****                     {
2697:os/queue.c    ****                         mtCOVERAGE_TEST_MARKER();
2698:os/queue.c    ****                     }
2699:os/queue.c    ****                 }
2700:os/queue.c    ****                 else
2701:os/queue.c    ****                 {
2702:os/queue.c    ****                     mtCOVERAGE_TEST_MARKER();
2703:os/queue.c    ****                 }
2704:os/queue.c    ****             }
2705:os/queue.c    ****             else
2706:os/queue.c    ****             {
2707:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
2708:os/queue.c    ****             }
2709:os/queue.c    **** 
2710:os/queue.c    ****             xReturn = pdPASS;
2711:os/queue.c    ****         }
2712:os/queue.c    ****         else
2713:os/queue.c    ****         {
2714:os/queue.c    ****             xReturn = pdFAIL;
2715:os/queue.c    ****         }
2716:os/queue.c    **** 
2717:os/queue.c    ****         return xReturn;
2718:os/queue.c    ****     }
2719:os/queue.c    **** 
2720:os/queue.c    **** #endif /* configUSE_CO_ROUTINES */
2721:os/queue.c    **** /*-----------------------------------------------------------*/
2722:os/queue.c    **** 
2723:os/queue.c    **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2724:os/queue.c    **** 
2725:os/queue.c    ****     void vQueueAddToRegistry( QueueHandle_t xQueue,
2726:os/queue.c    ****                               const char * pcQueueName ) /*lint !e971 Unqualified char types are al
2727:os/queue.c    ****     {
 5238              		.loc 1 2727 5 is_stmt 1 view -0
 5239              		.cfi_startproc
 5240              		@ args = 0, pretend = 0, frame = 0
 5241              		@ frame_needed = 0, uses_anonymous_args = 0
 5242              		@ link register save eliminated.
2728:os/queue.c    ****         UBaseType_t ux;
 5243              		.loc 1 2728 9 view .LVU1537
2729:os/queue.c    **** 
2730:os/queue.c    ****         configASSERT( xQueue );
 5244              		.loc 1 2730 9 view .LVU1538
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 169


 5245 0000 60B1     		cbz	r0, .L392
2727:os/queue.c    ****         UBaseType_t ux;
 5246              		.loc 1 2727 5 is_stmt 0 discriminator 2 view .LVU1539
 5247 0002 10B4     		push	{r4}
 5248              	.LCFI56:
 5249              		.cfi_def_cfa_offset 4
 5250              		.cfi_offset 4, -4
 5251 0004 0A46     		mov	r2, r1
 5252 0006 0446     		mov	r4, r0
 5253              		.loc 1 2730 31 is_stmt 1 discriminator 2 view .LVU1540
2731:os/queue.c    ****         configASSERT( pcQueueName );
 5254              		.loc 1 2731 9 discriminator 2 view .LVU1541
 5255 0008 99B1     		cbz	r1, .L393
2732:os/queue.c    **** 
2733:os/queue.c    ****         /* See if there is an empty space in the registry.  A NULL name denotes
2734:os/queue.c    ****          * a free slot. */
2735:os/queue.c    ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 5256              		.loc 1 2735 17 is_stmt 0 view .LVU1542
 5257 000a 0023     		movs	r3, #0
 5258              	.LVL411:
 5259              	.L384:
 5260              		.loc 1 2735 39 is_stmt 1 discriminator 1 view .LVU1543
 5261              		.loc 1 2735 9 is_stmt 0 discriminator 1 view .LVU1544
 5262 000c 072B     		cmp	r3, #7
 5263 000e 21D8     		bhi	.L381
2736:os/queue.c    ****         {
2737:os/queue.c    ****             if( xQueueRegistry[ ux ].pcQueueName == NULL )
 5264              		.loc 1 2737 13 is_stmt 1 view .LVU1545
 5265              		.loc 1 2737 37 is_stmt 0 view .LVU1546
 5266 0010 1249     		ldr	r1, .L395
 5267 0012 51F83310 		ldr	r1, [r1, r3, lsl #3]
 5268              		.loc 1 2737 15 view .LVU1547
 5269 0016 B9B1     		cbz	r1, .L394
2738:os/queue.c    ****             {
2739:os/queue.c    ****                 /* Store the information on this queue. */
2740:os/queue.c    ****                 xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2741:os/queue.c    ****                 xQueueRegistry[ ux ].xHandle = xQueue;
2742:os/queue.c    **** 
2743:os/queue.c    ****                 traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2744:os/queue.c    ****                 break;
2745:os/queue.c    ****             }
2746:os/queue.c    ****             else
2747:os/queue.c    ****             {
2748:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
 5270              		.loc 1 2748 41 is_stmt 1 discriminator 2 view .LVU1548
2735:os/queue.c    ****         {
 5271              		.loc 1 2735 87 discriminator 2 view .LVU1549
2735:os/queue.c    ****         {
 5272              		.loc 1 2735 89 is_stmt 0 discriminator 2 view .LVU1550
 5273 0018 0133     		adds	r3, r3, #1
 5274              	.LVL412:
2735:os/queue.c    ****         {
 5275              		.loc 1 2735 89 discriminator 2 view .LVU1551
 5276 001a F7E7     		b	.L384
 5277              	.LVL413:
 5278              	.L392:
 5279              	.LCFI57:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 170


 5280              		.cfi_def_cfa_offset 0
 5281              		.cfi_restore 4
2730:os/queue.c    ****         configASSERT( pcQueueName );
 5282              		.loc 1 2730 9 is_stmt 1 view .LVU1552
 5283              	.LBB277:
 5284              	.LBI277:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5285              		.loc 2 193 34 view .LVU1553
 5286              	.LBB278:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 5287              		.loc 2 195 9 view .LVU1554
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5288              		.loc 2 197 9 view .LVU1555
 5289              		.syntax unified
 5290              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5291 001c 4FF05003 			mov r3, #80												
 5292 0020 72B6     		cpsid i													
 5293 0022 83F31188 		msr basepri, r3											
 5294 0026 BFF36F8F 		isb														
 5295 002a BFF34F8F 		dsb														
 5296 002e 62B6     		cpsie i													
 5297              	
 5298              	@ 0 "" 2
 5299              	.LVL414:
 5300              		.thumb
 5301              		.syntax unified
 5302              	.L383:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5303              		.loc 2 197 9 is_stmt 0 view .LVU1556
 5304              	.LBE278:
 5305              	.LBE277:
2730:os/queue.c    ****         configASSERT( pcQueueName );
 5306              		.loc 1 2730 9 is_stmt 1 discriminator 1 view .LVU1557
2730:os/queue.c    ****         configASSERT( pcQueueName );
 5307              		.loc 1 2730 9 discriminator 1 view .LVU1558
2730:os/queue.c    ****         configASSERT( pcQueueName );
 5308              		.loc 1 2730 9 discriminator 1 view .LVU1559
 5309 0030 FEE7     		b	.L383
 5310              	.L393:
 5311              	.LCFI58:
 5312              		.cfi_def_cfa_offset 4
 5313              		.cfi_offset 4, -4
2731:os/queue.c    **** 
 5314              		.loc 1 2731 9 view .LVU1560
 5315              	.LBB279:
 5316              	.LBI279:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5317              		.loc 2 193 34 view .LVU1561
 5318              	.LBB280:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 5319              		.loc 2 195 9 view .LVU1562
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5320              		.loc 2 197 9 view .LVU1563
 5321              		.syntax unified
 5322              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5323 0032 4FF05003 			mov r3, #80												
 5324 0036 72B6     		cpsid i													
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 171


 5325 0038 83F31188 		msr basepri, r3											
 5326 003c BFF36F8F 		isb														
 5327 0040 BFF34F8F 		dsb														
 5328 0044 62B6     		cpsie i													
 5329              	
 5330              	@ 0 "" 2
 5331              	.LVL415:
 5332              		.thumb
 5333              		.syntax unified
 5334              	.L385:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5335              		.loc 2 197 9 is_stmt 0 view .LVU1564
 5336              	.LBE280:
 5337              	.LBE279:
2731:os/queue.c    **** 
 5338              		.loc 1 2731 9 is_stmt 1 discriminator 2 view .LVU1565
2731:os/queue.c    **** 
 5339              		.loc 1 2731 9 discriminator 2 view .LVU1566
2731:os/queue.c    **** 
 5340              		.loc 1 2731 9 discriminator 2 view .LVU1567
 5341 0046 FEE7     		b	.L385
 5342              	.LVL416:
 5343              	.L394:
2740:os/queue.c    ****                 xQueueRegistry[ ux ].xHandle = xQueue;
 5344              		.loc 1 2740 17 view .LVU1568
2740:os/queue.c    ****                 xQueueRegistry[ ux ].xHandle = xQueue;
 5345              		.loc 1 2740 50 is_stmt 0 view .LVU1569
 5346 0048 0449     		ldr	r1, .L395
 5347 004a 41F83320 		str	r2, [r1, r3, lsl #3]
2741:os/queue.c    **** 
 5348              		.loc 1 2741 17 is_stmt 1 view .LVU1570
2741:os/queue.c    **** 
 5349              		.loc 1 2741 46 is_stmt 0 view .LVU1571
 5350 004e 01EBC303 		add	r3, r1, r3, lsl #3
 5351              	.LVL417:
2741:os/queue.c    **** 
 5352              		.loc 1 2741 46 view .LVU1572
 5353 0052 5C60     		str	r4, [r3, #4]
2743:os/queue.c    ****                 break;
 5354              		.loc 1 2743 63 is_stmt 1 view .LVU1573
2744:os/queue.c    ****             }
 5355              		.loc 1 2744 17 view .LVU1574
 5356              	.L381:
2749:os/queue.c    ****             }
2750:os/queue.c    ****         }
2751:os/queue.c    ****     }
 5357              		.loc 1 2751 5 is_stmt 0 view .LVU1575
 5358 0054 5DF8044B 		ldr	r4, [sp], #4
 5359              	.LCFI59:
 5360              		.cfi_restore 4
 5361              		.cfi_def_cfa_offset 0
 5362 0058 7047     		bx	lr
 5363              	.L396:
 5364 005a 00BF     		.align	2
 5365              	.L395:
 5366 005c 00000000 		.word	xQueueRegistry
 5367              		.cfi_endproc
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 172


 5368              	.LFE40:
 5370              		.section	.text.pcQueueGetName,"ax",%progbits
 5371              		.align	1
 5372              		.global	pcQueueGetName
 5373              		.syntax unified
 5374              		.thumb
 5375              		.thumb_func
 5376              		.fpu fpv5-d16
 5378              	pcQueueGetName:
 5379              	.LVL418:
 5380              	.LFB41:
2752:os/queue.c    **** 
2753:os/queue.c    **** #endif /* configQUEUE_REGISTRY_SIZE */
2754:os/queue.c    **** /*-----------------------------------------------------------*/
2755:os/queue.c    **** 
2756:os/queue.c    **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2757:os/queue.c    **** 
2758:os/queue.c    ****     const char * pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are all
2759:os/queue.c    ****     {
 5381              		.loc 1 2759 5 is_stmt 1 view -0
 5382              		.cfi_startproc
 5383              		@ args = 0, pretend = 0, frame = 0
 5384              		@ frame_needed = 0, uses_anonymous_args = 0
 5385              		@ link register save eliminated.
2760:os/queue.c    ****         UBaseType_t ux;
 5386              		.loc 1 2760 9 view .LVU1577
2761:os/queue.c    ****         const char * pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings a
 5387              		.loc 1 2761 9 view .LVU1578
2762:os/queue.c    **** 
2763:os/queue.c    ****         configASSERT( xQueue );
 5388              		.loc 1 2763 9 view .LVU1579
 5389 0000 0146     		mov	r1, r0
 5390 0002 50B1     		cbz	r0, .L404
2764:os/queue.c    **** 
2765:os/queue.c    ****         /* Note there is nothing here to protect against another task adding or
2766:os/queue.c    ****          * removing entries from the registry while it is being searched. */
2767:os/queue.c    **** 
2768:os/queue.c    ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 5391              		.loc 1 2768 17 is_stmt 0 view .LVU1580
 5392 0004 0023     		movs	r3, #0
 5393              	.L398:
 5394              	.LVL419:
 5395              		.loc 1 2768 39 is_stmt 1 discriminator 1 view .LVU1581
 5396              		.loc 1 2768 9 is_stmt 0 discriminator 1 view .LVU1582
 5397 0006 072B     		cmp	r3, #7
 5398 0008 16D8     		bhi	.L405
2769:os/queue.c    ****         {
2770:os/queue.c    ****             if( xQueueRegistry[ ux ].xHandle == xQueue )
 5399              		.loc 1 2770 13 is_stmt 1 view .LVU1583
 5400              		.loc 1 2770 37 is_stmt 0 view .LVU1584
 5401 000a 0C4A     		ldr	r2, .L407
 5402 000c 02EBC302 		add	r2, r2, r3, lsl #3
 5403 0010 5268     		ldr	r2, [r2, #4]
 5404              		.loc 1 2770 15 view .LVU1585
 5405 0012 8A42     		cmp	r2, r1
 5406 0014 0CD0     		beq	.L406
2771:os/queue.c    ****             {
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 173


2772:os/queue.c    ****                 pcReturn = xQueueRegistry[ ux ].pcQueueName;
2773:os/queue.c    ****                 break;
2774:os/queue.c    ****             }
2775:os/queue.c    ****             else
2776:os/queue.c    ****             {
2777:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
 5407              		.loc 1 2777 41 is_stmt 1 discriminator 2 view .LVU1586
2768:os/queue.c    ****         {
 5408              		.loc 1 2768 87 discriminator 2 view .LVU1587
2768:os/queue.c    ****         {
 5409              		.loc 1 2768 89 is_stmt 0 discriminator 2 view .LVU1588
 5410 0016 0133     		adds	r3, r3, #1
 5411              	.LVL420:
2768:os/queue.c    ****         {
 5412              		.loc 1 2768 89 discriminator 2 view .LVU1589
 5413 0018 F5E7     		b	.L398
 5414              	.LVL421:
 5415              	.L404:
2763:os/queue.c    **** 
 5416              		.loc 1 2763 9 is_stmt 1 view .LVU1590
 5417              	.LBB281:
 5418              	.LBI281:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5419              		.loc 2 193 34 view .LVU1591
 5420              	.LBB282:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 5421              		.loc 2 195 9 view .LVU1592
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5422              		.loc 2 197 9 view .LVU1593
 5423              		.syntax unified
 5424              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5425 001a 4FF05003 			mov r3, #80												
 5426 001e 72B6     		cpsid i													
 5427 0020 83F31188 		msr basepri, r3											
 5428 0024 BFF36F8F 		isb														
 5429 0028 BFF34F8F 		dsb														
 5430 002c 62B6     		cpsie i													
 5431              	
 5432              	@ 0 "" 2
 5433              	.LVL422:
 5434              		.thumb
 5435              		.syntax unified
 5436              	.L399:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5437              		.loc 2 197 9 is_stmt 0 view .LVU1594
 5438              	.LBE282:
 5439              	.LBE281:
2763:os/queue.c    **** 
 5440              		.loc 1 2763 9 is_stmt 1 discriminator 1 view .LVU1595
2763:os/queue.c    **** 
 5441              		.loc 1 2763 9 discriminator 1 view .LVU1596
2763:os/queue.c    **** 
 5442              		.loc 1 2763 9 discriminator 1 view .LVU1597
 5443 002e FEE7     		b	.L399
 5444              	.LVL423:
 5445              	.L406:
2772:os/queue.c    ****                 break;
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 174


 5446              		.loc 1 2772 17 view .LVU1598
2772:os/queue.c    ****                 break;
 5447              		.loc 1 2772 26 is_stmt 0 view .LVU1599
 5448 0030 024A     		ldr	r2, .L407
 5449 0032 52F83300 		ldr	r0, [r2, r3, lsl #3]
 5450              	.LVL424:
2773:os/queue.c    ****             }
 5451              		.loc 1 2773 17 is_stmt 1 view .LVU1600
 5452 0036 7047     		bx	lr
 5453              	.LVL425:
 5454              	.L405:
2761:os/queue.c    **** 
 5455              		.loc 1 2761 22 is_stmt 0 view .LVU1601
 5456 0038 0020     		movs	r0, #0
 5457              	.LVL426:
2778:os/queue.c    ****             }
2779:os/queue.c    ****         }
2780:os/queue.c    **** 
2781:os/queue.c    ****         return pcReturn;
 5458              		.loc 1 2781 9 is_stmt 1 view .LVU1602
2782:os/queue.c    ****     } /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 5459              		.loc 1 2782 5 is_stmt 0 view .LVU1603
 5460 003a 7047     		bx	lr
 5461              	.L408:
 5462              		.align	2
 5463              	.L407:
 5464 003c 00000000 		.word	xQueueRegistry
 5465              		.cfi_endproc
 5466              	.LFE41:
 5468              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 5469              		.align	1
 5470              		.global	vQueueUnregisterQueue
 5471              		.syntax unified
 5472              		.thumb
 5473              		.thumb_func
 5474              		.fpu fpv5-d16
 5476              	vQueueUnregisterQueue:
 5477              	.LVL427:
 5478              	.LFB42:
2783:os/queue.c    **** 
2784:os/queue.c    **** #endif /* configQUEUE_REGISTRY_SIZE */
2785:os/queue.c    **** /*-----------------------------------------------------------*/
2786:os/queue.c    **** 
2787:os/queue.c    **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2788:os/queue.c    **** 
2789:os/queue.c    ****     void vQueueUnregisterQueue( QueueHandle_t xQueue )
2790:os/queue.c    ****     {
 5479              		.loc 1 2790 5 is_stmt 1 view -0
 5480              		.cfi_startproc
 5481              		@ args = 0, pretend = 0, frame = 0
 5482              		@ frame_needed = 0, uses_anonymous_args = 0
 5483              		@ link register save eliminated.
2791:os/queue.c    ****         UBaseType_t ux;
 5484              		.loc 1 2791 9 view .LVU1605
2792:os/queue.c    **** 
2793:os/queue.c    ****         configASSERT( xQueue );
 5485              		.loc 1 2793 9 view .LVU1606
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 175


 5486 0000 0146     		mov	r1, r0
 5487 0002 50B1     		cbz	r0, .L416
2794:os/queue.c    **** 
2795:os/queue.c    ****         /* See if the handle of the queue being unregistered in actually in the
2796:os/queue.c    ****          * registry. */
2797:os/queue.c    ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 5488              		.loc 1 2797 17 is_stmt 0 view .LVU1607
 5489 0004 0023     		movs	r3, #0
 5490              	.L410:
 5491              	.LVL428:
 5492              		.loc 1 2797 39 is_stmt 1 discriminator 1 view .LVU1608
 5493              		.loc 1 2797 9 is_stmt 0 discriminator 1 view .LVU1609
 5494 0006 072B     		cmp	r3, #7
 5495 0008 1AD8     		bhi	.L417
2798:os/queue.c    ****         {
2799:os/queue.c    ****             if( xQueueRegistry[ ux ].xHandle == xQueue )
 5496              		.loc 1 2799 13 is_stmt 1 view .LVU1610
 5497              		.loc 1 2799 37 is_stmt 0 view .LVU1611
 5498 000a 0E4A     		ldr	r2, .L419
 5499 000c 02EBC302 		add	r2, r2, r3, lsl #3
 5500 0010 5268     		ldr	r2, [r2, #4]
 5501              		.loc 1 2799 15 view .LVU1612
 5502 0012 8A42     		cmp	r2, r1
 5503 0014 0CD0     		beq	.L418
2800:os/queue.c    ****             {
2801:os/queue.c    ****                 /* Set the name to NULL to show that this slot if free again. */
2802:os/queue.c    ****                 xQueueRegistry[ ux ].pcQueueName = NULL;
2803:os/queue.c    **** 
2804:os/queue.c    ****                 /* Set the handle to NULL to ensure the same queue handle cannot
2805:os/queue.c    ****                  * appear in the registry twice if it is added, removed, then
2806:os/queue.c    ****                  * added again. */
2807:os/queue.c    ****                 xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2808:os/queue.c    ****                 break;
2809:os/queue.c    ****             }
2810:os/queue.c    ****             else
2811:os/queue.c    ****             {
2812:os/queue.c    ****                 mtCOVERAGE_TEST_MARKER();
 5504              		.loc 1 2812 41 is_stmt 1 discriminator 2 view .LVU1613
2797:os/queue.c    ****         {
 5505              		.loc 1 2797 87 discriminator 2 view .LVU1614
2797:os/queue.c    ****         {
 5506              		.loc 1 2797 89 is_stmt 0 discriminator 2 view .LVU1615
 5507 0016 0133     		adds	r3, r3, #1
 5508              	.LVL429:
2797:os/queue.c    ****         {
 5509              		.loc 1 2797 89 discriminator 2 view .LVU1616
 5510 0018 F5E7     		b	.L410
 5511              	.LVL430:
 5512              	.L416:
2793:os/queue.c    **** 
 5513              		.loc 1 2793 9 is_stmt 1 view .LVU1617
 5514              	.LBB283:
 5515              	.LBI283:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5516              		.loc 2 193 34 view .LVU1618
 5517              	.LBB284:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 176


 5518              		.loc 2 195 9 view .LVU1619
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5519              		.loc 2 197 9 view .LVU1620
 5520              		.syntax unified
 5521              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5522 001a 4FF05003 			mov r3, #80												
 5523 001e 72B6     		cpsid i													
 5524 0020 83F31188 		msr basepri, r3											
 5525 0024 BFF36F8F 		isb														
 5526 0028 BFF34F8F 		dsb														
 5527 002c 62B6     		cpsie i													
 5528              	
 5529              	@ 0 "" 2
 5530              	.LVL431:
 5531              		.thumb
 5532              		.syntax unified
 5533              	.L411:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5534              		.loc 2 197 9 is_stmt 0 view .LVU1621
 5535              	.LBE284:
 5536              	.LBE283:
2793:os/queue.c    **** 
 5537              		.loc 1 2793 9 is_stmt 1 discriminator 1 view .LVU1622
2793:os/queue.c    **** 
 5538              		.loc 1 2793 9 discriminator 1 view .LVU1623
2793:os/queue.c    **** 
 5539              		.loc 1 2793 9 discriminator 1 view .LVU1624
 5540 002e FEE7     		b	.L411
 5541              	.LVL432:
 5542              	.L418:
2802:os/queue.c    **** 
 5543              		.loc 1 2802 17 view .LVU1625
2802:os/queue.c    **** 
 5544              		.loc 1 2802 50 is_stmt 0 view .LVU1626
 5545 0030 044A     		ldr	r2, .L419
 5546 0032 0021     		movs	r1, #0
 5547 0034 42F83310 		str	r1, [r2, r3, lsl #3]
2807:os/queue.c    ****                 break;
 5548              		.loc 1 2807 17 is_stmt 1 view .LVU1627
2807:os/queue.c    ****                 break;
 5549              		.loc 1 2807 46 is_stmt 0 view .LVU1628
 5550 0038 02EBC303 		add	r3, r2, r3, lsl #3
 5551              	.LVL433:
2807:os/queue.c    ****                 break;
 5552              		.loc 1 2807 46 view .LVU1629
 5553 003c 5960     		str	r1, [r3, #4]
2808:os/queue.c    ****             }
 5554              		.loc 1 2808 17 is_stmt 1 view .LVU1630
 5555 003e 7047     		bx	lr
 5556              	.LVL434:
 5557              	.L417:
2813:os/queue.c    ****             }
2814:os/queue.c    ****         }
2815:os/queue.c    ****     } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 5558              		.loc 1 2815 5 is_stmt 0 view .LVU1631
 5559 0040 7047     		bx	lr
 5560              	.L420:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 177


 5561 0042 00BF     		.align	2
 5562              	.L419:
 5563 0044 00000000 		.word	xQueueRegistry
 5564              		.cfi_endproc
 5565              	.LFE42:
 5567              		.section	.text.vQueueDelete,"ax",%progbits
 5568              		.align	1
 5569              		.global	vQueueDelete
 5570              		.syntax unified
 5571              		.thumb
 5572              		.thumb_func
 5573              		.fpu fpv5-d16
 5575              	vQueueDelete:
 5576              	.LVL435:
 5577              	.LFB28:
2031:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 5578              		.loc 1 2031 1 is_stmt 1 view -0
 5579              		.cfi_startproc
 5580              		@ args = 0, pretend = 0, frame = 0
 5581              		@ frame_needed = 0, uses_anonymous_args = 0
2032:os/queue.c    **** 
 5582              		.loc 1 2032 5 view .LVU1633
2034:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
 5583              		.loc 1 2034 5 view .LVU1634
 5584 0000 38B1     		cbz	r0, .L427
2031:os/queue.c    ****     Queue_t * const pxQueue = xQueue;
 5585              		.loc 1 2031 1 is_stmt 0 discriminator 2 view .LVU1635
 5586 0002 10B5     		push	{r4, lr}
 5587              	.LCFI60:
 5588              		.cfi_def_cfa_offset 8
 5589              		.cfi_offset 4, -8
 5590              		.cfi_offset 14, -4
 5591 0004 0446     		mov	r4, r0
2034:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
 5592              		.loc 1 2034 28 is_stmt 1 discriminator 2 view .LVU1636
2035:os/queue.c    **** 
 5593              		.loc 1 2035 33 discriminator 2 view .LVU1637
2039:os/queue.c    ****         }
 5594              		.loc 1 2039 13 discriminator 2 view .LVU1638
 5595 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 5596              	.LVL436:
2053:os/queue.c    ****             {
 5597              		.loc 1 2053 13 discriminator 2 view .LVU1639
2053:os/queue.c    ****             {
 5598              		.loc 1 2053 24 is_stmt 0 discriminator 2 view .LVU1640
 5599 000a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
2053:os/queue.c    ****             {
 5600              		.loc 1 2053 15 discriminator 2 view .LVU1641
 5601 000e 5BB1     		cbz	r3, .L428
 5602              	.L421:
2069:os/queue.c    **** /*-----------------------------------------------------------*/
 5603              		.loc 1 2069 1 view .LVU1642
 5604 0010 10BD     		pop	{r4, pc}
 5605              	.LVL437:
 5606              	.L427:
 5607              	.LCFI61:
 5608              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 178


 5609              		.cfi_restore 4
 5610              		.cfi_restore 14
2034:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
 5611              		.loc 1 2034 5 is_stmt 1 view .LVU1643
 5612              	.LBB285:
 5613              	.LBI285:
 193:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     {
 5614              		.loc 2 193 34 view .LVU1644
 5615              	.LBB286:
 195:os/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 5616              		.loc 2 195 9 view .LVU1645
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5617              		.loc 2 197 9 view .LVU1646
 5618              		.syntax unified
 5619              	@ 197 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 5620 0012 4FF05003 			mov r3, #80												
 5621 0016 72B6     		cpsid i													
 5622 0018 83F31188 		msr basepri, r3											
 5623 001c BFF36F8F 		isb														
 5624 0020 BFF34F8F 		dsb														
 5625 0024 62B6     		cpsie i													
 5626              	
 5627              	@ 0 "" 2
 5628              	.LVL438:
 5629              		.thumb
 5630              		.syntax unified
 5631              	.L423:
 197:os/portable/GCC/ARM_CM7/r0p1/portmacro.h ****         (
 5632              		.loc 2 197 9 is_stmt 0 view .LVU1647
 5633              	.LBE286:
 5634              	.LBE285:
2034:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
 5635              		.loc 1 2034 5 is_stmt 1 discriminator 1 view .LVU1648
2034:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
 5636              		.loc 1 2034 5 discriminator 1 view .LVU1649
2034:os/queue.c    ****     traceQUEUE_DELETE( pxQueue );
 5637              		.loc 1 2034 5 discriminator 1 view .LVU1650
 5638 0026 FEE7     		b	.L423
 5639              	.LVL439:
 5640              	.L428:
 5641              	.LCFI62:
 5642              		.cfi_def_cfa_offset 8
 5643              		.cfi_offset 4, -8
 5644              		.cfi_offset 14, -4
2055:os/queue.c    ****             }
 5645              		.loc 1 2055 17 view .LVU1651
 5646 0028 2046     		mov	r0, r4
 5647 002a FFF7FEFF 		bl	vPortFree
 5648              	.LVL440:
2059:os/queue.c    ****             }
 5649              		.loc 1 2059 41 view .LVU1652
2069:os/queue.c    **** /*-----------------------------------------------------------*/
 5650              		.loc 1 2069 1 is_stmt 0 view .LVU1653
 5651 002e EFE7     		b	.L421
 5652              		.cfi_endproc
 5653              	.LFE28:
 5655              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 179


 5656              		.align	1
 5657              		.global	vQueueWaitForMessageRestricted
 5658              		.syntax unified
 5659              		.thumb
 5660              		.thumb_func
 5661              		.fpu fpv5-d16
 5663              	vQueueWaitForMessageRestricted:
 5664              	.LVL441:
 5665              	.LFB43:
2816:os/queue.c    **** 
2817:os/queue.c    **** #endif /* configQUEUE_REGISTRY_SIZE */
2818:os/queue.c    **** /*-----------------------------------------------------------*/
2819:os/queue.c    **** 
2820:os/queue.c    **** #if ( configUSE_TIMERS == 1 )
2821:os/queue.c    **** 
2822:os/queue.c    ****     void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
2823:os/queue.c    ****                                          TickType_t xTicksToWait,
2824:os/queue.c    ****                                          const BaseType_t xWaitIndefinitely )
2825:os/queue.c    ****     {
 5666              		.loc 1 2825 5 is_stmt 1 view -0
 5667              		.cfi_startproc
 5668              		@ args = 0, pretend = 0, frame = 0
 5669              		@ frame_needed = 0, uses_anonymous_args = 0
 5670              		.loc 1 2825 5 is_stmt 0 view .LVU1655
 5671 0000 70B5     		push	{r4, r5, r6, lr}
 5672              	.LCFI63:
 5673              		.cfi_def_cfa_offset 16
 5674              		.cfi_offset 4, -16
 5675              		.cfi_offset 5, -12
 5676              		.cfi_offset 6, -8
 5677              		.cfi_offset 14, -4
 5678 0002 0446     		mov	r4, r0
 5679 0004 0D46     		mov	r5, r1
 5680 0006 1646     		mov	r6, r2
2826:os/queue.c    ****         Queue_t * const pxQueue = xQueue;
 5681              		.loc 1 2826 9 is_stmt 1 view .LVU1656
 5682              	.LVL442:
2827:os/queue.c    **** 
2828:os/queue.c    ****         /* This function should not be called by application code hence the
2829:os/queue.c    ****          * 'Restricted' in its name.  It is not part of the public API.  It is
2830:os/queue.c    ****          * designed for use by kernel code, and has special calling requirements.
2831:os/queue.c    ****          * It can result in vListInsert() being called on a list that can only
2832:os/queue.c    ****          * possibly ever have one item in it, so the list will be fast, but even
2833:os/queue.c    ****          * so it should be called with the scheduler locked and not from a critical
2834:os/queue.c    ****          * section. */
2835:os/queue.c    **** 
2836:os/queue.c    ****         /* Only do anything if there are no messages in the queue.  This function
2837:os/queue.c    ****          *  will not actually cause the task to block, just place it on a blocked
2838:os/queue.c    ****          *  list.  It will not block until the scheduler is unlocked - at which
2839:os/queue.c    ****          *  time a yield will be performed.  If an item is added to the queue while
2840:os/queue.c    ****          *  the queue is locked, and the calling task blocks on the queue, then the
2841:os/queue.c    ****          *  calling task will be immediately unblocked when the queue is unlocked. */
2842:os/queue.c    ****         prvLockQueue( pxQueue );
 5683              		.loc 1 2842 9 view .LVU1657
 5684 0008 FFF7FEFF 		bl	vPortEnterCritical
 5685              	.LVL443:
 5686              		.loc 1 2842 9 view .LVU1658
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 180


 5687 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 5688 0010 5BB2     		sxtb	r3, r3
 5689 0012 B3F1FF3F 		cmp	r3, #-1
 5690 0016 0DD0     		beq	.L434
 5691              	.L430:
 5692              		.loc 1 2842 9 discriminator 3 view .LVU1659
 5693 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 5694 001c 5BB2     		sxtb	r3, r3
 5695 001e B3F1FF3F 		cmp	r3, #-1
 5696 0022 0BD0     		beq	.L435
 5697              	.L431:
 5698              		.loc 1 2842 9 discriminator 6 view .LVU1660
 5699 0024 FFF7FEFF 		bl	vPortExitCritical
 5700              	.LVL444:
2843:os/queue.c    **** 
2844:os/queue.c    ****         if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 5701              		.loc 1 2844 9 discriminator 6 view .LVU1661
 5702              		.loc 1 2844 20 is_stmt 0 discriminator 6 view .LVU1662
 5703 0028 A36B     		ldr	r3, [r4, #56]
 5704              		.loc 1 2844 11 discriminator 6 view .LVU1663
 5705 002a 5BB1     		cbz	r3, .L436
 5706              	.L432:
2845:os/queue.c    ****         {
2846:os/queue.c    ****             /* There is nothing in the queue, block for the specified period. */
2847:os/queue.c    ****             vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xW
2848:os/queue.c    ****         }
2849:os/queue.c    ****         else
2850:os/queue.c    ****         {
2851:os/queue.c    ****             mtCOVERAGE_TEST_MARKER();
 5707              		.loc 1 2851 37 is_stmt 1 view .LVU1664
2852:os/queue.c    ****         }
2853:os/queue.c    **** 
2854:os/queue.c    ****         prvUnlockQueue( pxQueue );
 5708              		.loc 1 2854 9 view .LVU1665
 5709 002c 2046     		mov	r0, r4
 5710 002e FFF7FEFF 		bl	prvUnlockQueue
 5711              	.LVL445:
2855:os/queue.c    ****     }
 5712              		.loc 1 2855 5 is_stmt 0 view .LVU1666
 5713 0032 70BD     		pop	{r4, r5, r6, pc}
 5714              	.LVL446:
 5715              	.L434:
2842:os/queue.c    **** 
 5716              		.loc 1 2842 9 is_stmt 1 discriminator 1 view .LVU1667
 5717 0034 0023     		movs	r3, #0
 5718 0036 84F84430 		strb	r3, [r4, #68]
 5719 003a EDE7     		b	.L430
 5720              	.L435:
2842:os/queue.c    **** 
 5721              		.loc 1 2842 9 discriminator 4 view .LVU1668
 5722 003c 0023     		movs	r3, #0
 5723 003e 84F84530 		strb	r3, [r4, #69]
 5724 0042 EFE7     		b	.L431
 5725              	.L436:
2847:os/queue.c    ****         }
 5726              		.loc 1 2847 13 view .LVU1669
 5727 0044 3246     		mov	r2, r6
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 181


 5728 0046 2946     		mov	r1, r5
 5729 0048 04F12400 		add	r0, r4, #36
 5730 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 5731              	.LVL447:
 5732 0050 ECE7     		b	.L432
 5733              		.cfi_endproc
 5734              	.LFE43:
 5736              		.comm	xQueueRegistry,64,4
 5737              		.text
 5738              	.Letext0:
 5739              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 5740              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5741              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5742              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5743              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5744              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5745              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5746              		.file 10 "user/Inc/FreeRTOSConfig.h"
 5747              		.file 11 "os/include/FreeRTOS.h"
 5748              		.file 12 "os/include/list.h"
 5749              		.file 13 "os/include/task.h"
 5750              		.file 14 "os/include/queue.h"
 5751              		.file 15 "os/include/portable.h"
 5752              		.file 16 "<built-in>"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 182


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:17     .text.prvGetDisinheritPriorityAfterTimeout:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:24     .text.prvGetDisinheritPriorityAfterTimeout:00000000 prvGetDisinheritPriorityAfterTimeout
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:59     .text.prvIsQueueFull:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:65     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:113    .text.prvIsQueueEmpty:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:119    .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:164    .text.prvCopyDataToQueue:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:170    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:327    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:333    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:394    .text.prvUnlockQueue:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:400    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:527    .text.xQueueGenericReset:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:534    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:678    .text.xQueueGenericReset:00000084 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:683    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:689    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:749    .text.xQueueGenericCreateStatic:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:756    .text.xQueueGenericCreateStatic:00000000 xQueueGenericCreateStatic
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:987    .text.xQueueGenericCreate:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:994    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1170   .text.xQueueGetMutexHolder:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1177   .text.xQueueGetMutexHolder:00000000 xQueueGetMutexHolder
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1265   .text.xQueueGetMutexHolderFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1272   .text.xQueueGetMutexHolderFromISR:00000000 xQueueGetMutexHolderFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1336   .text.xQueueCreateCountingSemaphoreStatic:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1343   .text.xQueueCreateCountingSemaphoreStatic:00000000 xQueueCreateCountingSemaphoreStatic
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1465   .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1472   .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1581   .text.xQueueGenericSend:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:1588   .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2007   .text.xQueueGenericSend:0000018c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2012   .text.prvInitialiseMutex:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2018   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2066   .text.xQueueCreateMutex:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2073   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2112   .text.xQueueCreateMutexStatic:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2119   .text.xQueueCreateMutexStatic:00000000 xQueueCreateMutexStatic
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2171   .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2178   .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2279   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2286   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2590   .text.xQueueGiveFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2597   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2912   .text.xQueueReceive:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:2919   .text.xQueueReceive:00000000 xQueueReceive
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3298   .text.xQueueReceive:00000164 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3303   .text.xQueueSemaphoreTake:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3310   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3785   .text.xQueueSemaphoreTake:000001b0 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3790   .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3797   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3913   .text.xQueuePeek:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:3920   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4301   .text.xQueuePeek:00000164 $d
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 183


C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4306   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4313   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4576   .text.xQueuePeekFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4583   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4790   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4797   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4867   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4874   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4948   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:4955   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5009   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5016   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5034   .text.vQueueSetQueueNumber:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5041   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5058   .text.ucQueueGetQueueType:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5065   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5083   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5090   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5154   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5161   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5228   .text.vQueueAddToRegistry:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5235   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5366   .text.vQueueAddToRegistry:0000005c $d
                            *COM*:00000040 xQueueRegistry
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5371   .text.pcQueueGetName:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5378   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5464   .text.pcQueueGetName:0000003c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5469   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5476   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5563   .text.vQueueUnregisterQueue:00000044 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5568   .text.vQueueDelete:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5575   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5656   .text.vQueueWaitForMessageRestricted:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s:5663   .text.vQueueWaitForMessageRestricted:00000000 vQueueWaitForMessageRestricted

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
xTaskRemoveFromEventList
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccYqP0W5.s 			page 184


