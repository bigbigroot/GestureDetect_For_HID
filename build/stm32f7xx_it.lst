ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB148:
  27              		.file 1 "user/Src/stm32f7xx_it.c"
   1:user/Src/stm32f7xx_it.c **** /**
   2:user/Src/stm32f7xx_it.c ****   ******************************************************************************
   3:user/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   4:user/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   5:user/Src/stm32f7xx_it.c ****   ******************************************************************************
   6:user/Src/stm32f7xx_it.c ****   * @attention
   7:user/Src/stm32f7xx_it.c ****   *
   8:user/Src/stm32f7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
   9:user/Src/stm32f7xx_it.c ****   * All rights reserved.</center></h2>
  10:user/Src/stm32f7xx_it.c ****   *
  11:user/Src/stm32f7xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  12:user/Src/stm32f7xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  13:user/Src/stm32f7xx_it.c ****   * the License. You may obtain a copy of the License at:
  14:user/Src/stm32f7xx_it.c ****   *                             www.st.com/SLA0044
  15:user/Src/stm32f7xx_it.c ****   *
  16:user/Src/stm32f7xx_it.c ****   ******************************************************************************
  17:user/Src/stm32f7xx_it.c ****   */
  18:user/Src/stm32f7xx_it.c **** 
  19:user/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  20:user/Src/stm32f7xx_it.c **** #include <stdio.h>
  21:user/Src/stm32f7xx_it.c **** #include "main.h"
  22:user/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  23:user/Src/stm32f7xx_it.c **** #include "FreeRTOS.h"
  24:user/Src/stm32f7xx_it.c **** #include "task.h"
  25:user/Src/stm32f7xx_it.c **** 
  26:user/Src/stm32f7xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  27:user/Src/stm32f7xx_it.c **** 
  28:user/Src/stm32f7xx_it.c **** /******************************************************************************/
  29:user/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  30:user/Src/stm32f7xx_it.c **** /******************************************************************************/
  31:user/Src/stm32f7xx_it.c **** /**
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 2


  32:user/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  33:user/Src/stm32f7xx_it.c ****   */
  34:user/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  35:user/Src/stm32f7xx_it.c **** {
  28              		.loc 1 35 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  36:user/Src/stm32f7xx_it.c **** 
  37:user/Src/stm32f7xx_it.c **** }
  33              		.loc 1 37 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE148:
  38              		.section	.rodata.HardFault_Handler.str1.4,"aMS",%progbits,1
  39              		.align	2
  40              	.LC0:
  41 0000 48617264 		.ascii	"Hard fault\000"
  41      20666175 
  41      6C7400
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	HardFault_Handler:
  51              	.LFB149:
  38:user/Src/stm32f7xx_it.c **** 
  39:user/Src/stm32f7xx_it.c **** /**
  40:user/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  41:user/Src/stm32f7xx_it.c ****   */
  42:user/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  43:user/Src/stm32f7xx_it.c **** {
  52              		.loc 1 43 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 08B5     		push	{r3, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 3, -8
  61              		.cfi_offset 14, -4
  44:user/Src/stm32f7xx_it.c ****   printf("Hard fault");
  62              		.loc 1 44 3 view .LVU3
  63 0002 0248     		ldr	r0, .L5
  64 0004 FFF7FEFF 		bl	printf
  65              	.LVL0:
  66              	.L3:
  45:user/Src/stm32f7xx_it.c ****   while (1)
  67              		.loc 1 45 3 discriminator 1 view .LVU4
  46:user/Src/stm32f7xx_it.c ****   {
  47:user/Src/stm32f7xx_it.c ****   }
  68              		.loc 1 47 3 discriminator 1 view .LVU5
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 3


  45:user/Src/stm32f7xx_it.c ****   while (1)
  69              		.loc 1 45 9 discriminator 1 view .LVU6
  70 0008 FEE7     		b	.L3
  71              	.L6:
  72 000a 00BF     		.align	2
  73              	.L5:
  74 000c 00000000 		.word	.LC0
  75              		.cfi_endproc
  76              	.LFE149:
  78              		.section	.rodata.MemManage_Handler.str1.4,"aMS",%progbits,1
  79              		.align	2
  80              	.LC1:
  81 0000 4D656D6F 		.ascii	"Memory management fault\000"
  81      7279206D 
  81      616E6167 
  81      656D656E 
  81      74206661 
  82              		.section	.text.MemManage_Handler,"ax",%progbits
  83              		.align	1
  84              		.global	MemManage_Handler
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv5-d16
  90              	MemManage_Handler:
  91              	.LFB150:
  48:user/Src/stm32f7xx_it.c **** }
  49:user/Src/stm32f7xx_it.c **** 
  50:user/Src/stm32f7xx_it.c **** /**
  51:user/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
  52:user/Src/stm32f7xx_it.c ****   */
  53:user/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
  54:user/Src/stm32f7xx_it.c **** {
  92              		.loc 1 54 1 view -0
  93              		.cfi_startproc
  94              		@ Volatile: function does not return.
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              	.LCFI1:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
  55:user/Src/stm32f7xx_it.c ****   printf("Memory management fault");
 102              		.loc 1 55 3 view .LVU8
 103 0002 0248     		ldr	r0, .L10
 104 0004 FFF7FEFF 		bl	printf
 105              	.LVL1:
 106              	.L8:
  56:user/Src/stm32f7xx_it.c ****   while (1)
 107              		.loc 1 56 3 discriminator 1 view .LVU9
  57:user/Src/stm32f7xx_it.c ****   {
  58:user/Src/stm32f7xx_it.c ****   }
 108              		.loc 1 58 3 discriminator 1 view .LVU10
  56:user/Src/stm32f7xx_it.c ****   while (1)
 109              		.loc 1 56 9 discriminator 1 view .LVU11
 110 0008 FEE7     		b	.L8
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 4


 111              	.L11:
 112 000a 00BF     		.align	2
 113              	.L10:
 114 000c 00000000 		.word	.LC1
 115              		.cfi_endproc
 116              	.LFE150:
 118              		.section	.rodata.BusFault_Handler.str1.4,"aMS",%progbits,1
 119              		.align	2
 120              	.LC2:
 121 0000 6D656D6F 		.ascii	"memory access fault\000"
 121      72792061 
 121      63636573 
 121      73206661 
 121      756C7400 
 122              		.section	.text.BusFault_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	BusFault_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv5-d16
 130              	BusFault_Handler:
 131              	.LFB151:
  59:user/Src/stm32f7xx_it.c **** }
  60:user/Src/stm32f7xx_it.c **** 
  61:user/Src/stm32f7xx_it.c **** /**
  62:user/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
  63:user/Src/stm32f7xx_it.c ****   */
  64:user/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
  65:user/Src/stm32f7xx_it.c **** {
 132              		.loc 1 65 1 view -0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 08B5     		push	{r3, lr}
 138              	.LCFI2:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
 141              		.cfi_offset 14, -4
  66:user/Src/stm32f7xx_it.c ****   printf("memory access fault");
 142              		.loc 1 66 3 view .LVU13
 143 0002 0248     		ldr	r0, .L15
 144 0004 FFF7FEFF 		bl	printf
 145              	.LVL2:
 146              	.L13:
  67:user/Src/stm32f7xx_it.c ****   while (1)
 147              		.loc 1 67 3 discriminator 1 view .LVU14
  68:user/Src/stm32f7xx_it.c ****   {
  69:user/Src/stm32f7xx_it.c ****   }
 148              		.loc 1 69 3 discriminator 1 view .LVU15
  67:user/Src/stm32f7xx_it.c ****   while (1)
 149              		.loc 1 67 9 discriminator 1 view .LVU16
 150 0008 FEE7     		b	.L13
 151              	.L16:
 152 000a 00BF     		.align	2
 153              	.L15:
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 5


 154 000c 00000000 		.word	.LC2
 155              		.cfi_endproc
 156              	.LFE151:
 158              		.section	.rodata.UsageFault_Handler.str1.4,"aMS",%progbits,1
 159              		.align	2
 160              	.LC3:
 161 0000 696C6C65 		.ascii	"illegal instruction\000"
 161      67616C20 
 161      696E7374 
 161      72756374 
 161      696F6E00 
 162              		.section	.text.UsageFault_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	UsageFault_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv5-d16
 170              	UsageFault_Handler:
 171              	.LFB152:
  70:user/Src/stm32f7xx_it.c **** }
  71:user/Src/stm32f7xx_it.c **** 
  72:user/Src/stm32f7xx_it.c **** /**
  73:user/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
  74:user/Src/stm32f7xx_it.c ****   */
  75:user/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
  76:user/Src/stm32f7xx_it.c **** {
 172              		.loc 1 76 1 view -0
 173              		.cfi_startproc
 174              		@ Volatile: function does not return.
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
  77:user/Src/stm32f7xx_it.c ****   printf("illegal instruction");
 182              		.loc 1 77 3 view .LVU18
 183 0002 0248     		ldr	r0, .L20
 184 0004 FFF7FEFF 		bl	printf
 185              	.LVL3:
 186              	.L18:
  78:user/Src/stm32f7xx_it.c ****   while (1)
 187              		.loc 1 78 3 discriminator 1 view .LVU19
  79:user/Src/stm32f7xx_it.c ****   {
  80:user/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
  81:user/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
  82:user/Src/stm32f7xx_it.c ****   }
 188              		.loc 1 82 3 discriminator 1 view .LVU20
  78:user/Src/stm32f7xx_it.c ****   while (1)
 189              		.loc 1 78 9 discriminator 1 view .LVU21
 190 0008 FEE7     		b	.L18
 191              	.L21:
 192 000a 00BF     		.align	2
 193              	.L20:
 194 000c 00000000 		.word	.LC3
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 6


 195              		.cfi_endproc
 196              	.LFE152:
 198              		.section	.text.DebugMon_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	DebugMon_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	DebugMon_Handler:
 207              	.LFB153:
  83:user/Src/stm32f7xx_it.c **** }
  84:user/Src/stm32f7xx_it.c **** 
  85:user/Src/stm32f7xx_it.c **** /**
  86:user/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
  87:user/Src/stm32f7xx_it.c ****   */
  88:user/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
  89:user/Src/stm32f7xx_it.c **** {
 208              		.loc 1 89 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
  90:user/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
  91:user/Src/stm32f7xx_it.c **** 
  92:user/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
  93:user/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
  94:user/Src/stm32f7xx_it.c **** 
  95:user/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
  96:user/Src/stm32f7xx_it.c **** }
 213              		.loc 1 96 1 view .LVU23
 214 0000 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE153:
 218              		.section	.text.SysTick_Handler,"ax",%progbits
 219              		.align	1
 220              		.global	SysTick_Handler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv5-d16
 226              	SysTick_Handler:
 227              	.LFB154:
  97:user/Src/stm32f7xx_it.c **** 
  98:user/Src/stm32f7xx_it.c **** /**
  99:user/Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 100:user/Src/stm32f7xx_it.c ****   */
 101:user/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 102:user/Src/stm32f7xx_it.c **** {
 228              		.loc 1 102 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 7


 236              		.cfi_offset 14, -4
 103:user/Src/stm32f7xx_it.c ****   HAL_IncTick();
 237              		.loc 1 103 3 view .LVU25
 238 0002 FFF7FEFF 		bl	HAL_IncTick
 239              	.LVL4:
 104:user/Src/stm32f7xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 105:user/Src/stm32f7xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 240              		.loc 1 105 3 view .LVU26
 241              		.loc 1 105 7 is_stmt 0 view .LVU27
 242 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
 243              	.LVL5:
 244              		.loc 1 105 6 view .LVU28
 245 000a 0128     		cmp	r0, #1
 246 000c 00D1     		bne	.L26
 247              	.L23:
 106:user/Src/stm32f7xx_it.c ****   {
 107:user/Src/stm32f7xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 108:user/Src/stm32f7xx_it.c ****   xPortSysTickHandler();
 109:user/Src/stm32f7xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 110:user/Src/stm32f7xx_it.c ****   }
 111:user/Src/stm32f7xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 112:user/Src/stm32f7xx_it.c **** }
 248              		.loc 1 112 1 view .LVU29
 249 000e 08BD     		pop	{r3, pc}
 250              	.L26:
 108:user/Src/stm32f7xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 251              		.loc 1 108 3 is_stmt 1 view .LVU30
 252 0010 FFF7FEFF 		bl	xPortSysTickHandler
 253              	.LVL6:
 254              		.loc 1 112 1 is_stmt 0 view .LVU31
 255 0014 FBE7     		b	.L23
 256              		.cfi_endproc
 257              	.LFE154:
 259              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 260              		.align	1
 261              		.global	OTG_FS_IRQHandler
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv5-d16
 267              	OTG_FS_IRQHandler:
 268              	.LFB155:
 113:user/Src/stm32f7xx_it.c **** 
 114:user/Src/stm32f7xx_it.c **** /******************************************************************************/
 115:user/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 116:user/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 117:user/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 118:user/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 119:user/Src/stm32f7xx_it.c **** /******************************************************************************/
 120:user/Src/stm32f7xx_it.c **** 
 121:user/Src/stm32f7xx_it.c **** /**
 122:user/Src/stm32f7xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 123:user/Src/stm32f7xx_it.c ****   */
 124:user/Src/stm32f7xx_it.c **** void OTG_FS_IRQHandler(void)
 125:user/Src/stm32f7xx_it.c **** {
 269              		.loc 1 125 1 is_stmt 1 view -0
 270              		.cfi_startproc
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 8


 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 08B5     		push	{r3, lr}
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
 126:user/Src/stm32f7xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 278              		.loc 1 126 3 view .LVU33
 279 0002 0248     		ldr	r0, .L29
 280 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 281              	.LVL7:
 127:user/Src/stm32f7xx_it.c **** }
 282              		.loc 1 127 1 is_stmt 0 view .LVU34
 283 0008 08BD     		pop	{r3, pc}
 284              	.L30:
 285 000a 00BF     		.align	2
 286              	.L29:
 287 000c 00000000 		.word	hpcd_USB_OTG_FS
 288              		.cfi_endproc
 289              	.LFE155:
 291              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 292              		.align	1
 293              		.global	EXTI15_10_IRQHandler
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv5-d16
 299              	EXTI15_10_IRQHandler:
 300              	.LFB156:
 128:user/Src/stm32f7xx_it.c **** 
 129:user/Src/stm32f7xx_it.c **** void EXTI15_10_IRQHandler(void)
 130:user/Src/stm32f7xx_it.c **** {
 301              		.loc 1 130 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 08B5     		push	{r3, lr}
 306              	.LCFI6:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 131:user/Src/stm32f7xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(USER_Btn_Pin);
 310              		.loc 1 131 3 view .LVU36
 311 0002 4FF40050 		mov	r0, #8192
 312 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 313              	.LVL8:
 132:user/Src/stm32f7xx_it.c **** }
 314              		.loc 1 132 1 is_stmt 0 view .LVU37
 315 000a 08BD     		pop	{r3, pc}
 316              		.cfi_endproc
 317              	.LFE156:
 319              		.text
 320              	.Letext0:
 321              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 322              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 323              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 9


 324              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 325              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 326              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 327              		.file 8 "dev/CMSIS/Include/core_cm7.h"
 328              		.file 9 "dev/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 329              		.file 10 "dev/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 330              		.file 11 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 331              		.file 12 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 332              		.file 13 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pcd.h"
 333              		.file 14 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 334              		.file 15 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 335              		.file 16 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 336              		.file 17 "os/include/task.h"
 337              		.file 18 "user/Inc/FreeRTOSConfig.h"
 338              		.file 19 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:17     .text.NMI_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:39     .rodata.HardFault_Handler.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:43     .text.HardFault_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:74     .text.HardFault_Handler:0000000c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:79     .rodata.MemManage_Handler.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:83     .text.MemManage_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:90     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:114    .text.MemManage_Handler:0000000c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:119    .rodata.BusFault_Handler.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:123    .text.BusFault_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:130    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:154    .text.BusFault_Handler:0000000c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:159    .rodata.UsageFault_Handler.str1.4:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:163    .text.UsageFault_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:170    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:194    .text.UsageFault_Handler:0000000c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:199    .text.DebugMon_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:206    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:219    .text.SysTick_Handler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:226    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:260    .text.OTG_FS_IRQHandler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:267    .text.OTG_FS_IRQHandler:00000000 OTG_FS_IRQHandler
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:287    .text.OTG_FS_IRQHandler:0000000c $d
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:292    .text.EXTI15_10_IRQHandler:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\ccba5iBA.s:299    .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler

UNDEFINED SYMBOLS
printf
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
HAL_GPIO_EXTI_IRQHandler
