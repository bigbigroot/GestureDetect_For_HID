ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"freertos.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  17              		.align	1
  18              		.global	vApplicationGetIdleTaskMemory
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	vApplicationGetIdleTaskMemory:
  26              	.LVL0:
  27              	.LFB145:
  28              		.file 1 "user/Src/freertos.c"
   1:user/Src/freertos.c **** /**
   2:user/Src/freertos.c ****   ******************************************************************************
   3:user/Src/freertos.c ****   * File Name          : freertos.c
   4:user/Src/freertos.c ****   * Description        : Code for freertos applications
   5:user/Src/freertos.c ****   ******************************************************************************
   6:user/Src/freertos.c ****   * @attention
   7:user/Src/freertos.c ****   *
   8:user/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
   9:user/Src/freertos.c ****   * All rights reserved.</center></h2>
  10:user/Src/freertos.c ****   *
  11:user/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  12:user/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  13:user/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  14:user/Src/freertos.c ****   *                             www.st.com/SLA0044
  15:user/Src/freertos.c ****   *
  16:user/Src/freertos.c ****   ******************************************************************************
  17:user/Src/freertos.c ****   */
  18:user/Src/freertos.c **** 
  19:user/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  20:user/Src/freertos.c **** #include "FreeRTOS.h"
  21:user/Src/freertos.c **** #include "task.h"
  22:user/Src/freertos.c **** #include "main.h"
  23:user/Src/freertos.c **** /* ARMv7-m instruction */
  24:user/Src/freertos.c **** #include "core_cm7.h"
  25:user/Src/freertos.c **** 
  26:user/Src/freertos.c **** 
  27:user/Src/freertos.c **** /* Hook prototypes */
  28:user/Src/freertos.c **** void vApplicationIdleHook(void);
  29:user/Src/freertos.c **** 
  30:user/Src/freertos.c **** /* Idle task control block and stack */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s 			page 2


  31:user/Src/freertos.c **** static StaticTask_t Idle_TCB;
  32:user/Src/freertos.c **** static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];
  33:user/Src/freertos.c **** 
  34:user/Src/freertos.c **** /* Timer task control block and stack */
  35:user/Src/freertos.c **** static StaticTask_t Timer_TCB;
  36:user/Src/freertos.c **** static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];
  37:user/Src/freertos.c **** 
  38:user/Src/freertos.c **** /*
  39:user/Src/freertos.c ****   vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  40:user/Src/freertos.c ****   equals to 1 and is required for static memory allocation support.
  41:user/Src/freertos.c **** */
  42:user/Src/freertos.c **** void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  29              		.loc 1 42 144 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  43:user/Src/freertos.c ****   *ppxIdleTaskTCBBuffer   = &Idle_TCB;
  34              		.loc 1 43 3 view .LVU1
  35              		.loc 1 43 27 is_stmt 0 view .LVU2
  36 0000 034B     		ldr	r3, .L2
  37 0002 0360     		str	r3, [r0]
  44:user/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  38              		.loc 1 44 3 is_stmt 1 view .LVU3
  39              		.loc 1 44 27 is_stmt 0 view .LVU4
  40 0004 034B     		ldr	r3, .L2+4
  41 0006 0B60     		str	r3, [r1]
  45:user/Src/freertos.c ****   *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
  42              		.loc 1 45 3 is_stmt 1 view .LVU5
  43              		.loc 1 45 27 is_stmt 0 view .LVU6
  44 0008 8023     		movs	r3, #128
  45 000a 1360     		str	r3, [r2]
  46:user/Src/freertos.c **** }
  46              		.loc 1 46 1 view .LVU7
  47 000c 7047     		bx	lr
  48              	.L3:
  49 000e 00BF     		.align	2
  50              	.L2:
  51 0010 00000000 		.word	.LANCHOR0
  52 0014 00000000 		.word	.LANCHOR1
  53              		.cfi_endproc
  54              	.LFE145:
  56              		.section	.text.vApplicationGetTimerTaskMemory,"ax",%progbits
  57              		.align	1
  58              		.global	vApplicationGetTimerTaskMemory
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv5-d16
  64              	vApplicationGetTimerTaskMemory:
  65              	.LVL1:
  66              	.LFB146:
  47:user/Src/freertos.c **** 
  48:user/Src/freertos.c **** /*
  49:user/Src/freertos.c ****   vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  50:user/Src/freertos.c ****   equals to 1 and is required for static memory allocation support.
  51:user/Src/freertos.c **** */
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s 			page 3


  52:user/Src/freertos.c **** void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
  67              		.loc 1 52 148 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  53:user/Src/freertos.c ****   *ppxTimerTaskTCBBuffer   = &Timer_TCB;
  72              		.loc 1 53 3 view .LVU9
  73              		.loc 1 53 28 is_stmt 0 view .LVU10
  74 0000 034B     		ldr	r3, .L5
  75 0002 0360     		str	r3, [r0]
  54:user/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  76              		.loc 1 54 3 is_stmt 1 view .LVU11
  77              		.loc 1 54 28 is_stmt 0 view .LVU12
  78 0004 034B     		ldr	r3, .L5+4
  79 0006 0B60     		str	r3, [r1]
  55:user/Src/freertos.c ****   *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
  80              		.loc 1 55 3 is_stmt 1 view .LVU13
  81              		.loc 1 55 28 is_stmt 0 view .LVU14
  82 0008 4FF48073 		mov	r3, #256
  83 000c 1360     		str	r3, [r2]
  56:user/Src/freertos.c **** }
  84              		.loc 1 56 1 view .LVU15
  85 000e 7047     		bx	lr
  86              	.L6:
  87              		.align	2
  88              	.L5:
  89 0010 00000000 		.word	.LANCHOR2
  90 0014 00000000 		.word	.LANCHOR3
  91              		.cfi_endproc
  92              	.LFE146:
  94              		.section	.text.vApplicationIdleHook,"ax",%progbits
  95              		.align	1
  96              		.weak	vApplicationIdleHook
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv5-d16
 102              	vApplicationIdleHook:
 103              	.LFB147:
  57:user/Src/freertos.c **** 
  58:user/Src/freertos.c **** /* USER CODE BEGIN 2 */
  59:user/Src/freertos.c **** __weak void vApplicationIdleHook( void )
  60:user/Src/freertos.c **** {
 104              		.loc 1 60 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
  61:user/Src/freertos.c ****    /* vApplicationIdleHook() will only be called if configUSE_IDLE_HOOK is set
  62:user/Src/freertos.c ****    to 1 in FreeRTOSConfig.h. It will be called on each iteration of the idle
  63:user/Src/freertos.c ****    task. It is essential that code added to this hook function never attempts
  64:user/Src/freertos.c ****    to block in any way (for example, call xQueueReceive() with a block time
  65:user/Src/freertos.c ****    specified, or call vTaskDelay()). If the application makes use of the
  66:user/Src/freertos.c ****    vTaskDelete() API function (as this demo application does) then it is also
  67:user/Src/freertos.c ****    important that vApplicationIdleHook() is permitted to return to its calling
  68:user/Src/freertos.c ****    function, because it is the responsibility of the idle task to clean up
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s 			page 4


  69:user/Src/freertos.c ****    memory allocated by the kernel to any task that has since been deleted. */
  70:user/Src/freertos.c ****   __WFI();
 109              		.loc 1 70 3 view .LVU17
 110              		.syntax unified
 111              	@ 70 "user/Src/freertos.c" 1
 112 0000 30BF     		wfi
 113              	@ 0 "" 2
  71:user/Src/freertos.c **** }
 114              		.loc 1 71 1 is_stmt 0 view .LVU18
 115              		.thumb
 116              		.syntax unified
 117 0002 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE147:
 121              		.section	.bss.Idle_Stack,"aw",%nobits
 122              		.align	2
 123              		.set	.LANCHOR1,. + 0
 126              	Idle_Stack:
 127 0000 00000000 		.space	512
 127      00000000 
 127      00000000 
 127      00000000 
 127      00000000 
 128              		.section	.bss.Idle_TCB,"aw",%nobits
 129              		.align	2
 130              		.set	.LANCHOR0,. + 0
 133              	Idle_TCB:
 134 0000 00000000 		.space	92
 134      00000000 
 134      00000000 
 134      00000000 
 134      00000000 
 135              		.section	.bss.Timer_Stack,"aw",%nobits
 136              		.align	2
 137              		.set	.LANCHOR3,. + 0
 140              	Timer_Stack:
 141 0000 00000000 		.space	1024
 141      00000000 
 141      00000000 
 141      00000000 
 141      00000000 
 142              		.section	.bss.Timer_TCB,"aw",%nobits
 143              		.align	2
 144              		.set	.LANCHOR2,. + 0
 147              	Timer_TCB:
 148 0000 00000000 		.space	92
 148      00000000 
 148      00000000 
 148      00000000 
 148      00000000 
 149              		.text
 150              	.Letext0:
 151              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 152              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 153              		.file 4 "os/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 154              		.file 5 "os/include/FreeRTOS.h"
 155              		.file 6 "user/Inc/FreeRTOSConfig.h"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s 			page 5


 156              		.file 7 "dev/CMSIS/Include/core_cm7.h"
 157              		.file 8 "dev/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 158              		.file 9 "dev/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:17     .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:25     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:51     .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:57     .text.vApplicationGetTimerTaskMemory:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:64     .text.vApplicationGetTimerTaskMemory:00000000 vApplicationGetTimerTaskMemory
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:89     .text.vApplicationGetTimerTaskMemory:00000010 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:95     .text.vApplicationIdleHook:00000000 $t
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:102    .text.vApplicationIdleHook:00000000 vApplicationIdleHook
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:122    .bss.Idle_Stack:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:126    .bss.Idle_Stack:00000000 Idle_Stack
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:129    .bss.Idle_TCB:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:133    .bss.Idle_TCB:00000000 Idle_TCB
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:136    .bss.Timer_Stack:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:140    .bss.Timer_Stack:00000000 Timer_Stack
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:143    .bss.Timer_TCB:00000000 $d
C:\Users\BIGBIG~1\AppData\Local\Temp\cc98gVYj.s:147    .bss.Timer_TCB:00000000 Timer_TCB

NO UNDEFINED SYMBOLS
