##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.10.0-B14] date: [Sat Oct 17 20:40:02 CEST 2020] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = gesture_hid


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = ../build

######################################
# source
######################################
# C sources
C_SOURCES =  \
boot/system_stm32f7xx.c \
user/Src/main.c \
user/Src/Gesture.c \
user/Src/freertos.c \
user/Src/stm32f7xx_it.c \
user/Src/stm32f7xx_hal_msp.c \
dev/BSP/6180A1/6180a1.c \
dev/BSP/board/uart.c \
dev/BSP/board/led.c \
dev/BSP/board/key.c \
dev/BSP/board/6180a1_i2c.c \
dev/BSP/board/watchdog.c \
dev/BSP/Components/vl6180/vl6180_api.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pcd.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pcd_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_usb.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_gpio.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_exti.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_tim.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_tim_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart_ex.c \
dev/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_iwdg.c \
lib/STM32_USB_Device_Library/Core/Src/usbd_core.c \
lib/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c \
lib/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c \
lib/STM32_USB_Device_Library/Class/HID/Src/usbd_hid.c \
lib/libc/syscalls.c \
os/croutine.c \
os/event_groups.c \
os/list.c \
os/queue.c \
os/stream_buffer.c \
os/tasks.c \
os/timers.c \
os/portable/MemMang/heap_4.c \
os/portable/GCC/ARM_CM7/r0p1/port.c \
usb/usb_device.c \
usb/usbd_desc.c \
usb/usbd_conf.c

# ASM sources
ASM_SOURCES =  \
boot/startup_stm32f767xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F767xx


# AS includes
AS_INCLUDES =  \
-Idev/CMSIS/Device/ST/STM32F7xx/Include

# C includes
C_INCLUDES =  \
-Iuser/Inc \
-Idev/BSP/6180A1 \
-Idev/BSP/board \
-Idev/BSP/Components/vl6180 \
-Idev/CMSIS/Include \
-Idev/CMSIS/Device/ST/STM32F7xx/Include \
-Idev/STM32F7xx_HAL_Driver/Inc \
-Idev/STM32F7xx_HAL_Driver/Inc/Legacy \
-Ilib/STM32_USB_Device_Library/Core/Inc \
-Ilib/STM32_USB_Device_Library/Class/HID/Inc \
-Ios/include \
-Ios/portable/GCC/ARM_CM7/r0p1 \
-Iusb

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F767ZITx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	rm $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
